{"version":3,"sources":["services/auth.service.js","components/ProjectView/Components/ProjectUI/Bottom/AdminButton/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/ApartmentContols/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/ButtonUI/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/FilterControls/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/Gallery/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/LocationControls/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/SunControls/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/UIButtons/index.jsx","components/ProjectView/Components/ProjectUI/AppUI/index.jsx","services/constant.service.js","pages/ProjectA.jsx","api/axios.config.js","helpers/history.js","helpers/WithAxios.js","context/UserContext.jsx","services/admin.service.js","hooks/useLoginCheck.js","pages/Admins.jsx","services/ga.service.js","components/DashboardItem/DataItems/ChartItem/ChartItem.js","pages/AnalyticClient.jsx","pages/Constants.jsx","services/utils.service.js","helpers/uploadMedia.js","components/ProjectFormFields.jsx","pages/CreateProject.jsx","components/ForgotPasswordModal.jsx","pages/Login.jsx","pages/ProjectDetails.jsx","pages/Projects.jsx","services/property.service.js","components/ProjectView/Components/PropertiesTable.jsx","pages/Properties.jsx","pages/PropertiesAdmin.jsx","pages/MediaAdmin.jsx","pages/PropertiesClient.jsx","pages/UIAdmin.jsx","App.js","reportWebVitals.js","index.js","services/project.service.js","layout/Layout.jsx"],"names":["AuthService","email","password","a","API","post","data","token","localStorage","removeItem","password2","username","get","MoreButton","styled","Button","props","adminSide","Overlay","div","AdminButton","uiData","setUiData","name","button","hideControls","useState","isModalOpen","setIsModalOpen","hide","type","shape","icon","MoreOutlined","onClick","title","open","footer","destroyOnClose","onCancel","labelCol","span","wrapperCol","onFinish","values","prevState","initialValues","Item","label","valuePropName","offset","htmlType","Container","Inner","Inner2","Top","Details","NameContainer","Name","Price","Availability","InfoContainer","Frontage","Depth","Stats","StatContainer","StatText","Bottom","ButtonContainer","getCustomColorsStyles","ButtonText","Stat","children","admin","hideHidden","style","position","PlayCircleOutlined","fontSize","ApartmentControls","isVisible","activeUI","includes","emitUIInteraction","backgroundColor","background","hex","size","EyeOutlined","TDTour","VTour","FloorPlan","ButtonUI","value","onUnclick","visible","isActive","filter","v","length","refinedTitle","tailLayout","SelectMulti","options","propValue","onChange","CheckableTag","checked","color","map","i","FilterControls","Form","useForm","form","layout","min","max","step","defaultValue","margin","range","draggableTrack","tooltipVisible","tooltipPlacement","resetFields","ResetFilters","setActiveUI","Gallery","project","tab","setTab","slide","setSlide","dimensionsW","setDimensionsW","ref","useRef","useEffect","getContainerSize","current","width","clientWidth","height","clientHeight","window","addEventListener","media","images","index","original","url","thumbnail","description","originalClass","thumbnailClass","renderItem","k","controls","preload","autoPlay","muted","src","class","href","target","rel","renderThumbInner","id","left","right","top","bottom","handleTabClick","newTab","className","undefined","items","showBullets","showFullscreenButton","showPlayButton","thumbnailPosition","onSlide","startIndex","LocationControls","Array","levelsCount","_level","Location","table","TR","tr","TD0","td","TD1","TD2","SunControls","time","Time","tooltip","formatter","SunPosition","UIButtons","HomeOutlined","Home","PictureOutlined","Nearby","SearchOutlined","Materials","Teleport","InteriorInfo","Discover","LevelView","ClockCircleOutlined","ButtonsContainer","AppUI","propsC","zIndex","textColor","buttonColor","buttonHoverColor","hover","ConstantService","put","ProjectA","setVideoInitialized","sizeContainerRef","containerRef","videoRef","webrtcClient","setWebrtcClient","webrtcClientInit","responseCallback","message","console","log","videoInitialized","args","address","arcwareAddress","packageId","arcwarePackageId","settings","autoplay","video","audio","sizeContainer","container","playOverlay","loader","applicationResponse","videoInitializeCallback","WebRTCClient","flex","newUI","axios","create","baseURL","withCredentials","interceptors","request","use","req","getItem","headers","error","Promise","reject","createBrowserHistory","WithAxios","useUser","isInitiated","logout","response","originalRequest","config","status","resolve","history","push","_retry","res","setItem","UserContext","createContext","UserProvider","authData","setAuthData","isLoggedIn","setIsLoggedIn","setIsInitiated","getTokenData","decoded","jwt_decode","Provider","setUserState","setUserInfo","authService","context","useContext","Error","delete","useLoginCheck","navigate","useNavigate","super","projectId","Admins","formRef","admins","setAdmins","editModalOpen","setEditModalOpen","adminService","getAdmin","then","createAdmin","toast","success","deleteAdmin","Layout","loading","display","onBack","boxShadow","overflow","padding","paddingTop","maxWidth","rules","required","placeholder","itemLayout","dataSource","sort","b","actions","overlay","onConfirm","okText","cancelText","danger","trigger","borderBottom","paddingLeft","Meta","locked","metrics","dimensions","period","start","finish","ChartItem","column","seconds","isDate","dataRefined","humanizeString","columnHeaders","replace","rows","moment","format","parseInt","chartType","legend","chartArea","allowHtml","AnalyticClient","useParams","setProject","dateData","setDateData","cityData","setCityData","deviceData","setDeviceData","sourceData","setSourceData","subtract","setPeriod","toString","projectService","getProject","getMetricData","gaService","getGA","catch","err","RangePicker","m","allowClear","textAlign","flexDirection","flexWrap","alignItems","justifyContent","xKey","valKey","Constants","constants","setConstants","constantService","getConstant","setFieldsValue","saveConstant","isVideo","isLogo","params","uploadMedia","cb","action","file","filename","onError","onProgress","onSuccess","utilsService","signUrl","signedRequest","s3res","Logo","customUploadClientLogo","image","setImage","setTimeout","maxHeight","LoadingOutlined","marginTop","customRequest","showUploadList","maxCount","getValueFromEvent","ProjectFormFields","extra","hidden","CreateProject","createProject","ForgotPasswordModal","isOpen","setIsOpen","forgotPassword","prefix","UserOutlined","Login","isLoading","setIsLoading","redirectToReferrer","setRedirectToReferrer","login","Title","marginBottom","Password","LockOutlined","ProjectDetails","saveProject","projectAddress","galleryAddress","propertiesAddress","projectName","useWatch","clientLogo","clientLogoMaxWidth","clientLogoMaxHeight","projectLogo","projectLogoMaxWidth","projectLogoMaxHeight","Paragraph","copy","val","getFieldsValue","alt","Projects","projects","setProjects","openDrawer","setOpenDrawer","deleteProject","setFeatured","featured","backIcon","MenuOutlined","Divider","avatar","StarFilled","published","EyeFilled","EyeInvisibleFilled","placement","onClose","mode","item","key","activeKey","selectedKeys","ids","Option","Select","transferOrientationToObject","Orientation","o","indexOf","N","S","E","W","transferOrientationToString","EditableCell","editing","dataIndex","inputType","property","restProps","inputNode","PropertiesTable","properties","setProperties","selectedProperties","setSelectedProperties","editingKey","setEditingKey","isEditing","cancel","save","validateFields","propertyService","saveProperty","deleteProperty","mergedColumns","sorter","sortDirections","editable","onFilter","render","_","str","charAt","toUpperCase","slice","Surface","BathroomsCount","toLowerCase","Link","marginRight","disabled","edit","col","onCell","onAddProperty","createProperty","newProperties","newProperty","document","querySelector","scrollTop","component","components","body","cell","bordered","d","columns","rowClassName","rowSelection","selectedRows","pagination","tableLayout","scroll","y","Properties","getProperty","PropertiesAdmin","MediaAdmin","addMedia","handleMove","mediaId","down","moveMedia","handleDelete","deleteMedia","customUpload","getFieldValue","level","readOnly","accept","listType","UploadOutlined","PropertiesClient","UIAdmin","loaded","setLoaded","setHideHidden","setHideControls","paddingBottom","onValuesChange","e","disableAlpha","lazy","Project","ResetPassword","App","fallback","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","ProjectService","isProject","content"],"mappings":"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","file":"static/js/main.0697bf4c.chunk.js","sourcesContent":["import API from \"api/axios.config\";\r\n\r\nclass AuthService {\r\n    async login(email, password) {\r\n        const { data } = await API.post(\"/auth/login\", {\r\n            email,\r\n            password,\r\n        });\r\n        return data;\r\n    }\r\n\r\n    async googleLogin(token) {\r\n        const { data } = await API.post(\"/auth/google\", {\r\n            token,\r\n        });\r\n        return data;\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"expiresAt\");\r\n    }\r\n\r\n    forgotPassword(email) {\r\n        return API.post(\"/auth/forgot-password\", {\r\n            email,\r\n        });\r\n    }\r\n\r\n    checkToken(token, email) {\r\n        return API.post(\"auth/check-token\", {\r\n            token,\r\n            email,\r\n        });\r\n    }\r\n\r\n    resetPassword(token, email, password, password2) {\r\n        return API.post(\"auth/reset-password\", {\r\n            token,\r\n            email,\r\n            password,\r\n            password2,\r\n        });\r\n    }\r\n\r\n    register(username, email, password) {\r\n        return API.post(\"auth/signup\", {\r\n            username,\r\n            email,\r\n            password,\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return API.get(\"/users/profile\");\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { MoreOutlined } from \"@ant-design/icons\";\nimport { Button, Checkbox, Form, Input, InputNumber, Modal } from \"antd\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst MoreButton = styled(Button)`\n  position: absolute;\n  top: 0px;\n  ${(props) => (props.adminSide === \"left\" ? \"left: -25px;\" : \"right: -25px;\")}\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  inset: 0;\n  background-color: rgba(83, 72, 4, 0.6);\n`;\n\nconst AdminButton = ({\n  uiData,\n  setUiData,\n  name,\n  button,\n  hideControls,\n  adminSide,\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const onFinish = (values) => {\n    setUiData((prevState) => ({\n      ...prevState,\n      [name]: { ...(prevState[name] || {}), ...values },\n    }));\n\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      {uiData[name]?.hide && <Overlay />}\n      {!hideControls && (\n        <MoreButton\n          type=\"primary\"\n          shape=\"circle\"\n          icon={<MoreOutlined />}\n          onClick={showModal}\n          adminSide={adminSide}\n        />\n      )}\n\n      <Modal\n        title={name}\n        open={isModalOpen}\n        footer={null}\n        destroyOnClose\n        onCancel={() => setIsModalOpen(false)}\n      >\n        <Form\n          labelCol={{ span: 8 }}\n          wrapperCol={{ span: 16 }}\n          onFinish={onFinish}\n          initialValues={uiData[name] || {}}\n        >\n          <Form.Item label=\"Hide\" name=\"hide\" valuePropName=\"checked\">\n            <Checkbox />\n          </Form.Item>\n          <Form.Item label=\"Label\" name=\"label\">\n            <Input />\n          </Form.Item>\n          {!button && (\n            <>\n              <Form.Item label=\"Min\" name=\"min\">\n                <InputNumber />\n              </Form.Item>\n              <Form.Item label=\"Max\" name=\"max\">\n                <InputNumber />\n              </Form.Item>\n              <Form.Item label=\"Step\" name=\"step\">\n                <InputNumber />\n              </Form.Item>\n\n              <Form.Item label=\"Default\" name=\"default\">\n                <InputNumber />\n              </Form.Item>\n            </>\n          )}\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport { AdminButton };\n","import { EyeOutlined, PlayCircleOutlined } from \"@ant-design/icons\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { AdminButton } from \"../AdminButton\";\nimport { FaBed, FaBath } from \"react-icons/fa\";\nimport { IoResize } from \"react-icons/io5\";\nimport { getCustomColorsStyles } from \"../../AppUI\";\n\nconst Container = styled.div`\n  bottom: 60px;\n  left: 0px;\n  right: 0px;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow-x: auto;\n  white-space: nowrap;\n  justify-content: end;\n  align-items: center;\n`;\n\nconst Inner2 = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow-x: auto;\n  white-space: nowrap;\n  justify-content: end;\n  width: 100%;\n  max-width: 600px;\n`;\n\nconst Top = styled.div`\n  border-radius: 5px;\n  padding: 15px 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Details = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\n\nconst NameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 200px;\n`;\n\nconst Name = styled.div`\n  font-size: 40px;\n`;\n\nconst Price = styled.div`\n  font-size: 26px;\n`;\n\nconst Availability = styled.div`\n  font-size: 16px;\n`;\n\nconst InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Frontage = styled.div`\n  line-height: 40px;\n`;\n\nconst Depth = styled.div``;\n\nconst Stats = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  margin-top: 20px;\n`;\n\nconst StatContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0 10px;\n`;\n\nconst StatText = styled.div`\n  margin-left: 10px;\n`;\n\nconst Bottom = styled.div`\n  border-radius: 5px;\n  color: white;\n  padding: 15px 20px;\n  display: flex;\n  margin-top: 5px;\n  justify-content: center;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 5px;\n  margin: 0 10px;\n  ${(props) => getCustomColorsStyles?.(props)}\n`;\n\nconst ButtonText = styled.div`\n  margin-top: 5px;\n`;\n\nconst Stat = ({ icon, children }) => (\n  <StatContainer>\n    {icon}\n    <StatText>{children}</StatText>\n  </StatContainer>\n);\n\nconst Button = ({\n  icon,\n  onClick,\n  admin,\n  uiData,\n  setUiData,\n  name,\n  label,\n  hideHidden,\n  hideControls,\n}) =>\n  uiData?.[name]?.hide && (hideHidden || !admin) ? null : (\n    <div style={{ position: \"relative\" }}>\n      <ButtonContainer onClick={onClick} uiData={uiData}>\n        <PlayCircleOutlined style={{ fontSize: \"30px\" }} />\n        <ButtonText>{uiData?.[name]?.label || label}</ButtonText>\n      </ButtonContainer>\n      {admin && (\n        <AdminButton\n          uiData={uiData}\n          setUiData={setUiData}\n          name={name}\n          button\n          hideControls={hideControls}\n        />\n      )}\n    </div>\n  );\n\nconst ApartmentControls = (props) => {\n  const isVisible = props.activeUI?.includes(\"apartment\");\n  const { emitUIInteraction } = props;\n  return (\n    <Container open={isVisible}>\n      <Inner>\n        <Inner2>\n          <Top\n            style={{\n              backgroundColor: props.uiData?.background?.hex || \"black\",\n            }}\n          >\n            <Details>\n              <NameContainer>\n                <Name>Name</Name>\n                <Price>Price</Price>\n                <Availability>Available</Availability>\n              </NameContainer>\n              <InfoContainer>\n                <Frontage>Lot frontage: 10m2</Frontage>\n                <Depth>Lot depth: 10m2</Depth>\n              </InfoContainer>\n            </Details>\n            <Stats>\n              <Stat icon={<FaBed size={30} />}>4 bed</Stat>\n              <Stat icon={<FaBath size={30} />}>2 bath</Stat>\n              <Stat icon={<IoResize size={30} />}>180 m2</Stat>\n            </Stats>\n          </Top>\n          <Bottom\n            style={{\n              backgroundColor: props.uiData?.background?.hex || \"black\",\n            }}\n          >\n            <Button\n              {...props}\n              icon={<EyeOutlined />}\n              onClick={() => emitUIInteraction?.({ TDTour: true })}\n              label=\"3D Tour\"\n              name=\"TDTour\"\n            ></Button>\n            <Button\n              {...props}\n              icon={<EyeOutlined />}\n              onClick={() => emitUIInteraction?.({ VTour: true })}\n              label=\"Virtual tour\"\n              name=\"VTour\"\n            ></Button>\n            <Button\n              {...props}\n              icon={<EyeOutlined />}\n              onClick={() => emitUIInteraction?.({ FloorPlan: true })}\n              label=\"Floor plan\"\n              name=\"FloorPlan\"\n            ></Button>\n          </Bottom>\n        </Inner2>\n      </Inner>\n    </Container>\n  );\n};\n\nexport { ApartmentControls };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { getCustomColorsStyles } from \"../../AppUI\";\nimport { AdminButton } from \"../AdminButton\";\n\nexport const Button = styled.div`\n  cursor: pointer;\n  padding: 5px 5px 0px;\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  user-select: none;\n  ${(props) => getCustomColorsStyles?.(props)}\n  > p {\n    font-size: 11px;\n    margin: 0;\n    margin-top: 5px;\n    text-transform: uppercase;\n    white-space: nowrap;\n  }\n`;\n\nconst ButtonUI = ({\n  activeUI,\n  value,\n  title,\n  icon,\n  onUnclick,\n  onClick,\n  visible,\n  admin,\n  uiData,\n  setUiData,\n  name,\n  hideControls,\n  hideHidden,\n  adminSide,\n}) => {\n  const isActive = activeUI?.includes(value || title);\n  let isVisible = activeUI?.filter((v) => visible.includes(v)).length || admin;\n\n  if (uiData?.[name]?.hide && (hideHidden || !admin)) isVisible = false;\n\n  const refinedTitle = uiData?.[name]?.label || title;\n  return isVisible ? (\n    <div style={{ position: \"relative\" }}>\n      <Button\n        onClick={isActive ? onUnclick : onClick}\n        isActive={isActive}\n        uiData={uiData}\n      >\n        {icon}\n        {refinedTitle && <p>{refinedTitle}</p>}\n      </Button>\n      {admin && (\n        <AdminButton\n          uiData={uiData}\n          setUiData={setUiData}\n          name={name}\n          button\n          hideControls={hideControls}\n          adminSide={adminSide}\n        />\n      )}\n    </div>\n  ) : null;\n};\n\nexport { ButtonUI };\n","import { Button, Form, Slider, Tag } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { AdminButton } from \"../AdminButton\";\n\nconst Container = styled.div`\n  top: 20px;\n  bottom: 60px;\n  left: 0;\n  right: 0;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  width: 100%;\n  padding: 0px 30px 20px;\n  max-height: 100%;\n  max-width: 600px;\n  overflow: auto;\n`;\n\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst SelectMulti = ({ options, value: propValue, onChange }) => {\n  return (\n    <>\n      <Tag.CheckableTag\n        onClick={() => onChange([])}\n        checked={!propValue?.length}\n        style={{ color: \"white\" }}\n      >\n        All\n      </Tag.CheckableTag>\n      {options.map(({ value, label }) => (\n        <Tag.CheckableTag\n          key={value}\n          onClick={() => {\n            if (propValue?.includes(value))\n              onChange(propValue.filter((i) => i !== value));\n            else onChange([...(propValue || []), value]);\n          }}\n          checked={propValue?.includes(value)}\n          style={{ color: \"white\" }}\n        >\n          {label || value}\n        </Tag.CheckableTag>\n      ))}\n    </>\n  );\n};\nconst FilterControls = (props) => {\n  const {\n    activeUI,\n    emitUIInteraction,\n    admin,\n    uiData,\n    setUiData,\n    hideHidden,\n    hideControls,\n  } = props;\n  const isVisible = activeUI?.includes(\"filter\");\n  const [form] = Form.useForm();\n\n  const items = [\n    {\n      name: \"Budget\",\n      label: \"Budget\",\n      type: \"range\",\n      min: 0,\n      max: 100,\n      step: 1,\n    },\n    {\n      name: \"Size\",\n      label: \"Size\",\n      type: \"range\",\n      min: 0,\n      max: 100,\n      step: 1,\n    },\n    {\n      name: \"Bedrooms\",\n      label: \"Bedrooms\",\n      type: \"range\",\n      min: 0,\n      max: 5,\n      step: 0.5,\n    },\n    {\n      name: \"Bathrooms\",\n      label: \"Bathrooms\",\n      type: \"range\",\n      min: 0,\n      max: 3,\n      step: 0.5,\n    },\n    {\n      name: \"Availability\",\n      label: \"Availability\",\n      type: \"selectMulti\",\n      options: [\n        { value: \"Available\" },\n        { value: \"Reserved\" },\n        { value: \"Sold\" },\n      ],\n    },\n    {\n      name: \"Orientation\",\n      label: \"Orientation\",\n      type: \"selectMulti\",\n      options: [\n        { value: \"N\" },\n        { value: \"NE\" },\n        { value: \"E\" },\n        { value: \"SE\" },\n        { value: \"S\" },\n        { value: \"SW\" },\n        { value: \"W\" },\n        { value: \"NW\" },\n      ],\n    },\n    {\n      name: \"Depth\",\n      label: \"Depth\",\n      type: \"range\",\n      min: 0,\n      max: 100,\n      step: 0.5,\n    },\n    {\n      name: \"Frontage\",\n      label: \"Frontage\",\n      type: \"range\",\n      min: 0,\n      max: 100,\n      step: 0.5,\n    },\n  ];\n\n  return (\n    <Container open={isVisible}>\n      <Inner\n        style={{\n          backgroundColor: (props.uiData?.background?.hex || \"#000000\") + \"CC\",\n        }}\n      >\n        {/* <ConfigProvider\n          getPopupContainer={(triggerNode) => triggerNode.parentNode}\n        > */}\n        <Form layout=\"vertical\" form={form}>\n          {items.map(\n            ({ name, label, type, defaultValue, min, max, step, options }) => {\n              const refinedTitle = uiData?.[name]?.label || label;\n\n              return uiData?.[name]?.hide && (hideHidden || !admin) ? null : (\n                <div style={{ position: \"relative\" }}>\n                  <Form.Item\n                    name={name}\n                    label={\n                      <label style={{ color: \"white\" }}>{refinedTitle}</label>\n                    }\n                    style={{ margin: \"50px 0\" }}\n                  >\n                    {!isVisible ? null : type === \"range\" ? (\n                      <Slider\n                        defaultValue={defaultValue || [min, max]}\n                        min={uiData?.[name]?.min || min}\n                        max={uiData?.[name]?.max || max}\n                        step={uiData?.[name]?.step || step}\n                        range={{ draggableTrack: true }}\n                        tooltipVisible={true}\n                        tooltipPlacement=\"bottom\"\n                        onChange={(v) => {\n                          emitUIInteraction?.({ [name]: v });\n                        }}\n                      />\n                    ) : (\n                      <SelectMulti\n                        options={options}\n                        defaultValue={defaultValue}\n                        onChange={(v) => {\n                          emitUIInteraction?.({ [name]: v });\n                        }}\n                      />\n                    )}\n                  </Form.Item>\n                  {admin && (\n                    <AdminButton\n                      uiData={uiData}\n                      setUiData={setUiData}\n                      name={name}\n                      button={type !== \"range\"}\n                      hideControls={hideControls}\n                    />\n                  )}\n                </div>\n              );\n            }\n          )}\n          {isVisible && (\n            <Form.Item {...tailLayout}>\n              <Button\n                htmlType=\"button\"\n                style={{ margin: \"0 8px\" }}\n                type=\"link\"\n                onClick={() => {\n                  form.resetFields();\n                  emitUIInteraction?.({ ResetFilters: true });\n                }}\n              >\n                Reset\n              </Button>\n              <Button\n                type=\"primary\"\n                onClick={() => props.setActiveUI([\"exterior\"])}\n              >\n                Apply\n              </Button>\n            </Form.Item>\n          )}\n        </Form>\n        {/* </ConfigProvider> */}\n      </Inner>\n    </Container>\n  );\n};\n\nexport { FilterControls };\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport ImageGallery from \"react-image-gallery\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  top: 00px;\n  bottom: 50px;\n  left: 0px;\n  right: 0px;\n  padding: 50px 10px 10px;\n  position: absolute;\n\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst Gallery = ({ project, activeUI, uiData }) => {\n  const [tab, setTab] = useState(\"\");\n  const [slide, setSlide] = useState(0);\n  const [dimensionsW, setDimensionsW] = useState({});\n  const ref = useRef();\n\n  useEffect(() => {\n    setSlide(0);\n  }, [tab]);\n\n  const getContainerSize = () => {\n    if (ref.current)\n      setDimensionsW({\n        width: ref.current.clientWidth,\n        height: ref.current.clientHeight,\n      });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", getContainerSize);\n    getContainerSize();\n  }, []);\n  if (!project) return null;\n  const { media } = project;\n\n  const images =\n    media\n      ?.filter((i) => (tab ? tab === i.type : true))\n      .map((i, index) => {\n        if (i.type !== \"video\") {\n          return {\n            ...i,\n            original: i.url,\n            thumbnail: i.thumbnail,\n            description: i.name,\n            originalClass: \"featured-slide\",\n            thumbnailClass: \"featured-thumb\",\n          };\n        } else {\n          return {\n            ...i,\n            index,\n            thumbnail: i.url,\n            renderItem: (k) => {\n              return slide === k.index ? (\n                <video\n                  // id=\"my-player\"\n                  // class=\"video-js\"\n                  controls\n                  preload=\"auto\"\n                  autoPlay\n                  muted\n                  // data-setup=\"{}\"\n                  style={{ width: \"100%\", height: \"100%\" }}\n                >\n                  <source src={i.url} type=\"video/mp4\"></source>\n                  <p class=\"vjs-no-js\">\n                    To view this video please enable JavaScript, and consider\n                    upgrading to a web browser that\n                    <a\n                      href=\"https://videojs.com/html5-video-support/\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      supports HTML5 video\n                    </a>\n                  </p>\n                </video>\n              ) : null;\n            },\n            renderThumbInner: (k) => (\n              <div style={{ position: \"relative\" }}>\n                <video\n                  id=\"my-player\"\n                  class=\"video-js\"\n                  controls\n                  data-setup=\"{}\"\n                  style={{ width: \"100%\", height: \"100%\" }}\n                >\n                  <source src={i.url} type=\"video/mp4\"></source>\n                  <p class=\"vjs-no-js\">\n                    To view this video please enable JavaScript, and consider\n                    upgrading to a web browser that\n                    <a\n                      href=\"https://videojs.com/html5-video-support/\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      supports HTML5 video\n                    </a>\n                  </p>\n                </video>\n                <div\n                  style={{\n                    position: \"absolute\",\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                  }}\n                />\n              </div>\n            ),\n          };\n        }\n      })\n      .filter((i) => i) || [];\n\n  const handleTabClick = (newTab) => {\n    setTab(newTab === tab ? \"\" : newTab);\n  };\n\n  return (\n    <Container\n      ref={ref}\n      open={activeUI.includes(\"gallery\")}\n      style={{\n        backgroundColor: (uiData?.background?.hex || \"#000000\") + \"CC\",\n      }}\n    >\n      <Inner>\n        <div className=\"buttons\">\n          <div\n            onClick={() => handleTabClick(\"photo\")}\n            className={tab === \"photo\" ? \"active\" : undefined}\n          >\n            <img src=\"/gallery/photo.png\" />\n          </div>\n          <div\n            onClick={() => handleTabClick(\"plan\")}\n            className={tab === \"plan\" ? \"active\" : undefined}\n          >\n            <img src=\"/gallery/plan.png\" />\n          </div>\n          <div\n            onClick={() => handleTabClick(\"video\")}\n            className={tab === \"video\" ? \"active\" : undefined}\n          >\n            <img src=\"/gallery/video.png\" />\n          </div>\n        </div>\n        <ImageGallery\n          items={images}\n          showBullets={false}\n          showFullscreenButton={false}\n          showPlayButton={false}\n          // showNav={false}\n          thumbnailPosition={\n            dimensionsW.height > dimensionsW.width ? \"bottom\" : \"right\"\n          }\n          onSlide={setSlide}\n          startIndex={slide}\n        />\n      </Inner>\n    </Container>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  bottom: 60px;\n  left: 0px;\n  right: 0px;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  flex: 1;\n  overflow-x: auto;\n  justify-content: center;\n`;\n\nconst Item = styled.div`\n  border-radius: 5px;\n  color: white;\n  margin: 0 6px;\n  padding: 5px 10px;\n  white-space: nowrap;\n  cursor: pointer;\n`;\n\nconst LocationControls = (props) => {\n  const { emitUIInteraction, activeUI, project } = props;\n  const isVisible = activeUI?.includes(\"location\");\n  return (\n    <Container open={isVisible}>\n      <Inner>\n        {[...Array(project?.levelsCount || 0)].map((_level, index) => (\n          <Item\n            onClick={() => {\n              emitUIInteraction?.({ Location: index });\n            }}\n            style={{\n              backgroundColor: props.uiData?.background?.hex || \"#000000\",\n            }}\n          >\n            {`Level ${index}`}\n          </Item>\n        ))}\n      </Inner>\n    </Container>\n  );\n};\n\nexport { LocationControls };\n","import { Slider } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { AdminButton } from \"../AdminButton\";\n\nconst Container = styled.div`\n  bottom: 60px;\n  left: 0;\n  right: 0;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.table`\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0 3px;\n  color: white;\n  max-width: 300px;\n`;\n\nconst TR = styled.tr`\n  margin: 5px 0;\n  border-radius: 5px;\n  position: relative;\n  td {\n    padding: 5px;\n  }\n  td:first-child {\n    border-top-left-radius: 5px;\n  }\n  td:last-child {\n    border-top-right-radius: 5px;\n  }\n\n  td:first-child {\n    border-bottom-left-radius: 5px;\n  }\n  td:last-child {\n    border-bottom-right-radius: 5px;\n  }\n`;\n\nconst TD0 = styled.td`\n  text-align: right;\n`;\n\nconst TD1 = styled.td`\n  width: 100%;\n`;\n\nconst TD2 = styled.td`\n  text-align: left;\n`;\n\nconst SunControls = ({\n  emitUIInteraction,\n  activeUI,\n  admin,\n  uiData,\n  setUiData,\n  hideHidden,\n  hideControls,\n}) => {\n  const isVisible = activeUI?.includes(\"sun\");\n  return (\n    <Container open={isVisible}>\n      <Inner>\n        <tbody>\n          {uiData?.time?.hide && (hideHidden || !admin) ? null : (\n            <TR\n              style={{\n                backgroundColor: (uiData?.background?.hex || \"#000000\") + \"CC\",\n              }}\n            >\n              <TD0>{`${uiData?.time?.min || 0}:00`}</TD0>\n              <TD1>\n                <Slider\n                  onChange={(v) => {\n                    emitUIInteraction?.({ Time: v });\n                  }}\n                  min={uiData?.time?.min || 0}\n                  max={uiData?.time?.max || 23}\n                  step={uiData?.time?.step || 1}\n                  tooltip={{ formatter: (v) => `${v}:00` }}\n                />\n              </TD1>\n              <TD2>{`${uiData?.time?.max || 23}:00`}</TD2>\n              {admin && (\n                <AdminButton\n                  uiData={uiData}\n                  setUiData={setUiData}\n                  name=\"time\"\n                  hideControls={hideControls}\n                />\n              )}\n            </TR>\n          )}\n          {uiData?.position?.hide && (hideHidden || !admin) ? null : (\n            <TR\n              style={{\n                backgroundColor: (uiData?.background?.hex || \"#000000\") + \"CC\",\n              }}\n            >\n              <TD0>S</TD0>\n              <TD1>\n                <Slider\n                  tooltip={{ open: false }}\n                  onChange={(v) => {\n                    emitUIInteraction?.({ SunPosition: v });\n                  }}\n                  min={uiData?.position?.min || 0}\n                  max={uiData?.position?.max || 360}\n                  step={uiData?.position?.step || 1}\n                />\n              </TD1>\n              <TD2>N</TD2>\n              {admin && (\n                <AdminButton\n                  uiData={uiData}\n                  setUiData={setUiData}\n                  name=\"position\"\n                  hideControls={hideControls}\n                />\n              )}\n            </TR>\n          )}\n        </tbody>\n      </Inner>\n    </Container>\n  );\n};\n\nexport { SunControls };\n","import React from \"react\";\nimport { ButtonUI } from \"../ButtonUI\";\nimport {\n  ClockCircleOutlined,\n  HomeOutlined,\n  PictureOutlined,\n  SearchOutlined,\n} from \"@ant-design/icons\";\n\nimport {\n  BsChevronExpand,\n  BsFillSunFill,\n  BsPinMap,\n  BsArrowLeftRight,\n  BsEye,\n  BsInfoCircle,\n  BsLayoutWtf,\n} from \"react-icons/bs\";\n\nimport { BiCompass } from \"react-icons/bi\";\n\nimport { FaLevelUpAlt } from \"react-icons/fa\";\n\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  height: 100%;\n  position: relative;\n  > * {\n    margin: 0px 10px;\n  }\n`;\n\nconst UIButtons = (props) => {\n  const { activeUI, setActiveUI, emitUIInteraction } = props;\n\n  return (\n    <>\n      <Container>\n        <ButtonUI\n          {...props}\n          title=\"home\"\n          icon={<HomeOutlined />}\n          onClick={() => {\n            setActiveUI([\"exterior\"]);\n            emitUIInteraction?.({ Home: true });\n          }}\n          visible={[\"exterior\"]}\n          name=\"home\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"gallery\"\n          icon={<PictureOutlined />}\n          onClick={() => setActiveUI([activeUI[0], \"gallery\"])}\n          onUnclick={() => setActiveUI([activeUI[0]])}\n          visible={[\"exterior\", \"interior\"]}\n          name=\"gallery\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"nearby\"\n          icon={<BsPinMap />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"nearby\"]);\n            emitUIInteraction?.({ Nearby: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Nearby: true });\n          }}\n          visible={[\"exterior\"]}\n          name=\"nearby\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"filter\"\n          icon={<SearchOutlined />}\n          onClick={() => setActiveUI([activeUI[0], \"filter\"])}\n          onUnclick={() => setActiveUI([activeUI[0]])}\n          visible={[\"exterior\"]}\n          name=\"filter\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"materials\"\n          icon={<BsArrowLeftRight />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"materials\"]);\n            emitUIInteraction?.({ Materials: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Materials: true });\n          }}\n          visible={[\"interior\"]}\n          name=\"materials\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"teleport\"\n          icon={<BsEye />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"teleport\"]);\n            emitUIInteraction?.({ Teleport: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Teleport: true });\n          }}\n          visible={[\"interior\"]}\n          name=\"teleport\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"info\"\n          icon={<BsInfoCircle />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"info\"]);\n            emitUIInteraction?.({ InteriorInfo: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ InteriorInfo: true });\n          }}\n          visible={[\"interior\"]}\n          name=\"info\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"discover\"\n          icon={<BiCompass />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"discover\"]);\n            emitUIInteraction?.({ Discover: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Discover: true });\n          }}\n          visible={[\"exterior\"]}\n          name=\"info\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"level\"\n          icon={<BsChevronExpand />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"location\"]);\n          }}\n          onUnclick={() => setActiveUI([activeUI[0]])}\n          visible={[\"exterior\", \"interior\"]}\n          name=\"location\"\n        />\n\n        <ButtonUI\n          {...props}\n          title=\"sun\"\n          icon={<BsFillSunFill />}\n          onClick={() => setActiveUI([activeUI[0], \"sun\"])}\n          onUnclick={() => setActiveUI([activeUI[0]])}\n          visible={[\"exterior\", \"interior\"]}\n          name=\"sun\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"Floor plan\"\n          icon={<BsLayoutWtf />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"floorPlan\"]);\n            emitUIInteraction?.({ FloorPlan: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ FloorPlan: true });\n          }}\n          visible={[\"interior\"]}\n          name=\"floorPlan\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"Level view\"\n          icon={<FaLevelUpAlt />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"levelView\"]);\n            emitUIInteraction?.({ LevelView: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ LevelView: true });\n          }}\n          visible={[\"interior\"]}\n          name=\"levelView\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"interior\"\n          icon={<ClockCircleOutlined />}\n          onClick={() => setActiveUI([\"interior\"])}\n          onUnclick={() => setActiveUI([\"exterior\"])}\n          visible={[\"exterior\", \"interior\"]}\n          admin={false}\n        />\n        <ButtonUI\n          {...props}\n          title=\"apartment\"\n          icon={<ClockCircleOutlined />}\n          onClick={() => setActiveUI([\"exterior\", \"apartment\"])}\n          onUnclick={() => setActiveUI([\"exterior\"])}\n          visible={[\"exterior\"]}\n          admin={false}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport { UIButtons };\n","import { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ApartmentControls } from \"../Bottom/ApartmentContols\";\nimport { ButtonUI } from \"../Bottom/ButtonUI\";\nimport { FilterControls } from \"../Bottom/FilterControls\";\nimport Gallery from \"../Bottom/Gallery\";\nimport { LocationControls } from \"../Bottom/LocationControls\";\nimport { SunControls } from \"../Bottom/SunControls\";\nimport { UIButtons } from \"../Bottom/UIButtons\";\nimport { QuestionOutlined } from \"@ant-design/icons\";\nimport { BsQuestionLg } from \"react-icons/bs\";\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 50px;\n  display: flex;\n  overflow-x: auto;\n`;\n\nconst ButtonsContainer = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`;\n\nconst InfoContainer = styled.div`\n  background: black;\n  margin-left: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0px 16px;\n`;\n\nconst AppUI = (props) => {\n  const [activeUI, setActiveUI] = useState([\"exterior\"]);\n  const propsC = { ...props, activeUI, setActiveUI };\n  return (\n    <div style={{ zIndex: 1, color: props.uiData?.textColor?.hex || \"white\" }}>\n      <Container>\n        <ButtonsContainer\n          style={{ backgroundColor: props.uiData?.background?.hex || \"black\" }}\n        >\n          <UIButtons {...propsC} />\n        </ButtonsContainer>\n        <InfoContainer\n          style={{ backgroundColor: props.uiData?.background?.hex || \"black\" }}\n        >\n          <ButtonUI\n            icon={<BsQuestionLg />}\n            visible={[\"exterior\", \"interior\"]}\n            activeUI={activeUI}\n            {...propsC}\n            adminSide=\"left\"\n          />\n        </InfoContainer>\n      </Container>\n      <FilterControls {...propsC} />\n      <Gallery {...propsC} />\n      <SunControls {...propsC} />\n      <LocationControls {...propsC} />\n      <ApartmentControls {...propsC} />\n    </div>\n  );\n};\n\nconst getCustomColorsStyles = (props) => {\n  let color = props.uiData?.buttonColor?.hex || \"white\";\n  if (props.isActive)\n    color = props.uiData?.buttonHoverColor?.hex || \"lightblue\";\n\n  const hover =\n    props.uiData?.buttonHoverColor?.hex ||\n    props.uiData?.buttonColor?.hex ||\n    \"lightblue\";\n  return `color: ${color};\n  &:hover {\n    color: ${hover};\n  }`;\n};\nexport { AppUI, getCustomColorsStyles };\n","import API from \"api/axios.config\";\r\n\r\nclass ConstantService {\r\n    getConstant() {\r\n        return API.get(`/constant`);\r\n    }\r\n    saveConstant(data) {\r\n        return API.put(`/constant`, data);\r\n    }\r\n}\r\n\r\nexport default new ConstantService();\r\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { WebRTCClient } from \"@arcware/webrtc-plugin\";\nimport { AppUI } from \"components/ProjectView/Components/ProjectUI/AppUI\";\n\nconst ProjectA = (props) => {\n  const { project, setVideoInitialized } = props;\n\n  const sizeContainerRef = useRef(null);\n  const containerRef = useRef(null);\n  const videoRef = useRef(null);\n  const [webrtcClient, setWebrtcClient] = useState();\n  const webrtcClientInit = useRef();\n\n  const responseCallback = (message) => {\n    console.log(message);\n  };\n\n  const videoInitialized = () => {\n    setVideoInitialized(true);\n  };\n\n  useEffect(() => {\n    const args = {\n      address:\n        props.project.arcwareAddress ||\n        \"wss://signalling-client.ragnarok.arcware.cloud/\",\n      packageId:\n        props.project.arcwarePackageId ||\n        \"ff41fd0c-cac9-4e4c-abe5-3ada402f57cc\",\n      settings: {},\n      autoplay: { video: true, audio: true },\n      sizeContainer: sizeContainerRef.current,\n      container: containerRef.current,\n      videoRef: videoRef.current,\n      playOverlay: false,\n      loader: () => {},\n      applicationResponse: responseCallback,\n      videoInitializeCallback: videoInitialized,\n    };\n\n    // double load protection\n    if (!webrtcClientInit.current) {\n      webrtcClientInit.current = true;\n      setWebrtcClient(new WebRTCClient(args));\n    }\n  }, []);\n\n  return (\n    <>\n      <div ref={sizeContainerRef} style={{ flex: 1 }}>\n        <div ref={containerRef} style={{ zIndex: 1 }}>\n          <video ref={videoRef} />\n          {/* <Responses responses={responses} /> */}\n        </div>\n      </div>\n      {webrtcClient != null && project?.newUI && (\n        <AppUI\n          emitUIInteraction={(v) => {\n            webrtcClient.emitUIInteraction(v);\n            console.log(\"emitUIInteraction() with: \", v);\n          }}\n          project={project}\n          uiData={project.uiData}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ProjectA;\n","import axios from \"axios\";\r\n\r\nconst baseURL =\r\n    process.env.NODE_ENV === \"production\"\r\n        ? \"https://tour.immersiv.com.au/api\"\r\n        : \"http://localhost:5000/api\";\r\n\r\nconst API = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n});\r\n\r\nAPI.interceptors.request.use(\r\n    function (req) {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) req.headers[\"auth-token\"] = token;\r\n        return req;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default API;\r\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import { useEffect } from \"react\";\nimport API from \"api/axios.config\";\nimport { useUser } from \"context/UserContext\";\nimport history from \"helpers/history\";\n\nconst WithAxios = ({ children }) => {\n    const { isInitiated, logout } = useUser();\n\n    useEffect(() => {\n        API.interceptors.response.use(\n            (response) => response,\n            async (error) => {\n                const originalRequest = error.config;\n                if (\n                    error.response.status === 401 &&\n                    originalRequest.url === \"/auth/refresh-token\"\n                ) {\n                    return new Promise((resolve, reject) => {\n                        logout();\n                        history.push(\"/login\");\n                        reject(error);\n                    });\n                }\n\n                if (error.response.status === 401 && !originalRequest._retry) {\n                    try {\n                        originalRequest._retry = true;\n                        const res = await API.post(\"/auth/refresh-token\");\n                        localStorage.setItem(\"token\", res.data.token);\n                        return API(originalRequest);\n                    } catch (error) {\n                        logout();\n                        history.push(\"/login\");\n                    }\n                }\n                return Promise.reject(error);\n            }\n        );\n    }, []);\n\n    return isInitiated ? children : null;\n};\n\nexport default WithAxios;\n","import WithAxios from \"helpers/WithAxios\";\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport authService from \"services/auth.service\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst UserContext = createContext();\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [authData, setAuthData] = useState({\r\n        token: \"\",\r\n    });\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [isInitiated, setIsInitiated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            setIsLoggedIn(true);\r\n            setAuthData(() => getTokenData(localStorage.getItem(\"token\")));\r\n        }\r\n        setIsInitiated(true);\r\n    }, []);\r\n\r\n    const getTokenData = (token) => {\r\n        if (token) {\r\n            const decoded = jwt_decode(token);\r\n            return {\r\n                ...decoded,\r\n                token,\r\n            };\r\n        } else\r\n            return {\r\n                token: \"\",\r\n            };\r\n    };\r\n\r\n    const setUserInfo = (data) => {\r\n        const { token } = data;\r\n\r\n        setIsLoggedIn(true);\r\n\r\n        setAuthData(() => getTokenData(token));\r\n        localStorage.setItem(\"token\", token);\r\n    };\r\n\r\n    const logout = () => {\r\n        setAuthData(null);\r\n        setIsLoggedIn(false);\r\n\r\n        authService.logout();\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                setUserState: (data) => setUserInfo(data),\r\n                logout,\r\n                isInitiated,\r\n                isLoggedIn,\r\n                setIsLoggedIn,\r\n                authData,\r\n                setAuthData,\r\n            }}\r\n        >\r\n            <WithAxios>{children}</WithAxios>\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nconst useUser = () => {\r\n    const context = useContext(UserContext);\r\n\r\n    if (context === undefined) {\r\n        throw new Error(\"useUser must be used within UserProvider\");\r\n    }\r\n    return context;\r\n};\r\n\r\nexport { UserProvider, useUser };\r\n","import API from \"api/axios.config\";\r\n\r\nclass AdminService {\r\n    getAdmin() {\r\n        return API.get(`/admins`);\r\n    }\r\n\r\n    createAdmin(data) {\r\n        return API.post(`/admins`, data);\r\n    }\r\n\r\n    deleteAdmin(id) {\r\n        return API.delete(`/admins/${id}`);\r\n    }\r\n}\r\n\r\nexport default new AdminService();\r\n","import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUser } from \"context/UserContext\";\n\nconst useLoginCheck = () => {\n    const navigate = useNavigate();\n    const { isLoggedIn, authData, logout, isInitiated } = useUser();\n    useEffect(() => {\n        if (isInitiated) {\n            if (!isLoggedIn) {\n                logout();\n                navigate(\"/login\");\n                return null;\n            }\n\n            if (!authData?.super) {\n                if (authData?.projectId) {\n                    navigate(`/p-admin/${authData.projectId}`);\n                    return null;\n                } else {\n                    logout();\n                    navigate(\"/login\");\n                    return null;\n                }\n            }\n        }\n    }, [isLoggedIn, authData?.super, authData?.projectId, isInitiated]);\n};\n\nexport default useLoginCheck;\n","import LayoutHOC from \"layout/Layout\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport {\r\n    Button,\r\n    Dropdown,\r\n    Form,\r\n    Input,\r\n    Layout,\r\n    List,\r\n    Menu,\r\n    Modal,\r\n    PageHeader,\r\n    Popconfirm,\r\n} from \"antd\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\nimport { MoreOutlined } from \"@ant-design/icons\";\r\nimport { useUser } from \"context/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport toast from \"react-hot-toast\";\r\nimport adminService from \"services/admin.service\";\r\nimport useLoginCheck from \"hooks/useLoginCheck\";\r\n\r\nconst Admins = (props) => {\r\n    const formRef = useRef(null);\r\n    const [admins, setAdmins] = useState(null);\r\n    const [editModalOpen, setEditModalOpen] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        adminService.getAdmin().then((response) => {\r\n            setAdmins(response.data);\r\n        });\r\n    }, []);\r\n\r\n    useLoginCheck();\r\n\r\n    const onFinish = async (values) => {\r\n        const response = await adminService.createAdmin(values);\r\n        if (response.data) {\r\n            toast.success(\"Saved\");\r\n            setAdmins(response.data);\r\n            setEditModalOpen(null);\r\n            if (formRef.current) formRef.current.resetFields();\r\n        }\r\n    };\r\n\r\n    const deleteAdmin = async (id) => {\r\n        const response = await adminService.deleteAdmin(id);\r\n        if (response.data) setAdmins(response.data);\r\n    };\r\n\r\n    return (\r\n        <LayoutHOC loading={!admins}>\r\n            <Layout\r\n                style={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flex: 1,\r\n                    background: \"white\",\r\n                }}\r\n            >\r\n                <PageHeader\r\n                    onBack={() => navigate(`/admin`)}\r\n                    title={`Admins`}\r\n                    style={{\r\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\r\n                        position: \"fixed\",\r\n                        zIndex: 100,\r\n                        width: \"100%\",\r\n                    }}\r\n                />\r\n\r\n                <Content\r\n                    style={{\r\n                        flex: 1,\r\n                        overflow: \"auto\",\r\n                        padding: \"16px\",\r\n                        paddingTop: \"100px\",\r\n                        maxWidth: \"800px\",\r\n                        width: \"100%\",\r\n                        margin: \"auto\",\r\n                    }}\r\n                >\r\n                    <Button\r\n                        onClick={() => setEditModalOpen({})}\r\n                        style={{ margin: \"16px\" }}\r\n                    >\r\n                        Add admin\r\n                    </Button>\r\n                    <Modal\r\n                        visible={!!editModalOpen}\r\n                        onCancel={() => setEditModalOpen(null)}\r\n                        footer={null}\r\n                    >\r\n                        <Form\r\n                            onFinish={onFinish}\r\n                            style={{\r\n                                padding: \" 16px\",\r\n                                maxWidth: \"500px\",\r\n                                margin: \"auto\",\r\n                            }}\r\n                            ref={formRef}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"email\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please add name!\",\r\n                                        type: \"email\",\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input placeholder=\"Email\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    htmlType=\"submit\"\r\n                                    style={{ width: \"100%\" }}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                    {admins && (\r\n                        <List\r\n                            itemLayout=\"horizontal\"\r\n                            dataSource={admins.sort((a, b) =>\r\n                                a.name > b.name ? 1 : -1\r\n                            )}\r\n                            renderItem={(admin) => (\r\n                                <List.Item\r\n                                    actions={[\r\n                                        <Dropdown\r\n                                            overlay={\r\n                                                <Menu>\r\n                                                    <Popconfirm\r\n                                                        title=\"Are you sure to delete this admin?\"\r\n                                                        onConfirm={() =>\r\n                                                            deleteAdmin(\r\n                                                                admin.email\r\n                                                            )\r\n                                                        }\r\n                                                        okText=\"Yes\"\r\n                                                        cancelText=\"No\"\r\n                                                    >\r\n                                                        <Menu.Item\r\n                                                            key=\"3\"\r\n                                                            danger\r\n                                                        >\r\n                                                            Delete\r\n                                                        </Menu.Item>\r\n                                                    </Popconfirm>\r\n                                                </Menu>\r\n                                            }\r\n                                            trigger={[\"click\"]}\r\n                                        >\r\n                                            <MoreOutlined\r\n                                                style={{ fontSize: \"30px\" }}\r\n                                            />\r\n                                        </Dropdown>,\r\n                                    ]}\r\n                                    style={{\r\n                                        borderBottom: \"3px solid #ccc\",\r\n                                        paddingLeft: \"16px\",\r\n                                    }}\r\n                                >\r\n                                    <List.Item.Meta\r\n                                        title={admin.email}\r\n                                        description={\r\n                                            admin.locked\r\n                                                ? \"Locked\"\r\n                                                : \"Not locked\"\r\n                                        }\r\n                                    />\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                    )}\r\n                </Content>\r\n            </Layout>\r\n        </LayoutHOC>\r\n    );\r\n};\r\n\r\nexport default Admins;\r\n","import API from \"api/axios.config\";\r\n\r\nclass GAService {\r\n    getGA(projectId, metrics, dimensions, period) {\r\n        return API.post(`/ga/${projectId}`, {\r\n            metrics,\r\n            dimensions,\r\n            start: period[0],\r\n            finish: period[1],\r\n        });\r\n    }\r\n\r\n    getAccessToken() {\r\n        return API.get(`/ga/access-token`);\r\n    }\r\n}\r\n\r\nexport default new GAService();\r\n","import React from \"react\";\n\nimport { Chart } from \"react-google-charts\";\nimport moment from \"moment\";\nimport humanizeString from \"string-humanize\";\n\nexport const ChartItem = (props) => {\n    const {\n        data,\n        title,\n        column,\n        seconds,\n        type = \"LineChart\",\n        isDate = true,\n    } = props;\n\n    const dataRefined = data\n        ? [\n              [\n                  humanizeString(data.columnHeaders[0].name.replace(\"ga:\", \"\")),\n                  humanizeString(\n                      data.columnHeaders[column].name.replace(\"ga:\", \"\")\n                  ),\n              ],\n              ...data.rows\n                  .map((i) => [\n                      isDate ? moment(i[0], \"YYYYMMDD\").format(\"D MMM\") : i[0],\n                      parseInt(i[column]) / (seconds ? 60 : 1),\n                  ])\n                  .sort((a, b) => (isDate ? 0 : b[1] - a[1])),\n          ]\n        : [];\n    return (\n        <div style={{ maxWidth: \"400px\", margin: \"20px\", width: \"100%\" }}>\n            <Chart\n                chartType={type}\n                width=\"100%\"\n                height=\"400px\"\n                data={dataRefined}\n                options={{\n                    title,\n                    legend: {\n                        position: \"none\",\n                    },\n                    chartArea: { width: \"85%\", height: \"80%\" },\n                    allowHtml: true,\n                    width: \"100%\",\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ChartItem;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { DatePicker, Layout, PageHeader } from \"antd\";\n\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport projectService from \"services/project.service\";\nimport moment from \"moment\";\nimport gaService from \"services/ga.service\";\nimport toast from \"react-hot-toast\";\nimport { ChartItem } from \"components/DashboardItem/DataItems\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\nimport { useUser } from \"context/UserContext\";\n\nconst AnalyticClient = (props) => {\n    const { id } = useParams();\n\n    const [project, setProject] = useState(null);\n    const [dateData, setDateData] = useState(null);\n    const [cityData, setCityData] = useState(null);\n    const [deviceData, setDeviceData] = useState(null);\n    const [sourceData, setSourceData] = useState(null);\n    const [period, setPeriod] = useState([\n        moment().subtract(7, \"day\").format(),\n        moment().format(),\n    ]);\n    const navigate = useNavigate();\n    const { logout, isLoggedIn, authData } = useUser();\n\n    useEffect(() => {\n        if (\n            !isLoggedIn ||\n            (!authData?.super &&\n                id.toString() !== authData?.projectId.toString())\n        ) {\n            logout();\n            navigate(\"/login\");\n            return null;\n        }\n    }, [isLoggedIn, authData?.super, authData?.projectId]);\n\n    useEffect(() => {\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (period.length === 2 && project?.id) {\n            setDateData(null);\n            setCityData(null);\n            setDeviceData(null);\n            setSourceData(null);\n            getMetricData();\n        }\n    }, [period[0], period[1], project?.id]);\n\n    const getMetricData = () => {\n        gaService\n            .getGA(\n                project.id,\n                \"ga:users,ga:newUsers,ga:pageviews,ga:sessions,ga:sessionDuration\",\n                \"ga:date\",\n                period\n            )\n            .then((res) => {\n                setDateData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Users analytics data not loaded\");\n            });\n\n        gaService\n            .getGA(project.id, \"ga:users\", \"ga:city\", period)\n            .then((res) => {\n                setCityData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Location analytics data not loaded\");\n            });\n\n        gaService\n            .getGA(project.id, \"ga:users\", \"ga:deviceCategory\", period)\n            .then((res) => {\n                setDeviceData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Device analytics data not loaded\");\n            });\n\n        gaService\n            .getGA(project.id, \"ga:users\", \"ga:source\", period)\n            .then((res) => {\n                setSourceData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Source analytics data not loaded\");\n            });\n    };\n\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(`/p-admin/${id}`)}\n                    title={\n                        <>\n                            Analytics\n                            <br />\n                            <DatePicker.RangePicker\n                                size=\"large\"\n                                defaultValue={[\n                                    moment().subtract(7, \"day\"),\n                                    moment(),\n                                ]}\n                                onChange={(m) =>\n                                    setPeriod([m[0].format(), m[1].format()])\n                                }\n                                allowClear={false}\n                            />\n                        </>\n                    }\n                    style={{ borderBottom: \"1px #ccc solid\" }}\n                />\n                {project && (\n                    <Content\n                        style={{\n                            flex: 1,\n                            overflow: \"auto\",\n                            paddingTop: \"100px\",\n                            padding: \"16px\",\n\n                            width: \"100%\",\n                            margin: \"auto\",\n                        }}\n                    >\n                        <div\n                            style={{\n                                textAlign: \"center\",\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                flexWrap: \"wrap\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                            }}\n                        >\n                            <ChartItem\n                                data={dateData}\n                                title=\"Users\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={1}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"New users\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={2}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"Page views\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={3}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"Sessions\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={4}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"Session duration (minutes)\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={5}\n                                seconds\n                            />\n                            <ChartItem\n                                data={deviceData}\n                                title=\"Device type\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                type=\"PieChart\"\n                                column={1}\n                                seconds\n                                isDate={false}\n                            />\n                            <ChartItem\n                                data={sourceData}\n                                title=\"Source\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                type=\"BarChart\"\n                                column={1}\n                                isDate={false}\n                            />\n                            <ChartItem\n                                data={cityData}\n                                title=\"Source\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                type=\"Table\"\n                                column={1}\n                                isDate={false}\n                            />\n                        </div>\n                    </Content>\n                )}\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default AnalyticClient;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { Button, Layout, PageHeader, Form, Input } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport constantService from \"services/constant.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst Constants = (props) => {\n    const [constants, setConstants] = useState(null);\n    const formRef = useRef(null);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        constantService\n            .getConstant()\n            .then((response) => {\n                if (response.data) {\n                    setConstants(response.data);\n                    formRef.current &&\n                        formRef.current.setFieldsValue(response.data);\n                } else setConstants({});\n            })\n            .catch(() => {\n                setConstants({});\n            });\n    }, []);\n\n    useLoginCheck();\n    const onFinish = async (values) => {\n        const response = await constantService.saveConstant(values);\n        if (response.data) {\n            setConstants(response.data);\n            toast.success(\"Saved\");\n        }\n    };\n\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(\"/admin\")}\n                    title=\"Constants\"\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"800px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Form\n                        ref={formRef}\n                        name=\"normal_login\"\n                        onFinish={onFinish}\n                        style={{\n                            padding: \" 16px\",\n                            maxWidth: \"500px\",\n                            margin: \"auto\",\n                        }}\n                        initialValues={constants}\n                    >\n                        <Form.Item name=\"email\">\n                            <Input placeholder=\"Email\" />\n                        </Form.Item>\n\n                        <Form.Item name=\"phone\">\n                            <Input placeholder=\"Phone\" />\n                        </Form.Item>\n\n                        <Form.Item name=\"call\">\n                            <Input placeholder=\"Phone in international format\" />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                style={{ width: \"100%\" }}\n                            >\n                                Save\n                            </Button>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button\n                                onClick={() => {\n                                    if (formRef.current)\n                                        formRef.current.resetFields();\n                                }}\n                                style={{ width: \"100%\" }}\n                            >\n                                Reset\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default Constants;\n","import API from \"api/axios.config\";\r\n\r\nclass ProjectService {\r\n    signUrl(isVideo, isLogo) {\r\n        return API.get(\"/utils/sign-s3\", {\r\n            params: { isVideo: !!isVideo, isLogo: !!isLogo },\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ProjectService();\r\n","import axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport utilsService from \"services/utils.service\";\n\nconst uploadMedia =\n    (cb, isVideo, isLogo) =>\n    async ({\n        action,\n        data,\n        file,\n        filename,\n        headers,\n        onError,\n        onProgress,\n        onSuccess,\n        withCredentials,\n    }) => {\n        try {\n            const res = await utilsService.signUrl(isVideo, isLogo);\n\n            axios\n                .put(res.data.signedRequest, file, {})\n                .then((s3res) => {\n                    cb({ url: res.data.url, thumbnail: res.data.thumbnail });\n                    onSuccess(res.data.thumbnail);\n                })\n                .catch((err) => {\n                    console.log(err.message);\n                    onError();\n                });\n        } catch (error) {\n            onError();\n            toast.error(error.message);\n        }\n    };\n\nexport default uploadMedia;\n","import { LoadingOutlined } from \"@ant-design/icons\";\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Image,\n  Input,\n  InputNumber,\n  Switch,\n  Upload,\n} from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport uploadMedia from \"helpers/uploadMedia\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Logo = (props) => {\n  const customUploadClientLogo = uploadMedia(\n    (values) => {\n      props.setFieldsValue({ [props.id]: values.url });\n    },\n    props.isVideo,\n    true\n  );\n  const [image, setImage] = useState(\"\");\n  useEffect(() => {\n    setTimeout(() => setImage(props[props.id]), 5000);\n  }, [props[props.id]]);\n  return (\n    <>\n      {image === props[props.id] ? (\n        props.isVideo ? (\n          <video\n            id=\"my-player\"\n            class=\"video-js\"\n            controls\n            preload=\"auto\"\n            data-setup=\"{}\"\n          >\n            <source src={image} type=\"video/mp4\"></source>\n            <p class=\"vjs-no-js\">\n              To view this video please enable JavaScript, and consider\n              upgrading to a web browser that\n              <a\n                href=\"https://videojs.com/html5-video-support/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                supports HTML5 video\n              </a>\n            </p>\n          </video>\n        ) : (\n          <Image src={image} style={{ maxHeight: \"50px\" }} />\n        )\n      ) : (\n        <LoadingOutlined />\n      )}\n      <div style={{ marginTop: \"10px\" }}>\n        <Upload\n          customRequest={customUploadClientLogo}\n          showUploadList={false}\n          maxCount={1}\n          getValueFromEvent={() => {}}\n        >\n          <Button>Change</Button>\n        </Upload>\n      </div>\n    </>\n  );\n};\n\nconst ProjectFormFields = ({ setFieldsValue }) => {\n  return (\n    <>\n      <Form.Item\n        name=\"name\"\n        label=\"Name\"\n        rules={[\n          {\n            required: true,\n            message: \"Please set name!\",\n          },\n        ]}\n      >\n        <Input placeholder=\"Name\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"url\"\n        label=\"Url\"\n        rules={[\n          {\n            required: true,\n            message: \"Please add url!\",\n          },\n        ]}\n        extra=\"This is only what should appear at the end of url, for example 'best-hotel', 'sky_mall'... Do not put https://tour.immersiv.com.au/ here!\"\n      >\n        <Input placeholder=\"Url\" />\n      </Form.Item>\n\n      <Form.Item label=\"New UI\" name=\"newUI\" valuePropName=\"checked\">\n        <Checkbox />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Arcware project\"\n        name=\"isArcware\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n\n      <Form.Item name=\"arcwareAddress\" label=\"Arcware address\">\n        <Input placeholder=\"Arcware address\" />\n      </Form.Item>\n\n      <Form.Item name=\"arcwarePackageId\" label=\"Arcware project id\">\n        <Input placeholder=\"Arcware project id\" />\n      </Form.Item>\n\n      <Form.Item name=\"projectId\" label=\"Project id\" hidden>\n        <Input placeholder=\"Project id\" />\n      </Form.Item>\n\n      <Form.Item name=\"modelId\" label=\"Model id\" hidden>\n        <Input placeholder=\"Model id\" />\n      </Form.Item>\n\n      <Form.Item name=\"levelsCount\" label=\"Number of levels\">\n        <InputNumber placeholder=\"Number of levels\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Custom background\"\n        name=\"backgroundOn\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n      <Form.Item\n        label=\"Background video\"\n        name=\"backgroundTypeVideo\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n      <Form.Item\n        label=\"Background video\"\n        valuePropName=\"backgroundVideo\"\n        name=\"backgroundVideo\"\n      >\n        <Logo setFieldsValue={setFieldsValue} isVideo />\n      </Form.Item>\n      <Form.Item\n        label=\"Background image\"\n        valuePropName=\"backgroundImage\"\n        name=\"backgroundImage\"\n      >\n        <Logo setFieldsValue={setFieldsValue} />\n      </Form.Item>\n\n      <Form.Item name=\"adminEmail\" label=\"Client login\">\n        <Input placeholder=\"Admin email\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"adminPassword\"\n        label=\"Client password\"\n        rules={[\n          {\n            min: 6,\n            message: \"Must have length at least 6!\",\n          },\n        ]}\n      >\n        <Input placeholder=\"Admin password\" />\n      </Form.Item>\n\n      <Form.Item name=\"analytic\" label=\"Analytics property\">\n        <Input placeholder=\"Google analytics property id\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"mobileNativeEvents\"\n        label=\"Mobile native events\"\n        valuePropName=\"checked\"\n      >\n        <Switch>Mobile native events</Switch>\n      </Form.Item>\n      <Form.Item\n        name=\"desktopNativeEvents\"\n        label=\"Desktop native events\"\n        valuePropName=\"checked\"\n      >\n        <Switch />\n      </Form.Item>\n\n      <Form.Item name=\"published\" valuePropName=\"checked\" label=\"Published\">\n        <Checkbox />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Project details on\"\n        name=\"projectDetailsOn\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n      <Form.Item label=\"Project details duration\" name=\"projectDetailsDuraton\">\n        <Input type=\"number\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Client logo\"\n        valuePropName=\"clientLogo\"\n        name=\"clientLogo\"\n      >\n        <Logo setFieldsValue={setFieldsValue} />\n      </Form.Item>\n      <Form.Item label=\"Client logo max width\" name=\"clientLogoMaxWidth\">\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item label=\"Client logo max height\" name=\"clientLogoMaxHeight\">\n        <Input type=\"number\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Project logo\"\n        valuePropName=\"projectLogo\"\n        name=\"projectLogo\"\n      >\n        <Logo setFieldsValue={setFieldsValue} />\n      </Form.Item>\n      <Form.Item label=\"Project logo max width\" name=\"projectLogoMaxWidth\">\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item label=\"Project logo max height\" name=\"projectLogoMaxHeight\">\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item\n        name=\"projectName\"\n        label=\"Project name\"\n        extra=\"This text will appear on the screen where the project is being loaded if there is no logo\"\n      >\n        <Input placeholder=\"projectName\" />\n      </Form.Item>\n      <Form.Item\n        name=\"description\"\n        label=\"Description\"\n        extra=\"This text will appear on the screen where the project is being loaded\"\n      >\n        <TextArea placeholder=\"Description\" rows={4} />\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\n          Save\n        </Button>\n      </Form.Item>\n    </>\n  );\n};\n\nexport default ProjectFormFields;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useRef } from \"react\";\nimport projectService from \"services/project.service\";\n\nimport { Button, Layout, PageHeader, Form } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport ProjectFormFields from \"components/ProjectFormFields\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst CreateProject = (props) => {\n    const formRef = useRef(null);\n\n    const navigate = useNavigate();\n\n    useLoginCheck();\n\n    const onFinish = async (values) => {\n        const response = await projectService.createProject(values);\n        if (response.data) {\n            toast.success(\"Saved\");\n            navigate(\"/admin\");\n        }\n    };\n\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(\"/admin\")}\n                    title=\"Create project\"\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"800px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Form\n                        ref={formRef}\n                        name=\"normal_login\"\n                        onFinish={onFinish}\n                        style={{\n                            padding: \" 16px\",\n                            maxWidth: \"500px\",\n                            margin: \"auto\",\n                        }}\n                        labelCol={{ span: 8 }}\n                        wrapperCol={{ span: 16 }}\n                    >\n                        <ProjectFormFields />\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                            <Button\n                                onClick={() => {\n                                    if (formRef.current)\n                                        formRef.current.resetFields();\n                                }}\n                                style={{ width: \"100%\" }}\n                            >\n                                Reset\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default CreateProject;\n","import React, { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport authService from \"services/auth.service\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\n\r\nconst ForgotPasswordModal = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const onFinish = (data) => {\r\n        authService\r\n            .forgotPassword(data.email)\r\n            .then((data) => {\r\n                if (data.data.status === \"OK\") {\r\n                    toast.success(\"Email has been sent successfully.\");\r\n                    setIsOpen(false);\r\n                }\r\n            })\r\n            .catch((error) => {});\r\n    };\r\n    return (\r\n        <div>\r\n            <>\r\n                <span onClick={() => setIsOpen(!isOpen)}>Forgot password?</span>\r\n                <Modal\r\n                    title=\"Forgot Password\"\r\n                    visible={isOpen}\r\n                    footer={[]}\r\n                    onCancel={() => setIsOpen(false)}\r\n                >\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        onFinish={onFinish}\r\n                        style={{\r\n                            padding: \"100px 16px\",\r\n                            maxWidth: \"500px\",\r\n                            margin: \"auto\",\r\n                        }}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[\r\n                                {\r\n                                    type: \"email\",\r\n                                    message: \"The input is not valid E-mail!\",\r\n                                },\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your E-mail!\",\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                prefix={\r\n                                    <UserOutlined className=\"site-form-item-icon\" />\r\n                                }\r\n                                placeholder=\"Email\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                Reset password\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPasswordModal;\r\n","// import { Button, HelperText, Input, Label } from \"@windmill/react-ui\";\r\nimport ForgotPasswordModal from \"components/ForgotPasswordModal\";\r\nimport { useUser } from \"context/UserContext\";\r\nimport Layout from \"layout/Layout\";\r\nimport React, { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport authService from \"services/auth.service\";\r\nimport { Form, Input, Button, Typography } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nconst Login = () => {\r\n    const { isLoggedIn, setUserState, authData } = useUser();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const onFinish = async (data) => {\r\n        const { email, password } = data;\r\n\r\n        try {\r\n            setIsLoading(true);\r\n            const data = await authService.login(email, password);\r\n            toast.success(\"Login successful 🔓\");\r\n\r\n            setTimeout(() => {\r\n                setUserState(data);\r\n                setRedirectToReferrer(true);\r\n                setIsLoading(false);\r\n            }, 1500);\r\n        } catch (error) {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    if (\r\n        (isLoggedIn || redirectToReferrer) &&\r\n        (authData?.super || authData?.projectId)\r\n    ) {\r\n        navigate(\"/admin\");\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Login\" loading={isLoading}>\r\n            <Form\r\n                name=\"normal_login\"\r\n                onFinish={onFinish}\r\n                style={{\r\n                    padding: \"100px 16px\",\r\n                    maxWidth: \"500px\",\r\n                    margin: \"auto\",\r\n                }}\r\n            >\r\n                <Typography.Title\r\n                    style={{ textAlign: \"center\", marginBottom: \"50px\" }}\r\n                >\r\n                    Manage IMMERSIVE\r\n                </Typography.Title>\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            type: \"email\",\r\n                            message: \"The input is not valid E-mail!\",\r\n                        },\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your E-mail!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input\r\n                        prefix={\r\n                            <UserOutlined className=\"site-form-item-icon\" />\r\n                        }\r\n                        placeholder=\"Email\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your Password!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password\r\n                        prefix={\r\n                            <LockOutlined className=\"site-form-item-icon\" />\r\n                        }\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <a>\r\n                        <ForgotPasswordModal />\r\n                    </a>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{ width: \"100%\" }}\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport projectService from \"services/project.service\";\n\nimport { Button, Layout, PageHeader, Form, Typography } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport ProjectFormFields from \"components/ProjectFormFields\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\nimport copy from \"copy-to-clipboard\";\n\nconst ProjectDetails = (props) => {\n  const [project, setProject] = useState(null);\n\n  const [form] = Form.useForm();\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    projectService.getProject(id).then((response) => {\n      setProject(response.data);\n    });\n  }, [id]);\n\n  const navigate = useNavigate();\n  useLoginCheck();\n\n  const onFinish = async (values) => {\n    const response = await projectService.saveProject(project.id, values);\n    if (response.data) toast.success(\"Saved\");\n  };\n\n  const projectAddress = project?.url\n    ? `https://tour.immersiv.com.au/p/${project.url}`\n    : \"not set yet\";\n  const galleryAddress = project?.url\n    ? `https://tour.immersiv.com.au/gallery?project=${project.url}`\n    : \"not set yet\";\n  const propertiesAddress = project?.url\n    ? `https://tour.immersiv.com.au/api/properties/properties-ue/${project.url}`\n    : \"not set yet\";\n\n  const setFieldsValue = (val) => {\n    if (form) {\n      form.setFieldsValue({\n        ...form.getFieldsValue(),\n        ...val,\n      });\n    }\n  };\n\n  const description = Form.useWatch(\"description\", form);\n  const projectName = Form.useWatch(\"projectName\", form);\n  const clientLogo = Form.useWatch(\"clientLogo\", form);\n  const clientLogoMaxWidth = Form.useWatch(\"clientLogoMaxWidth\", form);\n  const clientLogoMaxHeight = Form.useWatch(\"clientLogoMaxHeight\", form);\n  const projectLogo = Form.useWatch(\"projectLogo\", form);\n  const projectLogoMaxWidth = Form.useWatch(\"projectLogoMaxWidth\", form);\n  const projectLogoMaxHeight = Form.useWatch(\"projectLogoMaxHeight\", form);\n  return (\n    <LayoutHOC loading={!project}>\n      <Layout\n        style={{\n          height: \"100%\",\n          display: \"flex\",\n          flex: 1,\n          background: \"white\",\n        }}\n      >\n        <PageHeader\n          onBack={() => navigate(\"/admin\")}\n          title={`Project - ${project?.name}`}\n          style={{\n            boxShadow: \"1px 1px 10px 1px #ccc\",\n            position: \"fixed\",\n            zIndex: 100,\n            width: \"100%\",\n          }}\n        />\n\n        <Content\n          style={{\n            flex: 1,\n            overflow: \"auto\",\n            padding: \"16px\",\n            paddingTop: \"100px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            margin: \"auto\",\n          }}\n        >\n          {project && (\n            <>\n              <Button\n                onClick={() => navigate(`/p-admin/${id}`)}\n                style={{ margin: \"16px\" }}\n              >\n                See client admin panel\n              </Button>\n              <Button\n                onClick={() =>\n                  navigate(`/admin/projects/${project.id}/properties`)\n                }\n                style={{ margin: \"16px\" }}\n              >\n                Manage properties\n              </Button>\n              <Button\n                onClick={() => navigate(`/admin/projects/${project.id}/media`)}\n                style={{ margin: \"16px\" }}\n              >\n                Manage media\n              </Button>\n              <Button\n                onClick={() => navigate(`/admin/projects/${project.id}/ui`)}\n                style={{ margin: \"16px\" }}\n              >\n                Manage UI\n              </Button>\n              <Typography.Paragraph>\n                {`The project full url is ${projectAddress}`}\n                <Button onClick={() => copy(projectAddress)} type=\"link\">\n                  Copy\n                </Button>\n              </Typography.Paragraph>\n\n              <Typography.Paragraph>\n                {`The project gallery url is ${galleryAddress} `}\n                <Button onClick={() => copy(galleryAddress)} type=\"link\">\n                  Copy\n                </Button>\n              </Typography.Paragraph>\n\n              <Typography.Paragraph>\n                {`The project properties api link ${propertiesAddress} `}\n                <Button onClick={() => copy(propertiesAddress)} type=\"link\">\n                  Copy\n                </Button>\n              </Typography.Paragraph>\n\n              <Form\n                form={form}\n                onFinish={onFinish}\n                style={{\n                  padding: \" 16px\",\n                  maxWidth: \"500px\",\n                  margin: \"auto\",\n                }}\n                initialValues={project}\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n              >\n                <ProjectFormFields setFieldsValue={setFieldsValue} />\n\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                  <Button\n                    onClick={() => {\n                      if (form.current) form.current.resetFields();\n                    }}\n                    style={{ width: \"100%\" }}\n                  >\n                    Reset\n                  </Button>\n                </Form.Item>\n              </Form>\n              <div>\n                <div>Project details preview</div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flex: 1,\n                    alignItems: \"center\",\n                  }}\n                >\n                  <img\n                    src={clientLogo}\n                    alt=\"logo\"\n                    style={{\n                      maxHeight: clientLogoMaxHeight + \"px\",\n                      maxWidth: clientLogoMaxWidth + \"px\",\n                      marginBottom: \"36px\",\n                    }}\n                  />\n                  {projectLogo ? (\n                    <img\n                      src={projectLogo}\n                      alt=\"logo\"\n                      style={{\n                        maxHeight: projectLogoMaxHeight + \"px\",\n                        maxWidth: projectLogoMaxWidth + \"px\",\n                        marginBottom: \"36px\",\n                      }}\n                    />\n                  ) : (\n                    <h6 style={{ textAlign: \"center\" }}>{projectName}</h6>\n                  )}\n                  {/* <p style={{ textAlign: \"center\" }}>\n                                        {description}\n                                    </p> */}\n                </div>\n              </div>\n            </>\n          )}\n        </Content>\n      </Layout>\n    </LayoutHOC>\n  );\n};\n\nexport default ProjectDetails;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\nimport projectService from \"services/project.service\";\n\nimport {\n    Button,\n    Drawer,\n    Dropdown,\n    Layout,\n    List,\n    Menu,\n    PageHeader,\n    Popconfirm,\n} from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport {\n    EyeFilled,\n    EyeInvisibleFilled,\n    MenuOutlined,\n    MoreOutlined,\n    StarFilled,\n} from \"@ant-design/icons\";\nimport { useUser } from \"context/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst Projects = (props) => {\n    const [projects, setProjects] = useState(null);\n    const { logout } = useUser();\n    const navigate = useNavigate();\n\n    const [openDrawer, setOpenDrawer] = useState(false);\n    useEffect(() => {\n        projectService.getProject().then((response) => {\n            setProjects(response.data);\n        });\n    }, []);\n\n    useLoginCheck();\n\n    const deleteProject = async (id) => {\n        const response = await projectService.deleteProject(id);\n        if (response.data) setProjects(response.data);\n    };\n\n    const setFeatured = async (id) => {\n        const response = await projectService.saveProject(id, {\n            featured: true,\n        });\n\n        if (response.data) setProjects(response.data);\n    };\n\n    return (\n        <LayoutHOC loading={!projects}>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => setOpenDrawer(true)}\n                    backIcon={<MenuOutlined />}\n                    title={\"Projects\"}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"800px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Button\n                        onClick={() => navigate(\"/admin/projects/create\")}\n                        style={{ margin: \"16px\" }}\n                    >\n                        Add project\n                    </Button>\n                    {projects && (\n                        <List\n                            itemLayout=\"horizontal\"\n                            dataSource={projects.sort((a, b) =>\n                                a.url > b.url ? 1 : -1\n                            )}\n                            renderItem={(project) => (\n                                <List.Item\n                                    actions={[\n                                        <Dropdown\n                                            overlay={\n                                                <Menu>\n                                                    <Menu.Item\n                                                        key=\"1\"\n                                                        onClick={() =>\n                                                            setFeatured(\n                                                                project.id\n                                                            )\n                                                        }\n                                                    >\n                                                        Set as featured\n                                                    </Menu.Item>\n                                                    <Menu.Divider />\n                                                    <Popconfirm\n                                                        title=\"Are you sure to delete this project?\"\n                                                        onConfirm={() =>\n                                                            deleteProject(\n                                                                project.id\n                                                            )\n                                                        }\n                                                        okText=\"Yes\"\n                                                        cancelText=\"No\"\n                                                    >\n                                                        <Menu.Item\n                                                            key=\"3\"\n                                                            danger\n                                                        >\n                                                            Delete\n                                                        </Menu.Item>\n                                                    </Popconfirm>\n                                                </Menu>\n                                            }\n                                            trigger={[\"click\"]}\n                                        >\n                                            <MoreOutlined\n                                                style={{ fontSize: \"30px\" }}\n                                            />\n                                        </Dropdown>,\n                                    ]}\n                                >\n                                    <List.Item.Meta\n                                        avatar={\n                                            project.featured ? (\n                                                <StarFilled\n                                                    style={{ fontSize: \"24px\" }}\n                                                />\n                                            ) : project.published ? (\n                                                <EyeFilled\n                                                    style={{ fontSize: \"24px\" }}\n                                                />\n                                            ) : (\n                                                <EyeInvisibleFilled\n                                                    style={{ fontSize: \"24px\" }}\n                                                />\n                                            )\n                                        }\n                                        title={project.name}\n                                        description={project.url}\n                                        onClick={() => {\n                                            navigate(\n                                                `/admin/projects/${project.id}`\n                                            );\n                                        }}\n                                    />\n                                </List.Item>\n                            )}\n                        />\n                    )}\n                </Content>\n            </Layout>\n            <Drawer\n                title=\"Menu\"\n                placement=\"left\"\n                onClose={() => setOpenDrawer(false)}\n                visible={openDrawer}\n            >\n                <Menu\n                    mode=\"inline\"\n                    style={{ width: \"100%\" }}\n                    onClick={({ item, key }) => {\n                        setOpenDrawer(false);\n                        switch (key) {\n                            case \"logout\":\n                                logout();\n                                break;\n                            case \"info\":\n                                navigate(\"/admin/contant\");\n                                break;\n                            case \"admins\":\n                                navigate(\"/admin/admins\");\n                                break;\n                            default:\n                                return;\n                        }\n                    }}\n                    activeKey=\"projects\"\n                    selectedKeys={[\"projects\"]}\n                >\n                    <Menu.Item key=\"projects\">Projects</Menu.Item>\n                    <Menu.Item key=\"info\">Constant</Menu.Item>\n                    <Menu.Item key=\"admins\">Admins</Menu.Item>\n                    <Menu.Item key=\"logout\">Logout</Menu.Item>\n                </Menu>\n            </Drawer>\n        </LayoutHOC>\n    );\n};\n\nexport default Projects;\n","import API from \"api/axios.config\";\r\n\r\nclass PropertyService {\r\n    getProperty(projectId, id) {\r\n        return API.get(`/properties/${projectId}/${id ? \"/\" + id : \"\"}`);\r\n    }\r\n    saveProperty(projectId, id, data) {\r\n        return API.put(`/properties/${projectId}/${id}`, data);\r\n    }\r\n    createProperty(projectId, id) {\r\n        return API.post(`/properties/${projectId}`, { id });\r\n    }\r\n    deleteProperty(projectId, ids) {\r\n        return API.post(`/properties/${projectId}/delete`, { ids });\r\n    }\r\n    saveStatus(projectId, id, data) {\r\n        return API.put(`/properties/${projectId}/status/${id}`, data);\r\n    }\r\n}\r\n\r\nexport default new PropertyService();\r\n","import {\n    Button,\n    Form,\n    Input,\n    InputNumber,\n    Popconfirm,\n    Select,\n    Table,\n    Typography,\n} from \"antd\";\nimport React, { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport propertyService from \"services/property.service\";\n\nconst { Option } = Select;\n\nconst transferOrientationToObject = (data) => {\n    if (!data.Orientation) return data;\n    const o = {};\n    if (data.Orientation.indexOf(\"N\") !== -1) o.N = true;\n    else if (data.Orientation.indexOf(\"S\") !== -1) o.S = true;\n    if (data.Orientation.indexOf(\"E\") !== -1) o.E = true;\n    else if (data.Orientation.indexOf(\"W\") !== -1) o.W = true;\n    return { ...data, Orientation: o };\n};\n\nconst transferOrientationToString = (data) => {\n    let o = \"\";\n    if (data.Orientation.N) o = o + \"N\";\n    else if (data.Orientation.S) o = o + \"S\";\n    if (data.Orientation.E) o = o + \"E\";\n    else if (data.Orientation.W) o = o + \"W\";\n    return { ...data, Orientation: o };\n};\n\nconst EditableCell = ({\n    editing,\n    dataIndex,\n    title,\n    inputType,\n    property,\n    index,\n    children,\n    ...restProps\n}) => {\n    let inputNode = <InputNumber />;\n\n    switch (inputType) {\n        case \"number\":\n            inputNode = <InputNumber />;\n            break;\n        case \"orientation\":\n            inputNode = (\n                <Select>\n                    <Option value=\"N\">North</Option>\n                    <Option value=\"NE\">North-East</Option>\n                    <Option value=\"E\">East</Option>\n                    <Option value=\"SE\">South-East</Option>\n                    <Option value=\"S\">South</Option>\n                    <Option value=\"SW\">South-West</Option>\n                    <Option value=\"W\">West</Option>\n                    <Option value=\"NW\">North-West</Option>\n                </Select>\n            );\n            break;\n        case \"availability\":\n            inputNode = (\n                <Select>\n                    <Option value=\"available\">Available</Option>\n                    <Option value=\"reserved\">Reserved</Option>\n                    <Option value=\"sold\">Sold</Option>\n                </Select>\n            );\n            break;\n        default:\n            inputNode = <Input />;\n    }\n    return (\n        <td {...restProps}>\n            {editing ? (\n                <Form.Item\n                    name={dataIndex}\n                    style={{\n                        margin: 0,\n                        width: \"100%\",\n                    }}\n                    rules={[\n                        {\n                            required: true,\n                            message: `Please Input ${title}!`,\n                        },\n                    ]}\n                >\n                    {inputNode}\n                </Form.Item>\n            ) : (\n                children\n            )}\n        </td>\n    );\n};\n\nconst capitalize = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\nconst PropertiesTable = (props) => {\n    const { properties, project, setProperties, admin, setEditModalOpen } =\n        props;\n    const [selectedProperties, setSelectedProperties] = useState([]);\n    const [editingKey, setEditingKey] = useState(\"\");\n\n    const [form] = Form.useForm();\n    const isEditing = (property) => property.id === editingKey;\n\n    const edit = (property) => {\n        form.setFieldsValue(property);\n        setEditingKey(property.id);\n    };\n\n    const cancel = () => {\n        setEditingKey(\"\");\n    };\n\n    const save = async (key) => {\n        try {\n            const values = await form.validateFields();\n            const response = await propertyService.saveProperty(\n                project.id,\n                key,\n                transferOrientationToObject(values)\n            );\n\n            if (response.data) {\n                toast.success(\"Saved\");\n                setProperties(response.data);\n                setEditingKey(\"\");\n            }\n        } catch (errInfo) {\n            console.log(\"Validate Failed:\", errInfo);\n        }\n    };\n\n    const deleteProperty = async () => {\n        const response = await propertyService.deleteProperty(\n            project.id,\n            selectedProperties\n        );\n        if (response.data) setProperties(response.data);\n    };\n\n    const columns = [\n        {\n            title: \"Name\",\n            dataIndex: \"Name\",\n            sorter: (a, b) => (a.Name > b.Name ? 1 : -1),\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: admin,\n            inputType: \"text\",\n            width: 100,\n        },\n        {\n            title: \"Availability\",\n            dataIndex: \"Availability\",\n            sorter: (a, b) => (a.Availability > b.Availability ? 1 : -1),\n            sortDirections: [\"descend\", \"ascend\"],\n            onFilter: (value, property) =>\n                property.Availability.indexOf(value) === 0,\n            editable: true,\n            inputType: \"availability\",\n            width: 100,\n            render: (_, property) => capitalize(property.Availability),\n        },\n        {\n            title: \"Surface\",\n            dataIndex: \"Surface\",\n            sorter: (a, b) => a.Surface - b.Surface,\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: admin,\n            inputType: \"number\",\n            width: 100,\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"Price\",\n            sorter: (a, b) => a.Price - b.Price,\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: true,\n            inputType: \"number\",\n            width: 100,\n        },\n        {\n            title: \"Bedrooms\",\n            dataIndex: \"BedroomsCount\",\n            key: \"bedrooms\",\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: admin,\n            inputType: \"number\",\n            width: 100,\n        },\n        {\n            title: \"Bathrooms\",\n            dataIndex: \"BathroomsCount\",\n            sorter: (a, b) => a.BathroomsCount - b.BathroomsCount,\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: admin,\n            inputType: \"number\",\n            width: 100,\n        },\n        ...(project.url.toLowerCase() === \"Imperial_Square\".toLowerCase()\n            ? []\n            : [\n                  {\n                      title: \"Frontage\",\n                      dataIndex: \"Frontage\",\n                      sorter: (a, b) => a.Frontage - b.Frontage,\n                      sortDirections: [\"descend\", \"ascend\"],\n                      editable: admin,\n                      inputType: \"number\",\n                      width: 100,\n                  },\n                  {\n                      title: \"Depth\",\n                      dataIndex: \"Depth\",\n                      sorter: (a, b) => a.Depth - b.Depth,\n                      sortDirections: [\"descend\", \"ascend\"],\n                      editable: admin,\n                      inputType: \"number\",\n                      width: 100,\n                  },\n              ]),\n        {\n            title: \"Orientation\",\n            dataIndex: \"Orientation\",\n\n            sorter: (a, b) =>\n                transferOrientationToString(a).Orientation >\n                transferOrientationToString(b).Orientation\n                    ? 1\n                    : -1,\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: admin,\n            inputType: \"orientation\",\n            width: 100,\n        },\n        {\n            title: \"Actions\",\n            dataIndex: \"actions\",\n            width: 80,\n            render: (_, property) => {\n                const editable = isEditing(property);\n                return editable ? (\n                    <span>\n                        <Typography.Link\n                            onClick={() => save(property.id)}\n                            style={{\n                                marginRight: 8,\n                            }}\n                        >\n                            Save\n                        </Typography.Link>\n\n                        <Typography.Link onClick={cancel}>\n                            Cancel\n                        </Typography.Link>\n                    </span>\n                ) : (\n                    <span>\n                        <Typography.Link\n                            disabled={editingKey !== \"\"}\n                            onClick={() => edit(property)}\n                        >\n                            Edit\n                        </Typography.Link>\n                    </span>\n                );\n            },\n        },\n    ];\n\n    const mergedColumns = columns.map((col) => {\n        if (!col.editable) {\n            return col;\n        }\n\n        return {\n            ...col,\n            onCell: (property) => ({\n                property,\n                inputType: col.inputType,\n                dataIndex: col.dataIndex,\n                title: col.title,\n                editing: isEditing(property),\n            }),\n        };\n    });\n\n    const onAddProperty = async () => {\n        const response = await propertyService.createProperty(\n            project.id,\n            properties.length ? properties[properties.length - 1].id : \"\"\n        );\n        if (response.data) {\n            toast.success(\"Added\");\n            setProperties(response.data.newProperties);\n            setEditingKey(response.data.newProperty.id);\n            form.setFieldsValue(\n                transferOrientationToString(response.data.newProperty)\n            );\n            document.querySelector(\"div.ant-table-body\").scrollTop = 1000000;\n        }\n    };\n    return (\n        <>\n            <Form form={form} component={false}>\n                <Table\n                    components={{\n                        body: {\n                            cell: EditableCell,\n                        },\n                    }}\n                    size=\"small\"\n                    bordered\n                    dataSource={properties.map((i) => {\n                        const d = transferOrientationToString(i);\n                        return { ...d, key: d.id };\n                    })}\n                    columns={mergedColumns}\n                    rowClassName=\"editable-row\"\n                    rowSelection={\n                        admin\n                            ? {\n                                  type: \"checkbox\",\n                                  onChange: (_, selectedRows) => {\n                                      setSelectedProperties(\n                                          selectedRows.map((i) => i.id)\n                                      );\n                                  },\n                              }\n                            : null\n                    }\n                    pagination={false}\n                    tableLayout=\"fixed\"\n                    scroll={{\n                        y: \"calc(100vh - 230px)\",\n                    }}\n                />\n            </Form>\n            {admin && (\n                <Button\n                    onClick={onAddProperty}\n                    style={{ margin: \"16px\" }}\n                    type=\"primary\"\n                >\n                    Add property\n                </Button>\n            )}\n            {!!selectedProperties.length && admin && (\n                <Typography.Link\n                    onClick={() => deleteProperty()}\n                    type=\"danger\"\n                    disabled={editingKey}\n                >\n                    Delete\n                </Typography.Link>\n            )}\n        </>\n    );\n};\n\nexport default PropertiesTable;\n","import React, { useEffect } from \"react\";\n\nimport propertyService from \"services/property.service\";\nimport PropertiesTable from \"components/ProjectView/Components/PropertiesTable\";\nimport projectService from \"services/project.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst Properties = (props) => {\n    const { admin, id, project, properties, setProject, setProperties } = props;\n\n    useEffect(() => {\n        propertyService.getProperty(id).then((response) => {\n            setProperties(response.data);\n        });\n\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n\n    useLoginCheck();\n\n    return (\n        properties &&\n        project && (\n            <PropertiesTable\n                properties={properties}\n                setProperties={setProperties}\n                project={project}\n                admin={admin}\n            />\n        )\n    );\n};\n\nexport default Properties;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Properties from \"./Properties\";\nimport LayoutHOC from \"layout/Layout\";\nimport { Layout, PageHeader } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport propertyService from \"services/property.service\";\nimport projectService from \"services/project.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst PropertiesAdmin = (props) => {\n    const { id } = useParams();\n\n    const navigate = useNavigate();\n    const [project, setProject] = useState(null);\n    const [properties, setProperties] = useState(null);\n    useLoginCheck();\n\n    useEffect(() => {\n        propertyService.getProperty(id).then((response) => {\n            setProperties(response.data);\n        });\n\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(`/admin/projects/${id}`)}\n                    title={`Properties of project id: ${id}`}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"1200px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Properties\n                        admin\n                        id={id}\n                        setProject={setProject}\n                        setProperties={setProperties}\n                        project={project}\n                        properties={properties}\n                    />\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default PropertiesAdmin;\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport LayoutHOC from \"layout/Layout\";\nimport {\n    Button,\n    Form,\n    Input,\n    Layout,\n    List,\n    PageHeader,\n    Popconfirm,\n    Select,\n    Space,\n    Typography,\n    Upload,\n} from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport projectService from \"services/project.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\nimport toast from \"react-hot-toast\";\nimport YouTube from \"react-youtube\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport utilsService from \"services/utils.service\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\nimport uploadMedia from \"helpers/uploadMedia\";\n\nconst MediaAdmin = (props) => {\n    const { id } = useParams();\n    const formRef = useRef(null);\n\n    const navigate = useNavigate();\n    const [project, setProject] = useState(null);\n    useLoginCheck();\n\n    useEffect(() => {\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n\n    const onFinish = async (values) => {\n        const response = await projectService.addMedia(id, values);\n        if (response.data) {\n            toast.success(\"Saved\");\n            setProject(response.data);\n            if (formRef.current) formRef.current.resetFields();\n        }\n    };\n    const handleMove = async (mediaId, down) => {\n        const response = await projectService.moveMedia(id, mediaId, down);\n        if (response.data) {\n            toast.success(\"Moved\");\n            setProject(response.data);\n        }\n    };\n    const handleDelete = async (mediaId) => {\n        const response = await projectService.deleteMedia(id, mediaId);\n        if (response.data) {\n            toast.success(\"Deleted\");\n            setProject(response.data);\n        }\n    };\n\n    const customUpload = uploadMedia((values) => {\n        if (formRef.current) {\n            formRef.current.setFieldsValue({\n                ...formRef.current.values,\n                ...values,\n            });\n        }\n    }, formRef?.current?.getFieldValue(\"type\") === \"video\");\n\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(`/admin/projects/${id}`)}\n                    title={`Media of project id: ${id}`}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"1200px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    {project && project.media && (\n                        <div>\n                            <List\n                                itemLayout=\"vertical\"\n                                size=\"large\"\n                                dataSource={project.media}\n                                renderItem={(item, index) => (\n                                    <List.Item\n                                        key={item.id}\n                                        actions={[\n                                            <Button\n                                                size=\"small\"\n                                                key=\"up\"\n                                                onClick={() =>\n                                                    handleMove(item.id, false)\n                                                }\n                                            >\n                                                Move up\n                                            </Button>,\n                                            <Button\n                                                size=\"small\"\n                                                key=\"down\"\n                                                onClick={() =>\n                                                    handleMove(item.id, true)\n                                                }\n                                            >\n                                                Move down\n                                            </Button>,\n                                            <Popconfirm\n                                                title=\"Are you sure to delete this media?\"\n                                                onConfirm={() =>\n                                                    handleDelete(item.id)\n                                                }\n                                                okText=\"Yes\"\n                                                cancelText=\"No\"\n                                                key=\"delete\"\n                                            >\n                                                <Button size=\"small\" danger>\n                                                    Delete\n                                                </Button>\n                                            </Popconfirm>,\n                                        ]}\n                                        extra={\n                                            item.type === \"video\" ? (\n                                                <video\n                                                    id=\"my-player\"\n                                                    class=\"video-js\"\n                                                    controls\n                                                    preload=\"auto\"\n                                                    data-setup=\"{}\"\n                                                >\n                                                    <source\n                                                        src={item.url}\n                                                        type=\"video/mp4\"\n                                                    ></source>\n                                                    <p class=\"vjs-no-js\">\n                                                        To view this video\n                                                        please enable\n                                                        JavaScript, and consider\n                                                        upgrading to a web\n                                                        browser that\n                                                        <a\n                                                            href=\"https://videojs.com/html5-video-support/\"\n                                                            target=\"_blank\"\n                                                            rel=\"noreferrer\"\n                                                        >\n                                                            supports HTML5 video\n                                                        </a>\n                                                    </p>\n                                                </video>\n                                            ) : (\n                                                <img\n                                                    width=\"100%\"\n                                                    style={{\n                                                        maxWidth: \"300px\",\n                                                    }}\n                                                    alt=\"logo\"\n                                                    src={item.url}\n                                                />\n                                            )\n                                        }\n                                    >\n                                        <List.Item.Meta\n                                            description={item.type}\n                                            title={`${index + 1}. ${\n                                                item.name || \"no name\"\n                                            }`}\n                                        />\n                                        {item.url}\n                                    </List.Item>\n                                )}\n                            />\n                            <Form\n                                onFinish={onFinish}\n                                style={{\n                                    padding: \" 16px\",\n                                    maxWidth: \"500px\",\n                                    margin: \"auto\",\n                                    backgroundColor: \"#eee\",\n                                }}\n                                ref={formRef}\n                            >\n                                <Typography.Title level={4}>\n                                    Add new media\n                                </Typography.Title>\n                                <Form.Item\n                                    name=\"type\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Select placeholder=\"Choose type\">\n                                        <Select.Option value=\"photo\">\n                                            Photo\n                                        </Select.Option>\n                                        <Select.Option value=\"plan\">\n                                            Plan\n                                        </Select.Option>\n                                        <Select.Option value=\"video\">\n                                            Video\n                                        </Select.Option>\n                                    </Select>\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"name\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Input placeholder=\"Name\" />\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"url\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Input placeholder=\"Url\" readOnly />\n                                </Form.Item>\n                                <Form.Item name=\"thumbnail\" hidden>\n                                    <Input placeholder=\"Thumbnail\" />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Upload\n                                        accept=\"image/*,video/*\"\n                                        listType=\"picture\"\n                                        maxCount={1}\n                                        customRequest={customUpload}\n                                    >\n                                        <Button icon={<UploadOutlined />}>\n                                            Upload (Max: 1)\n                                        </Button>\n                                    </Upload>\n                                </Form.Item>\n\n                                <Form.Item>\n                                    <Button\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        style={{ width: \"100%\" }}\n                                    >\n                                        Add media\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    )}\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default MediaAdmin;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { Drawer, Layout, Menu, PageHeader } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport { useUser } from \"context/UserContext\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Properties from \"./Properties\";\nimport projectService from \"services/project.service\";\nimport propertyService from \"services/property.service\";\n\nconst PropertiesClient = (props) => {\n    const { id } = useParams();\n    const { logout, isLoggedIn, authData } = useUser();\n    const navigate = useNavigate();\n    const [project, setProject] = useState(null);\n    const [properties, setProperties] = useState(null);\n\n    const [openDrawer, setOpenDrawer] = useState(false);\n\n    useEffect(() => {\n        propertyService.getProperty(id).then((response) => {\n            setProperties(response.data);\n        });\n\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (\n            !isLoggedIn ||\n            (!authData?.super &&\n                id.toString() !== authData?.projectId.toString())\n        ) {\n            logout();\n            navigate(\"/login\");\n            return null;\n        }\n    }, [isLoggedIn, authData?.super, authData?.projectId]);\n\n    return (\n        <LayoutHOC loading={!properties || !project}>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => setOpenDrawer(true)}\n                    backIcon={<MenuOutlined />}\n                    title={\"Appartments\"}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"1200px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Properties\n                        id={id}\n                        setProject={setProject}\n                        setProperties={setProperties}\n                        project={project}\n                        properties={properties}\n                    />\n                </Content>\n            </Layout>\n            <Drawer\n                title=\"Menu\"\n                placement=\"left\"\n                onClose={() => setOpenDrawer(false)}\n                visible={openDrawer}\n            >\n                <Menu\n                    mode=\"inline\"\n                    style={{ width: \"100%\" }}\n                    onClick={({ item, key }) => {\n                        setOpenDrawer(false);\n                        switch (key) {\n                            case \"logout\":\n                                logout();\n                                break;\n                            case \"visit\":\n                                navigate(`/p/${project.url}`);\n                                break;\n                            case \"analytics\":\n                                navigate(`/p-admin/${project.id}/analytics`);\n                                break;\n                            default:\n                                return;\n                        }\n                    }}\n                    activeKey=\"properties\"\n                    selectedKeys={[\"properties\"]}\n                >\n                    <Menu.Item key=\"properties\">Properties</Menu.Item>\n                    <Menu.Item key=\"analytics\">Analytics</Menu.Item>\n                    <Menu.Item key=\"visit\">Visit project</Menu.Item>\n                    <Menu.Item key=\"logout\">Logout</Menu.Item>\n                </Menu>\n            </Drawer>\n        </LayoutHOC>\n    );\n};\n\nexport default PropertiesClient;\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport LayoutHOC from \"layout/Layout\";\nimport { Button, Checkbox, Form, Layout, PageHeader } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport projectService from \"services/project.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\nimport toast from \"react-hot-toast\";\nimport \"video.js/dist/video-js.css\";\nimport { AppUI } from \"components/ProjectView/Components/ProjectUI/AppUI\";\nimport { ChromePicker } from \"react-color\";\n\nconst UIAdmin = (props) => {\n  const { id } = useParams();\n  const [uiData, setUiData] = useState({});\n  const [loaded, setLoaded] = useState(false);\n\n  const navigate = useNavigate();\n  const [project, setProject] = useState(null);\n  useLoginCheck();\n\n  useEffect(() => {\n    projectService.getProject(id).then((response) => {\n      setProject(response.data);\n      setLoaded(true);\n    });\n  }, []);\n\n  const onFinish = async () => {\n    const response = await projectService.saveProject(id, { uiData });\n    if (response.data) {\n      toast.success(\"Saved\");\n      setProject(response.data);\n    }\n  };\n\n  useEffect(() => {\n    setUiData({ ...(project?.uiData || {}), ...uiData });\n  }, [project?.uiData]);\n\n  const [hideHidden, setHideHidden] = useState(false);\n  const [hideControls, setHideControls] = useState(false);\n\n  return (\n    <LayoutHOC>\n      <Layout\n        style={{\n          height: \"100%\",\n          display: \"flex\",\n          flex: 1,\n          background: \"white\",\n        }}\n      >\n        <PageHeader\n          onBack={() => navigate(`/admin/projects/${id}`)}\n          title={`UI of project id: ${id}`}\n          style={{\n            boxShadow: \"1px 1px 10px 1px #ccc\",\n            position: \"fixed\",\n            zIndex: 100,\n            width: \"100%\",\n          }}\n        />\n\n        <Content\n          style={{\n            flex: 1,\n            overflow: \"auto\",\n            padding: \"16px\",\n            paddingTop: \"100px\",\n            paddingBottom: \"100px\",\n            maxWidth: \"1200px\",\n            width: \"100%\",\n            margin: \"auto\",\n          }}\n        >\n          {loaded && (\n            <Form\n              labelCol={{ span: 8 }}\n              wrapperCol={{ span: 16 }}\n              onFinish={onFinish}\n              onValuesChange={(values) => {\n                setUiData((prevState) => ({ ...prevState, ...values }));\n              }}\n              initialValues={{ background: uiData?.background?.hex }}\n            >\n              <Form.Item label=\"Hide hidden elements\">\n                <Checkbox onChange={(e) => setHideHidden(e.target.checked)} />\n              </Form.Item>\n              <Form.Item label=\"Hide controls\">\n                <Checkbox onChange={(e) => setHideControls(e.target.checked)} />\n              </Form.Item>\n              <Form.Item\n                label=\"Background\"\n                name=\"background\"\n                valuePropName=\"color\"\n              >\n                <ChromePicker disableAlpha />\n              </Form.Item>\n              <Form.Item label=\"Text\" name=\"textColor\" valuePropName=\"color\">\n                <ChromePicker disableAlpha />\n              </Form.Item>\n              <Form.Item\n                label=\"Buttons text\"\n                name=\"buttonColor\"\n                valuePropName=\"color\"\n              >\n                <ChromePicker disableAlpha />\n              </Form.Item>\n              <Form.Item\n                label=\"Buttons hover text\"\n                name=\"buttonHoverColor\"\n                valuePropName=\"color\"\n              >\n                <ChromePicker disableAlpha />\n              </Form.Item>\n              <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Save\n                </Button>\n              </Form.Item>\n            </Form>\n          )}\n          <AppUI\n            project={project}\n            admin\n            uiData={uiData}\n            setUiData={setUiData}\n            hideHidden={hideHidden}\n            hideControls={hideControls}\n          />\n        </Content>\n      </Layout>\n    </LayoutHOC>\n  );\n};\n\nexport default UIAdmin;\n","import history from \"helpers/history\";\nimport Layout from \"layout/Layout\";\nimport Admins from \"pages/Admins\";\nimport AnalyticClient from \"pages/AnalyticClient\";\nimport Constants from \"pages/Constants\";\nimport CreateProject from \"pages/CreateProject\";\nimport Login from \"pages/Login\";\nimport ProjectDetails from \"pages/ProjectDetails\";\nimport Projects from \"pages/Projects\";\nimport PropertiesAdmin from \"pages/PropertiesAdmin\";\nimport MediaAdmin from \"pages/MediaAdmin\";\nimport PropertiesClient from \"pages/PropertiesClient\";\nimport { lazy, Suspense } from \"react\";\nimport { Toaster } from \"react-hot-toast\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport ProjectA from \"pages/ProjectA\";\nimport UIAdmin from \"pages/UIAdmin\";\n\nconst Home = lazy(() => import(\"pages/Home\"));\nconst Project = lazy(() => import(\"pages/Project\"));\n\nconst ResetPassword = lazy(() => import(\"pages/ResetPassword\"));\n\nfunction App() {\n  return (\n    <BrowserRouter history={history}>\n      <Suspense fallback={<Layout>{/* <Spinner size={100} /> */}</Layout>}>\n        <>\n          <Toaster position=\"top-right\" />\n          <Routes>\n            <Route exact path={\"/\"} element={<Home />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route exact path=\"/admin\" element={<Projects />}></Route>\n            <Route\n              exact\n              path=\"/admin/projects/:id\"\n              element={<ProjectDetails />}\n            ></Route>\n            <Route\n              exact\n              path=\"/admin/projects/create\"\n              element={<CreateProject />}\n            ></Route>\n            <Route\n              exact\n              path=\"/admin/projects/:id/properties\"\n              element={<PropertiesAdmin />}\n            ></Route>\n            <Route\n              exact\n              path=\"/admin/projects/:id/media\"\n              element={<MediaAdmin />}\n            ></Route>\n            <Route\n              exact\n              path=\"/admin/projects/:id/ui\"\n              element={<UIAdmin />}\n            ></Route>\n            <Route exact path=\"/admin/contant\" element={<Constants />}></Route>\n            <Route exact path=\"/admin/admins\" element={<Admins />}></Route>\n\n            <Route path=\"/reset-password\" element={<ResetPassword />}></Route>\n            <Route exact path=\"/p/:id\" element={<Project />}></Route>\n            <Route exact path=\"/pa\" element={<ProjectA />}></Route>\n            <Route\n              exact\n              path=\"/p-admin/:id\"\n              element={<PropertiesClient />}\n            ></Route>\n\n            <Route\n              exact\n              path=\"/p-admin/:id/analytics\"\n              element={<AnalyticClient />}\n            ></Route>\n\n            <Route path=\"*\" element={<h1>404 Error Found</h1>}></Route>\n          </Routes>\n        </>\n      </Suspense>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { UserProvider } from \"context/UserContext\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <HelmetProvider>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </HelmetProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import API from \"api/axios.config\";\r\n\r\nclass ProjectService {\r\n  getProject(id) {\r\n    return API.get(`/projects${id ? \"/\" + id : \"\"}`);\r\n  }\r\n\r\n  getProjectByUrl(id) {\r\n    return API.get(`/projects/url/${id}`);\r\n  }\r\n\r\n  getFeaturedProject() {\r\n    return API.get(`/projects/url/__featured__`);\r\n  }\r\n  saveProject(id, data) {\r\n    return API.put(`/projects/${id}`, data);\r\n  }\r\n  createProject(data) {\r\n    return API.post(`/projects`, data);\r\n  }\r\n  deleteProject(id) {\r\n    return API.delete(`/projects/${id}`);\r\n  }\r\n\r\n  addMedia(id, data) {\r\n    return API.post(`/projects/${id}/media`, data);\r\n  }\r\n  deleteMedia(id, mediaId) {\r\n    return API.delete(`/projects/${id}/media/${mediaId}`);\r\n  }\r\n  moveMedia(id, mediaId, down) {\r\n    return API.put(`/projects/${id}/media/${mediaId}`, null, {\r\n      params: { down: down ? \"true\" : \"false\" },\r\n    });\r\n  }\r\n}\r\n\r\nexport default new ProjectService();\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst Layout = ({ children, title, loading, description, isProject }) => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{title || \"Home\"} | IMMERSIV </title>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={\r\n                        description ||\r\n                        \"IMMERSIV is a digital interactive sales experience for unbuilt environments\"\r\n                    }\r\n                />\r\n            </Helmet>\r\n\r\n            {loading ? null : (\r\n                <div style={{ flex: 1, display: isProject ? \"flex\" : \"block\" }}>\r\n                    {children}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}