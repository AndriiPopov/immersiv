{"version":3,"sources":["components/ProjectView/Components/EmbededView/EmbededView.module.css","components/ProjectView/Layout/Contacts.module.css","components/ProjectView/Layout/ProjectView.module.css","components/ProjectView/Components/Loading/Loading.module.css","components/ProjectView/Components/LoadingView/LoadingView.jsx","components/ProjectView/Components/EmbededView/EmbededView.jsx","components/ProjectView/Log.js","components/ProjectView/Components/StreamView/StreamView.jsx","components/ProjectView/Components/Loading/Loading.jsx","components/ProjectView/Layout/ProjectView.jsx","pages/Project.jsx","components/ProjectView/Layout/Button.module.css"],"names":["module","exports","LoadingView","props","StreamerStatus","Connected","Completed","setLoaded","NotSupported","content","LaunchRequestStatus","status","LaunchStatusType","Unavailable","Error","Failed","className","viewBox","fillRule","d","style","position","left","top","transform","textAlign","EmbeddedView","videoRef","useRef","handle","useFullScreenHandle","isIPhone","System","Browser","os","window","navigator","userAgent","includes","flex","styles","fullscreen","Status","WarningThreshold","ExitThreshold","WarningCallback","exit","ExitCallback","location","reload","VideoRef","Emitter","InputEmitter","Stream","VideoStream","UseNativeTouchEvents","UsePointerLock","PointerLockRelease","onClick","enter","right","backgroundColor","borderColor","color","visibility","active","type","ExpandOutlined","LoggerProvider","getLogger","audio","Audio","autoplay","volume","platform","PlatformNext","initialize","endpoint","StreamView","project","useState","modelDefinitionUnavailable","setModelDefinitionUnavailable","UndefinedModelDefinition","modelDefinition","setModelDefinition","availableModels","setAvailableModels","launchRequestError","setLaunchRequestError","streamerOptions","DefaultStreamerOptions","useLaunchRequest","launchRequest","queueLaunchRequest","useStreamer","streamerStatus","emitter","videoStream","audioStream","loading","setLoading","useEffect","disconnect","srcObject","launch","a","load","LaunchType","useAsyncEffect","projectId","useAnonymousCredentials","connect","iceServers","agent","serviceCredentials","forceRelay","ForceRelay","getModels","models","logger","error","length","selectedModels","filter","model","modelId","id","Version","version","setStatus","display","height","overflow","alignItems","justifyContent","href","Disconnected","Withdrawn","useNativeTouchEvents","isMobileAgent","StreamViewWrapper","IsBrowserSupported","statusMessage","unknown","text","value","from","accepted","queued","requested","ready","arcware","serviced","cancelled","modelerror","unavailable","interval","Loading","loaded","videoInitialized","message","setMessage","nextPercentage","setNextPercentage","percentage","setPercentage","isArcware","Math","max","speed","clearTimeout","setTimeout","startPercentage","random","p","nP","wrap","backgroundOn","backgroundTypeVideo","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","undefined","autoPlay","muted","loop","backgroundVideo","playsInline","src","background","inset","center","projectDetailsOn","flexDirection","alt","logo","clientLogo","maxHeight","clientLogoMaxHeight","maxWidth","clientLogoMaxWidth","width","marginBottom","marginTop","projectLogo","projectLogoMaxHeight","projectLogoMaxWidth","projectName","video","objectFit","zIndex","percent","trailColor","strokeColor","strokeWidth","showInfo","format","ProjectView","constant","useWindowSize","setVideoInitialized","flex1","ProjectA","mLogo","Project","projectData","setProjectData","setConstant","featured","useParams","projectService","getFeaturedProject","then","response","data","getProjectByUrl","constantService","getConstant","Layout","isProject"],"mappings":"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","file":"static/js/1.fc13ff1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullscreen\":\"EmbededView_fullscreen__1m664\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Contacts_wrap__2WEXY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"ProjectView_wrap__iK_7o\",\"top\":\"ProjectView_top__2Rfxf\",\"center\":\"ProjectView_center__1yFTm\",\"viewWrap\":\"ProjectView_viewWrap__culxl\",\"viewInner\":\"ProjectView_viewInner__2j2X3\",\"bottomWrap\":\"ProjectView_bottomWrap__1TInE\",\"bottomCenter\":\"ProjectView_bottomCenter__2gorA\",\"bottomCenterLeft\":\"ProjectView_bottomCenterLeft__3-Zo4\",\"bottomCenterCenter\":\"ProjectView_bottomCenterCenter__3cPu7\",\"bottomCenterRight\":\"ProjectView_bottomCenterRight__g8Eh3\",\"contactWrap\":\"ProjectView_contactWrap__1svCq\",\"contactIconWrap\":\"ProjectView_contactIconWrap__3eQaN\",\"contactIcon\":\"ProjectView_contactIcon__3IXlv\",\"contactText\":\"ProjectView_contactText__7tRgI\",\"mLogo\":\"ProjectView_mLogo__JLCj5\",\"mCenter\":\"ProjectView_mCenter__1LiMo\",\"flex1\":\"ProjectView_flex1__1gebJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Loading_wrap__FOxXe\",\"logo\":\"Loading_logo___Qs_r\",\"center\":\"Loading_center__1Nf3i\",\"video\":\"Loading_video__OXbDo\",\"backgroundVideo\":\"Loading_backgroundVideo__nXG_A\"};","import React from \"react\";\nimport { LaunchStatusType, StreamerStatus } from \"@pureweb/platform-sdk\";\n\nexport const LoadingView = (props) => {\n    if (\n        props.StreamerStatus === StreamerStatus.Connected ||\n        props.StreamerStatus === StreamerStatus.Completed\n    ) {\n        props.setLoaded(true);\n        return <div />;\n    }\n\n    let content;\n\n    if (props.StreamerStatus === StreamerStatus.NotSupported) {\n        props.setLoaded(true);\n        content = (\n            <div>\n                <h3>\n                    Your browser does not support the necessary WebRTC\n                    capabilities.\n                </h3>\n            </div>\n        );\n    }\n    if (\n        props.LaunchRequestStatus.status === LaunchStatusType.Unavailable ||\n        props.LaunchRequestStatus.status === LaunchStatusType.Error ||\n        props.StreamerStatus === StreamerStatus.Failed\n    ) {\n        props.setLoaded(true);\n        content = (\n            <div>\n                <h3>The experience is presently unavailable.</h3>\n                <h3>Please refresh to request a new session.</h3>\n            </div>\n        );\n    } else {\n        content = (\n            <div>\n                <svg className=\"logo\" viewBox=\"410.5 265.5 90.12054 104.02344\">\n                    <g fillRule=\"nonzero\">\n                        <path d=\"M 495.4032 310.1983 L 484.1122 336.6803 C 483.9952 336.9373 483.8712 337.1633 483.7452 337.3853 L 459.3812 304.5723 L 477.0682 270.8543 C 478.1542 271.7123 478.9182 272.8703 479.6262 273.9833 L 480.0632 274.6613 L 495.0372 299.2173 C 495.9882 300.8173 496.5252 302.6543 496.5952 304.5553 C 496.6622 306.4163 496.2812 308.3503 495.4032 310.1983 M 448.9282 347.3083 C 448.5962 350.9113 448.2602 354.5423 447.7532 358.1613 C 447.2272 361.2263 446.4642 363.1463 445.4102 364.2293 C 444.4962 365.1683 443.2082 365.5153 441.5212 365.5073 L 434.7122 365.5073 C 431.3752 365.3863 430.9012 363.7163 429.4212 358.4833 C 429.1172 357.4093 428.7792 356.2143 428.4382 355.0733 C 428.3492 354.9843 419.5002 325.7033 417.1802 318.0873 L 437.5242 340.7223 C 438.4982 341.7353 439.5882 342.6203 440.7782 343.2493 C 441.9062 343.8473 443.1252 344.2143 444.4232 344.2493 L 449.2172 344.2233 C 449.1232 345.2093 449.0262 346.2453 448.9282 347.3083 M 475.7822 340.0613 C 475.7812 340.0613 475.7802 340.0623 475.7782 340.0623 C 475.7772 340.0623 475.7762 340.0613 475.7742 340.0613 L 444.5222 340.2333 C 443.8962 340.2143 443.2662 340.0153 442.6522 339.6903 C 441.8882 339.2863 441.1522 338.6853 440.4682 337.9813 L 416.1402 310.9083 C 415.7802 310.5073 415.4802 310.1443 415.2322 309.7873 L 455.7092 306.3673 L 480.4472 339.6853 C 479.2762 339.9463 477.7772 340.0643 475.7822 340.0613 M 430.4182 282.5003 C 431.9252 280.3873 433.5952 278.7143 435.5382 277.4503 C 437.4782 276.1883 439.7352 275.3073 442.4212 274.7693 L 471.2542 269.7603 C 471.9712 269.6263 472.6072 269.5813 473.2012 269.5833 L 456.0442 302.2923 C 456.0402 302.2933 456.0382 302.2953 456.0352 302.2963 L 414.7762 305.7823 C 414.9612 305.1193 415.2262 304.4623 415.6132 303.8563 L 430.4182 282.5003 M 498.4782 297.1393 C 494.8552 289.8933 487.6422 278.9223 483.0092 271.8113 C 480.7722 268.3063 478.2572 264.3733 470.5452 265.8003 L 441.6342 270.8183 C 438.4552 271.4533 435.7392 272.5253 433.3502 274.0793 C 430.9652 275.6313 428.9412 277.6463 427.1432 280.1703 C 422.2182 287.3093 417.2882 294.6593 412.2272 301.6833 C 411.5152 302.7953 411.0152 304.0283 410.7322 305.2793 C 410.5422 306.1473 410.5022 307.0243 410.5322 307.8933 C 410.5272 307.9843 410.4932 308.0683 410.5012 308.1613 C 410.5022 308.1823 410.5152 308.1983 410.5172 308.2183 C 410.5192 308.2443 410.5082 308.2683 410.5112 308.2943 C 410.5252 308.4063 410.5592 308.4853 410.5762 308.5923 C 410.5942 308.7653 410.5812 308.9443 410.6092 309.1163 C 411.0622 311.8913 412.0262 315.0063 412.9092 317.8673 L 424.5782 356.2233 C 424.9802 357.5693 425.2792 358.6233 425.5472 359.5703 C 427.6332 366.9413 428.3002 369.2943 434.5702 369.5223 L 441.5212 369.5233 C 444.2902 369.5343 446.5132 368.8593 448.2922 367.0323 C 449.9312 365.3483 451.0502 362.7473 451.7222 358.8383 L 451.7302 358.7753 C 452.2332 355.1963 452.5822 351.4193 452.9282 347.6713 C 453.0292 346.5673 453.1382 345.4223 453.2582 344.2013 L 475.7902 344.0773 C 475.7912 344.0773 475.7912 344.0763 475.7912 344.0763 C 479.2552 344.0813 481.6612 343.7543 483.4982 342.9103 C 485.5602 341.9623 486.8052 340.4913 487.7962 338.2863 L 499.0572 311.8803 C 500.2042 309.4543 500.7002 306.8953 500.6102 304.4133 C 500.5162 301.8253 499.7812 299.3223 498.4782 297.1393\" />\n                    </g>\n                </svg>\n                <h3>Please wait, your session is loading.</h3>\n            </div>\n        );\n    }\n    return (\n        <div\n            style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n            }}\n        >\n            <div style={{ textAlign: \"center\" }}>{content}</div>\n        </div>\n    );\n};\n","import { IdleTimeout, VideoStream, System } from \"@pureweb/platform-sdk-react\";\nimport React, { useRef } from \"react\";\nimport { LoadingView } from \"../LoadingView/LoadingView\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\n\nimport { StreamerStatus } from \"@pureweb/platform-sdk\";\nimport styles from \"./EmbededView.module.css\";\nimport { Button } from \"antd\";\nimport { ExpandOutlined } from \"@ant-design/icons\";\n\nexport const EmbeddedView = (props) => {\n    const videoRef = useRef(null);\n    const handle = useFullScreenHandle();\n    // Fullscreen API presently supported on iPad, but not iPhone or iPod\n    const isIPhone =\n        System.Browser().os === \"iOS\" &&\n        !window.navigator.userAgent.includes(\"iPad\");\n\n    // useEffect(() => {\n    //     const updateVideoScale = () => {\n    //         const box = videoRef.current;\n    //         if (box) {\n    //             const width = box.offsetWidth;\n    //             const height = box?.offsetHeight;\n    //             const presetRatio = 16 / 9;\n    //             const actualRatio = width / height;\n    //             if (actualRatio > presetRatio) {\n    //                 box.style.transform = `scale(${\n    //                     actualRatio / presetRatio\n    //                 }, 1)`;\n    //             } else {\n    //                 box.style.transform = `scale(1, ${\n    //                     presetRatio / actualRatio\n    //                 })`;\n    //             }\n    //         }\n    //     };\n\n    //     updateVideoScale();\n\n    //     window.addEventListener(\"resize\", updateVideoScale);\n    //     return () => window.removeEventListener(\"resize\", updateVideoScale);\n    // }, []);\n    return (\n        <div style={{ flex: 1, position: \"relative\" }}>\n            <FullScreen handle={handle} className={styles.fullscreen}>\n                <IdleTimeout\n                    Status={props.StreamerStatus}\n                    WarningThreshold={300}\n                    ExitThreshold={120}\n                    WarningCallback={handle.exit}\n                    ExitCallback={() => window.location.reload()} // TODO: How to 'close' a contribution?\n                />\n\n                <LoadingView\n                    LaunchRequestStatus={props.LaunchRequestStatus}\n                    StreamerStatus={props.StreamerStatus}\n                    setLoaded={props.setLoaded}\n                />\n                <VideoStream\n                    VideoRef={videoRef}\n                    Emitter={props.InputEmitter}\n                    Stream={props.VideoStream}\n                    UseNativeTouchEvents={props.UseNativeTouchEvents}\n                    UsePointerLock={props.UsePointerLock}\n                    PointerLockRelease={props.PointerLockRelease}\n                />\n\n                <Button\n                    onClick={handle.enter}\n                    style={{\n                        position: \"absolute\",\n                        top: 10,\n                        right: 10,\n                        backgroundColor: \"rgba(0,0,0,0.4)\",\n                        borderColor: \"#777777\",\n                        color: \"white\",\n                        visibility:\n                            isIPhone ||\n                            handle.active ||\n                            props.StreamerStatus !== StreamerStatus.Connected\n                                ? \"hidden\"\n                                : \"visible\",\n                    }}\n                    type=\"default\"\n                >\n                    <ExpandOutlined />\n                </Button>\n            </FullScreen>\n        </div>\n    );\n};\n","import { LoggerProvider } from \"@pureweb/platform-sdk\";\nexport default LoggerProvider.getLogger(\"client\");\n","import {\n    ModelDefinition,\n    PlatformNext,\n    UndefinedModelDefinition,\n    DefaultStreamerOptions,\n    StreamerStatus,\n} from \"@pureweb/platform-sdk\";\n\nimport {\n    useStreamer,\n    useLaunchRequest,\n    System,\n} from \"@pureweb/platform-sdk-react\";\n\nimport React, { useEffect, useState } from \"react\";\nimport useAsyncEffect from \"use-async-effect\";\nimport \"./StreamView.css\";\n\nimport { EmbeddedView } from \"../EmbededView/EmbededView\";\n\nimport logger from \"../../Log\";\nimport { isMobile as isMobileAgent } from \"react-device-detect\";\n\nconst audio = new Audio();\naudio.autoplay = true;\naudio.volume = 0.5;\n\n// Initialize platform reference\nconst platform = new PlatformNext();\nplatform.initialize({\n    endpoint: \"https://api.pureweb.io\",\n});\n\nconst StreamView = (props) => {\n    const { project } = props;\n\n    const [modelDefinitionUnavailable, setModelDefinitionUnavailable] =\n        useState(false);\n    const [modelDefinition, setModelDefinition] = useState(\n        new UndefinedModelDefinition()\n    );\n    const [availableModels, setAvailableModels] = useState();\n    const [launchRequestError, setLaunchRequestError] = useState();\n    const streamerOptions = DefaultStreamerOptions;\n\n    const [status, launchRequest, queueLaunchRequest] = useLaunchRequest(\n        platform,\n        modelDefinition,\n        {}\n    );\n    const [streamerStatus, emitter, videoStream, audioStream] = useStreamer(\n        platform,\n        launchRequest,\n        streamerOptions\n    );\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (streamerStatus === StreamerStatus.Failed) {\n            platform.disconnect();\n        }\n    }, [streamerStatus]);\n\n    if (audioStream) {\n        audio.srcObject = audioStream;\n    }\n\n    const launch = async () => {\n        setLoading(true);\n        audio.load();\n\n        if (project.LaunchType !== \"local\") {\n            try {\n                await queueLaunchRequest();\n            } catch (err) {\n                setLaunchRequestError(err);\n            }\n        }\n    };\n    useAsyncEffect(async () => {\n        if (project.projectId) {\n            // logger.info(\"Initializing available models: \" + project.projectId);\n            try {\n                await platform.useAnonymousCredentials(project.projectId);\n                await platform.connect();\n                // logger.info(\"Agent Connected: \" + platform.agent.id);\n                streamerOptions.iceServers =\n                    platform.agent.serviceCredentials.iceServers;\n                streamerOptions.forceRelay = project.ForceRelay;\n                const models = await platform.getModels();\n                setAvailableModels(models);\n                // logger.debug(\"Available models\", models);\n            } catch (err) {\n                logger.error(err);\n            }\n        }\n    }, [project]);\n    useEffect(() => {\n        if (availableModels?.length) {\n            const selectedModels = availableModels.filter(function (\n                model: ModelDefinition\n            ): boolean {\n                if (project.modelId === model.id) {\n                    // If there is a version specified and we encounter it\n                    if (project.Version && project.Version === model.version) {\n                        return true;\n                    }\n                    // If there is no version specified and we find the primary version\n                    if (!project.Version && model.active) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n            if (selectedModels?.length) {\n                setModelDefinition(selectedModels[0]);\n            } else {\n                setModelDefinitionUnavailable(true);\n            }\n        }\n    }, [availableModels]);\n\n    useEffect(() => {\n        if (modelDefinition.type === 0) return;\n\n        launch();\n    }, [modelDefinition]);\n\n    // Log status messages\n    useEffect(() => {\n        // logger.info(\"Status\", status, streamerStatus);\n        props.setStatus(status);\n    }, [status, streamerStatus]);\n    // Notify user of missing or errors in configuration\n    if (!project.modelId || !project.projectId) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <p>\n                    Your client has one or more configuration errors. Please\n                    consult the{\" \"}\n                    <a href=\"https://www.npmjs.com/package/@pureweb/cra-template-pureweb-client\">\n                        {\" \"}\n                        README{\" \"}\n                    </a>{\" \"}\n                    for details on how to configure the client template.\n                </p>\n            </div>\n        );\n    }\n\n    if (modelDefinitionUnavailable) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <span>The model that you have requested does not exist</span>\n            </div>\n        );\n    }\n\n    if (launchRequestError) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <span>\n                    {process.env.NODE_ENV === \"development\"\n                        ? `There was an error with the launch request: ${launchRequestError}`\n                        : \"It appears the requested model is currently not online as per your set schedule. Please contact support if it should be available.\"}\n                </span>\n            </div>\n        );\n    }\n\n    // Begin connection\n    if (streamerStatus === StreamerStatus.Disconnected) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <h2>Disconnected from stream</h2>\n            </div>\n        );\n    }\n\n    if (streamerStatus === StreamerStatus.Failed) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <h2>Failure during stream</h2>\n                <h2>Please refresh to request a new session</h2>\n            </div>\n        );\n    }\n\n    if (streamerStatus === StreamerStatus.Withdrawn) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <h2>Streamer contribution withdrawn</h2>\n            </div>\n        );\n    }\n\n    if (loading) {\n        const useNativeTouchEvents =\n            !!project[\n                isMobileAgent ? \"mobileNativeEvents\" : \"desktopNativeEvents\"\n            ];\n        return (\n            <EmbeddedView\n                VideoStream={videoStream}\n                StreamerStatus={streamerStatus}\n                LaunchRequestStatus={status}\n                InputEmitter={emitter}\n                UseNativeTouchEvents={useNativeTouchEvents}\n                UsePointerLock={project.UsePointerLock}\n                PointerLockRelease={project.PointerLockRelease}\n                setLoaded={props.setLoaded}\n            />\n        );\n    } else if (project.LaunchType !== \"local\" && !availableModels) {\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <h2>Initializing...</h2>\n            </div>\n        );\n    } else if (project.LaunchType !== \"local\" && !availableModels?.length) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <h2>No models are currently available in this environment.</h2>\n            </div>\n        );\n    } else {\n        return null;\n    }\n};\n\nconst StreamViewWrapper = (props) => {\n    return System.IsBrowserSupported() ? (\n        <div\n            style={{\n                backgroundColor: \"black\",\n                height: \"100%\",\n                flex: 1,\n                display: \"flex\",\n                color: \"white\",\n            }}\n        >\n            <StreamView\n                setLoaded={props.setLoaded}\n                setStatus={props.setStatus}\n                project={props.project}\n            />\n        </div>\n    ) : (\n        <div className=\"ui red segment center aligned basic\">\n            <h2 className=\"header\">Your browser is currently unsupported</h2>\n        </div>\n    );\n};\n\nexport default StreamViewWrapper;\n","import { Progress } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\n\nimport styles from \"./Loading.module.css\";\n\nconst statusMessage = {\n    unknown: { text: \"Initializing your connection\", value: 8, from: 0 },\n    accepted: { text: \"Accepted, requesting model\", value: 40, from: 8 },\n    queued: { text: \"In queue\", value: 40, from: 8 },\n    requested: { text: \"Model requested\", value: 50, from: 40 },\n    ready: { text: \"Ready, 3D session launching\", value: 100, from: 50 },\n    arcware: { text: \"The project is loading\", value: 100, from: 0 },\n    serviced: { text: \"Viewing model\" },\n    cancelled: { text: \"Cancelled\" },\n    modelerror: { text: \"An issue with the model has occurred\" },\n    unavailable: { text: \"The requested model does not exist\" },\n};\n\nlet interval = null;\n\nexport const Loading = (props) => {\n    const { loaded, setLoaded, status, project, videoInitialized } = props;\n    const [message, setMessage] = useState(null);\n    const [nextPercentage, setNextPercentage] = useState(0);\n    const [percentage, setPercentage] = useState(0);\n    useEffect(() => {\n        if (status?.status && statusMessage[status.status])\n            setMessage(statusMessage[status.status]);\n    }, [status?.status]);\n\n    useEffect(() => {\n        if (project.isArcware) setMessage(statusMessage.arcware);\n    }, [project.isArcware]);\n\n    useEffect(() => {\n        if (message?.text)\n            setNextPercentage(\n                message.value ? Math.max(nextPercentage, message.value) : 0\n            );\n    }, [message?.text]);\n\n    useEffect(() => {\n        const speed = project.isArcware ? 100 : 870;\n        if (nextPercentage) {\n            setPercentage(message?.from || 0);\n            if (interval) clearTimeout(interval);\n            interval = setTimeout(\n                () => startPercentage(message?.from || 0, nextPercentage),\n                Math.random() * speed\n            );\n        }\n\n        const startPercentage = (p, nP) => {\n            if (p < nP) {\n                if (interval) clearTimeout(interval);\n                setPercentage(p + 1);\n                interval = setTimeout(\n                    () => startPercentage(p + 1, nP),\n                    Math.random() * speed\n                );\n            }\n        };\n    }, [nextPercentage]);\n\n    useEffect(() => {\n        if (percentage === 100 && project.isArcware && videoInitialized) {\n            setTimeout(() => setLoaded(true), 2000);\n        }\n    }, [percentage, videoInitialized]);\n\n    return loaded ? null : (\n        <div\n            className={styles.wrap}\n            style={\n                project.backgroundOn && !project.backgroundTypeVideo\n                    ? {\n                          backgroundImage: `url(\"${project.backgroundImage}\")`,\n                          backgroundRepeat: \"no-repeat\",\n                          backgroundSize: \"cover\",\n                          backgroundPosition: \"center\",\n                      }\n                    : undefined\n            }\n        >\n            {project.backgroundOn && project.backgroundTypeVideo ? (\n                <video\n                    autoPlay\n                    muted\n                    loop\n                    className={styles.backgroundVideo}\n                    playsInline\n                >\n                    <source src={project.backgroundVideo} type=\"video/mp4\" />\n                </video>\n            ) : null}\n            <div\n                style={{\n                    background: \"rgba(0,0,0,.5)\",\n                    inset: \"0px\",\n                    position: \"absolute\",\n                }}\n            />\n\n            <div className={styles.center}>\n                <div>\n                    {project.projectDetailsOn && (\n                        <div\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                alignItems: \"center\",\n                            }}\n                        >\n                            <img\n                                src=\"/images/logo-white.png\"\n                                alt=\"logo\"\n                                className={styles.logo}\n                            />\n                            <img\n                                src={project.clientLogo}\n                                alt=\"logo\"\n                                style={{\n                                    maxHeight:\n                                        project.clientLogoMaxHeight + \"px\",\n                                    maxWidth: project.clientLogoMaxWidth + \"px\",\n                                    width: \"100%\",\n                                    marginBottom: \"36px\",\n                                    marginTop: \"36px\",\n                                }}\n                            />\n                            {project.projectLogo ? (\n                                <img\n                                    src={project.projectLogo}\n                                    alt=\"logo\"\n                                    style={{\n                                        maxHeight:\n                                            project.projectLogoMaxHeight + \"px\",\n                                        maxWidth:\n                                            project.projectLogoMaxWidth + \"px\",\n                                        width: \"100%\",\n                                        marginBottom: \"36px\",\n                                    }}\n                                />\n                            ) : (\n                                <h6 style={{ textAlign: \"center\" }}>\n                                    {project.projectName}\n                                </h6>\n                            )}\n                            {/* <p\n                                style={{\n                                    textAlign: \"center\",\n                                    marginBottom: \"36px\",\n                                }}\n                            >\n                                {project.description}\n                            </p> */}\n                        </div>\n                    )}\n\n                    <div className={styles.video}>\n                        <video\n                            autoPlay\n                            loop\n                            muted\n                            style={{ objectFit: \"contain\" }}\n                            playsInline\n                        >\n                            <source\n                                src=\"https://immersivmedia.s3.ap-southeast-2.amazonaws.com/website-media/navigation-a.mp4\"\n                                type=\"video/mp4\"\n                            />\n                        </video>\n                    </div>\n                </div>\n            </div>\n            <div style={{ zIndex: 1 }}>\n                {message?.text\n                    ? `${message?.text} ${percentage}%`\n                    : \"Initializing...\"}\n            </div>\n            {!!nextPercentage && (\n                <Progress\n                    // size=\"small\"\n                    type=\"line\"\n                    percent={percentage}\n                    style={{ marginBottom: 20 }}\n                    trailColor=\"black\"\n                    strokeColor={{\n                        \"0%\": \"#108ee9\",\n                        \"100%\": \"#87d068\",\n                    }}\n                    strokeWidth={3}\n                    showInfo={false}\n                    format={\n                        percentage !== 100\n                            ? (percent) => (\n                                  <span style={{ color: \"white\" }}>\n                                      {message?.text || \"Initializing...\"}\n                                      {percent}%\n                                  </span>\n                              )\n                            : undefined\n                    }\n                />\n            )}\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport { Button } from \"./Button\";\n\nimport StreamViewWrapper from \"../Components/StreamView/StreamView\";\nimport { PoweredLogo } from \"./PoweredLogo\";\n\nimport styles from \"./ProjectView.module.css\";\nimport { MailFilled, PhoneFilled } from \"@ant-design/icons\";\nimport { isMobile as isMobileAgent } from \"react-device-detect\";\n\nimport { useWindowSize } from \"@react-hook/window-size\";\nimport { Loading } from \"components/ProjectView/Components/Loading/Loading\";\nimport ProjectA from \"pages/ProjectA\";\nconst ProjectView = (props) => {\n    const { project, constant } = props;\n    const [width, height] = useWindowSize();\n    // const isMobile = isMobileAgent || width < 1200 || height < 700;\n    const isMobile = true;\n    const [loaded, setLoaded] = useState(false);\n    const [videoInitialized, setVideoInitialized] = useState(false);\n    const [status, setStatus] = useState(false);\n\n    return (\n        <>\n            <div className={isMobile ? styles.flex1 : styles.wrap}>\n                {!isMobile && <div className={styles.top}>{project.name}</div>}\n                <div className={isMobile ? styles.flex1 : styles.center}>\n                    {!isMobile && <PoweredLogo invisible />}\n                    <div className={isMobile ? styles.flex1 : styles.viewWrap}>\n                        <div\n                            className={\n                                isMobile ? styles.flex1 : styles.viewInner\n                            }\n                        >\n                            {project && project.isArcware ? (\n                                <ProjectA\n                                    project={project}\n                                    setLoaded={setLoaded}\n                                    setVideoInitialized={setVideoInitialized}\n                                />\n                            ) : (\n                                <StreamViewWrapper\n                                    setLoaded={setLoaded}\n                                    setStatus={setStatus}\n                                    project={project}\n                                />\n                            )}\n                            {loaded && (\n                                <img\n                                    src=\"/images/logo-white.png\"\n                                    alt=\"logo\"\n                                    className={styles.mLogo}\n                                />\n                            )}\n                            {!isMobile && (\n                                <>\n                                    {loaded && (\n                                        <img\n                                            src=\"/images/logo-white.png\"\n                                            alt=\"logo\"\n                                            className={styles.mLogo}\n                                        />\n                                    )}\n                                    <div className={styles.mCenter}>\n                                        <Button\n                                            link={`tel:${constant.call}`}\n                                            name=\"phone\"\n                                        ></Button>\n                                        <Button\n                                            link={`mailto:${constant.email}`}\n                                            name=\"mail\"\n                                        ></Button>\n                                    </div>\n                                </>\n                            )}\n                        </div>\n                    </div>\n                    {!isMobile && <PoweredLogo />}\n                </div>\n                {!isMobile && (\n                    <div className={styles.bottomWrap}>\n                        <PoweredLogo invisible />\n\n                        <div className={styles.bottomCenter}>\n                            <div className={styles.bottomCenterLeft}>\n                                <img\n                                    src=\"/images/controls.png\"\n                                    alt=\"logo\"\n                                    style={{ width: \"100%\" }}\n                                />\n                            </div>\n                            <div className={styles.bottomCenterCenter}>\n                                {project.logo && (\n                                    <img\n                                        src=\"/images/imperial-logo.png\"\n                                        alt=\"logo\"\n                                        style={{ height: \"120px\" }}\n                                    />\n                                )}\n                            </div>\n                            <div className={styles.bottomCenterRight}>\n                                <a\n                                    href={`tel:${constant.call}`}\n                                    className={styles.contactWrap}\n                                >\n                                    <div className={styles.contactIconWrap}>\n                                        <PhoneFilled\n                                            name=\"phone\"\n                                            className={styles.contactIcon}\n                                        />\n                                    </div>\n                                    <div style={{ width: \"10px\" }}></div>\n                                    <div className={styles.contactText}>\n                                        {constant.phone}\n                                    </div>\n                                </a>\n                                {/* <div style={{ height: \"20px\" }}></div> */}\n                                <a\n                                    href={`mailto:${constant.email}`}\n                                    className={styles.contactWrap}\n                                >\n                                    <div className={styles.contactIconWrap}>\n                                        <MailFilled\n                                            name=\"mail\"\n                                            size=\"small\"\n                                            className={styles.contactIcon}\n                                        />\n                                    </div>\n                                    <div style={{ width: \"10px\" }}></div>\n                                    <div className={styles.contactText}>\n                                        {constant.email}\n                                    </div>\n                                </a>\n                            </div>\n                        </div>\n                        <PoweredLogo invisible />\n                    </div>\n                )}\n            </div>\n            <Loading\n                loaded={loaded}\n                status={status}\n                project={project}\n                setLoaded={setLoaded}\n                videoInitialized={videoInitialized}\n            />\n        </>\n    );\n};\n\nexport default ProjectView;\n","import ProjectView from \"components/ProjectView/Layout/ProjectView\";\nimport Layout from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\nimport projectService from \"services/project.service\";\nimport { useParams } from \"react-router-dom\";\nimport constantService from \"services/constant.service\";\n\nconst Project = (props) => {\n    const [projectData, setProjectData] = useState(null);\n    const [constant, setConstant] = useState({});\n\n    const { featured } = props;\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        setProjectData(null);\n        if (featured)\n            projectService.getFeaturedProject().then((response) => {\n                setProjectData(response.data);\n            });\n        else\n            projectService.getProjectByUrl(id).then((response) => {\n                setProjectData(response.data);\n            });\n\n        constantService.getConstant().then((response) => {\n            if (response.data) setConstant(response.data);\n        });\n    }, [id, featured]);\n    return (\n        <Layout loading={!projectData} isProject>\n            <ProjectView project={projectData} constant={constant} />\n        </Layout>\n    );\n};\n\nexport default Project;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__lgQa7\",\"wrap\":\"Button_wrap__2Fic_\"};"],"sourceRoot":""}