{"version":3,"sources":["services/project.service.js","services/constant.service.js","components/ProjectView/Layout/DesktopLayout/Contacts.module.css","components/ProjectView/Layout/DesktopLayout/DesktopLayout.module.css","components/ProjectView/Layout/MobileLayout/Button.module.css","components/ProjectView/Layout/MobileLayout/MobileLayout.module.css","components/ProjectView/Components/Loading/Loading.module.css","components/ProjectView/Components/LoadingView/LoadingView.jsx","components/ProjectView/Components/EmbededView/EmbededView.jsx","components/ProjectView/Log.js","components/ProjectView/Components/StreamView/StreamView.jsx","components/ProjectView/Layout/DesktopLayout/PoweredLogo.jsx","components/ProjectView/Layout/DesktopLayout/DesktopLayout.jsx","components/ProjectView/Layout/MobileLayout/Button.jsx","components/ProjectView/Layout/MobileLayout/MobileLayout.jsx","components/ProjectView/Components/Loading/Loading.jsx","components/ProjectView/ProjectView.jsx","pages/Project.jsx"],"names":["ProjectService","id","API","get","data","put","post","delete","ConstantService","module","exports","LoadingView","props","StreamerStatus","Connected","Completed","setLoaded","NotSupported","content","LaunchRequestStatus","status","LaunchStatusType","Unavailable","Error","Failed","className","viewBox","fillRule","d","style","position","left","top","transform","textAlign","EmbeddedView","videoRef","useRef","flex","Status","WarningThreshold","ExitThreshold","ExitCallback","window","location","reload","VideoRef","Emitter","InputEmitter","Stream","VideoStream","UseNativeTouchEvents","UsePointerLock","PointerLockRelease","LoggerProvider","getLogger","audio","Audio","autoplay","volume","platform","PlatformNext","initialize","endpoint","StreamView","project","useState","modelDefinitionUnavailable","setModelDefinitionUnavailable","UndefinedModelDefinition","modelDefinition","setModelDefinition","availableModels","setAvailableModels","launchRequestError","setLaunchRequestError","streamerOptions","DefaultStreamerOptions","useLaunchRequest","launchRequest","queueLaunchRequest","useStreamer","streamerStatus","emitter","videoStream","audioStream","loading","setLoading","useEffect","disconnect","srcObject","launch","a","load","LaunchType","useAsyncEffect","projectId","logger","info","useAnonymousCredentials","connect","agent","iceServers","serviceCredentials","forceRelay","ForceRelay","getModels","models","debug","error","length","selectedModels","filter","model","modelId","Version","version","active","type","console","log","display","height","overflow","alignItems","justifyContent","Disconnected","Withdrawn","href","StreamViewWrapper","System","IsBrowserSupported","backgroundColor","color","PoweredLogo","styles","wrap","visibility","invisible","src","alt","width","DesktopLayout","constant","name","center","viewWrap","viewInner","bottomWrap","bottomCenter","bottomCenterLeft","bottomCenterCenter","logo","bottomCenterRight","call","contactWrap","contactIconWrap","size","contactIcon","contactText","phone","email","Button","link","button","MobileLayout","loaded","Loading","video","autoPlay","loop","muted","paddingBottom","ProjectView","useWindowSize","isMobile","isMobileAgent","Project","projectData","setProjectData","setConstant","featured","useParams","projectService","getFeaturedProject","then","response","getProject","constantService","getConstant","Layout"],"mappings":"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","file":"static/js/2.5def7125.chunk.js","sourcesContent":["import API from \"api/axios.config\";\r\n\r\nclass ProjectService {\r\n    getProject(id) {\r\n        return API.get(`/projects${id ? \"/\" + id : \"\"}`);\r\n    }\r\n\r\n    getFeaturedProject() {\r\n        return API.get(`/projects/__featured__`);\r\n    }\r\n    saveProject(id, data) {\r\n        return API.put(`/projects/${id}`, data);\r\n    }\r\n    createProject(data) {\r\n        return API.post(`/projects`, data);\r\n    }\r\n    deleteProject(id) {\r\n        return API.delete(`/projects/${id}`);\r\n    }\r\n}\r\n\r\nexport default new ProjectService();\r\n","import API from \"api/axios.config\";\r\n\r\nclass ConstantService {\r\n    getConstant() {\r\n        return API.get(`/constant`);\r\n    }\r\n    saveConstant(data) {\r\n        return API.put(`/constant`, data);\r\n    }\r\n}\r\n\r\nexport default new ConstantService();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Contacts_wrap__3_sbQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"DesktopLayout_wrap__1mtTA\",\"top\":\"DesktopLayout_top__Y4Ff7\",\"center\":\"DesktopLayout_center__2eQxd\",\"viewWrap\":\"DesktopLayout_viewWrap__D5Bx2\",\"viewInner\":\"DesktopLayout_viewInner__1zz8M\",\"bottomWrap\":\"DesktopLayout_bottomWrap__bulEz\",\"bottomCenter\":\"DesktopLayout_bottomCenter__2Zd2Y\",\"bottomCenterLeft\":\"DesktopLayout_bottomCenterLeft__1XdAW\",\"bottomCenterCenter\":\"DesktopLayout_bottomCenterCenter__1rkt5\",\"bottomCenterRight\":\"DesktopLayout_bottomCenterRight__2tzje\",\"contactWrap\":\"DesktopLayout_contactWrap__3awf9\",\"contactIconWrap\":\"DesktopLayout_contactIconWrap__3DzS0\",\"contactIcon\":\"DesktopLayout_contactIcon__zcub5\",\"contactText\":\"DesktopLayout_contactText__2wUm_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2AWMo\",\"wrap\":\"Button_wrap__34mdk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"MobileLayout_logo__1Jr_D\",\"center\":\"MobileLayout_center__330jW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Loading_wrap__FOxXe\",\"logo\":\"Loading_logo___Qs_r\",\"center\":\"Loading_center__1Nf3i\",\"video\":\"Loading_video__OXbDo\"};","import React from \"react\";\nimport { LaunchStatusType, StreamerStatus } from \"@pureweb/platform-sdk\";\n\nexport const LoadingView = (props) => {\n    if (\n        props.StreamerStatus === StreamerStatus.Connected ||\n        props.StreamerStatus === StreamerStatus.Completed\n    ) {\n        props.setLoaded(true);\n        return <div />;\n    }\n\n    let content;\n\n    if (props.StreamerStatus === StreamerStatus.NotSupported) {\n        props.setLoaded(true);\n        content = (\n            <div>\n                <h3>\n                    Your browser does not support the necessary WebRTC\n                    capabilities.\n                </h3>\n            </div>\n        );\n    }\n    if (\n        props.LaunchRequestStatus.status === LaunchStatusType.Unavailable ||\n        props.LaunchRequestStatus.status === LaunchStatusType.Error ||\n        props.StreamerStatus === StreamerStatus.Failed\n    ) {\n        props.setLoaded(true);\n        content = (\n            <div>\n                <h3>The experience is presently unavailable.</h3>\n                <h3>Please refresh to request a new session.</h3>\n            </div>\n        );\n    } else {\n        content = (\n            <div>\n                <svg className=\"logo\" viewBox=\"410.5 265.5 90.12054 104.02344\">\n                    <g fillRule=\"nonzero\">\n                        <path d=\"M 495.4032 310.1983 L 484.1122 336.6803 C 483.9952 336.9373 483.8712 337.1633 483.7452 337.3853 L 459.3812 304.5723 L 477.0682 270.8543 C 478.1542 271.7123 478.9182 272.8703 479.6262 273.9833 L 480.0632 274.6613 L 495.0372 299.2173 C 495.9882 300.8173 496.5252 302.6543 496.5952 304.5553 C 496.6622 306.4163 496.2812 308.3503 495.4032 310.1983 M 448.9282 347.3083 C 448.5962 350.9113 448.2602 354.5423 447.7532 358.1613 C 447.2272 361.2263 446.4642 363.1463 445.4102 364.2293 C 444.4962 365.1683 443.2082 365.5153 441.5212 365.5073 L 434.7122 365.5073 C 431.3752 365.3863 430.9012 363.7163 429.4212 358.4833 C 429.1172 357.4093 428.7792 356.2143 428.4382 355.0733 C 428.3492 354.9843 419.5002 325.7033 417.1802 318.0873 L 437.5242 340.7223 C 438.4982 341.7353 439.5882 342.6203 440.7782 343.2493 C 441.9062 343.8473 443.1252 344.2143 444.4232 344.2493 L 449.2172 344.2233 C 449.1232 345.2093 449.0262 346.2453 448.9282 347.3083 M 475.7822 340.0613 C 475.7812 340.0613 475.7802 340.0623 475.7782 340.0623 C 475.7772 340.0623 475.7762 340.0613 475.7742 340.0613 L 444.5222 340.2333 C 443.8962 340.2143 443.2662 340.0153 442.6522 339.6903 C 441.8882 339.2863 441.1522 338.6853 440.4682 337.9813 L 416.1402 310.9083 C 415.7802 310.5073 415.4802 310.1443 415.2322 309.7873 L 455.7092 306.3673 L 480.4472 339.6853 C 479.2762 339.9463 477.7772 340.0643 475.7822 340.0613 M 430.4182 282.5003 C 431.9252 280.3873 433.5952 278.7143 435.5382 277.4503 C 437.4782 276.1883 439.7352 275.3073 442.4212 274.7693 L 471.2542 269.7603 C 471.9712 269.6263 472.6072 269.5813 473.2012 269.5833 L 456.0442 302.2923 C 456.0402 302.2933 456.0382 302.2953 456.0352 302.2963 L 414.7762 305.7823 C 414.9612 305.1193 415.2262 304.4623 415.6132 303.8563 L 430.4182 282.5003 M 498.4782 297.1393 C 494.8552 289.8933 487.6422 278.9223 483.0092 271.8113 C 480.7722 268.3063 478.2572 264.3733 470.5452 265.8003 L 441.6342 270.8183 C 438.4552 271.4533 435.7392 272.5253 433.3502 274.0793 C 430.9652 275.6313 428.9412 277.6463 427.1432 280.1703 C 422.2182 287.3093 417.2882 294.6593 412.2272 301.6833 C 411.5152 302.7953 411.0152 304.0283 410.7322 305.2793 C 410.5422 306.1473 410.5022 307.0243 410.5322 307.8933 C 410.5272 307.9843 410.4932 308.0683 410.5012 308.1613 C 410.5022 308.1823 410.5152 308.1983 410.5172 308.2183 C 410.5192 308.2443 410.5082 308.2683 410.5112 308.2943 C 410.5252 308.4063 410.5592 308.4853 410.5762 308.5923 C 410.5942 308.7653 410.5812 308.9443 410.6092 309.1163 C 411.0622 311.8913 412.0262 315.0063 412.9092 317.8673 L 424.5782 356.2233 C 424.9802 357.5693 425.2792 358.6233 425.5472 359.5703 C 427.6332 366.9413 428.3002 369.2943 434.5702 369.5223 L 441.5212 369.5233 C 444.2902 369.5343 446.5132 368.8593 448.2922 367.0323 C 449.9312 365.3483 451.0502 362.7473 451.7222 358.8383 L 451.7302 358.7753 C 452.2332 355.1963 452.5822 351.4193 452.9282 347.6713 C 453.0292 346.5673 453.1382 345.4223 453.2582 344.2013 L 475.7902 344.0773 C 475.7912 344.0773 475.7912 344.0763 475.7912 344.0763 C 479.2552 344.0813 481.6612 343.7543 483.4982 342.9103 C 485.5602 341.9623 486.8052 340.4913 487.7962 338.2863 L 499.0572 311.8803 C 500.2042 309.4543 500.7002 306.8953 500.6102 304.4133 C 500.5162 301.8253 499.7812 299.3223 498.4782 297.1393\" />\n                    </g>\n                </svg>\n                <h3>Please wait, your session is loading.</h3>\n            </div>\n        );\n    }\n    return (\n        <div\n            style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n            }}\n        >\n            <div style={{ textAlign: \"center\" }}>{content}</div>\n        </div>\n    );\n};\n","import { IdleTimeout, VideoStream } from \"@pureweb/platform-sdk-react\";\nimport React, { useRef } from \"react\";\nimport { LoadingView } from \"../LoadingView/LoadingView\";\n\nexport const EmbeddedView = (props) => {\n    const videoRef = useRef(null);\n    // const handle = useFullScreenHandle();\n    // Fullscreen API presently supported on iPad, but not iPhone or iPod\n    // const isIPhone =\n    //     System.Browser().os === \"iOS\" &&\n    //     !window.navigator.userAgent.includes(\"iPad\");\n    return (\n        <div style={{ flex: 1, position: \"relative\" }}>\n            {/* <FullScreen handle={handle}> */}\n            <IdleTimeout\n                Status={props.StreamerStatus}\n                WarningThreshold={300}\n                ExitThreshold={120}\n                // WarningCallback={handle.exit}\n                ExitCallback={() => window.location.reload()} // TODO: How to 'close' a contribution?\n            />\n\n            <LoadingView\n                LaunchRequestStatus={props.LaunchRequestStatus}\n                StreamerStatus={props.StreamerStatus}\n                setLoaded={props.setLoaded}\n            />\n            <VideoStream\n                VideoRef={videoRef}\n                Emitter={props.InputEmitter}\n                Stream={props.VideoStream}\n                UseNativeTouchEvents={props.UseNativeTouchEvents}\n                UsePointerLock={props.UsePointerLock}\n                PointerLockRelease={props.PointerLockRelease}\n            />\n\n            {/* <Button\n                    onClick={handle.enter}\n                    style={{ position: \"absolute\", top: 10, right: 10 }}\n                    className={\n                        isIPhone ||\n                        handle.active ||\n                        props.StreamerStatus !== StreamerStatus.Connected\n                            ? \"hidden\"\n                            : \"\"\n                    }\n                >\n                    <Icon name=\"expand\" />\n                </Button> */}\n\n            {/* {props.StreamerStatus !== StreamerStatus.Connected && (\n                    <img\n                        alt=\"PureWeb Logo\"\n                        src=\"/pureweb.svg\"\n                        style={{\n                            width: 100,\n                            position: \"absolute\",\n                            bottom: 50,\n                            right: 10,\n                        }}\n                    />\n                )} */}\n            {/* </FullScreen> */}\n        </div>\n    );\n};\n","import { LoggerProvider } from \"@pureweb/platform-sdk\";\nexport default LoggerProvider.getLogger(\"client\");\n","import {\n    ModelDefinition,\n    PlatformNext,\n    UndefinedModelDefinition,\n    DefaultStreamerOptions,\n    StreamerStatus,\n} from \"@pureweb/platform-sdk\";\n\nimport {\n    useStreamer,\n    useLaunchRequest,\n    System,\n} from \"@pureweb/platform-sdk-react\";\n\nimport React, { useEffect, useState } from \"react\";\nimport useAsyncEffect from \"use-async-effect\";\nimport \"./StreamView.css\";\n\nimport { EmbeddedView } from \"../EmbededView/EmbededView\";\n\nimport logger from \"../../Log\";\n\nconst audio = new Audio();\naudio.autoplay = true;\naudio.volume = 0.5;\n\n// Initialize platform reference\nconst platform = new PlatformNext();\nplatform.initialize({\n    endpoint: \"https://api.pureweb.io\",\n});\n\nconst StreamView = (props) => {\n    const { project } = props;\n\n    const [modelDefinitionUnavailable, setModelDefinitionUnavailable] =\n        useState(false);\n    const [modelDefinition, setModelDefinition] = useState(\n        new UndefinedModelDefinition()\n    );\n    const [availableModels, setAvailableModels] = useState();\n    const [launchRequestError, setLaunchRequestError] = useState();\n    const streamerOptions = DefaultStreamerOptions;\n\n    const [status, launchRequest, queueLaunchRequest] = useLaunchRequest(\n        platform,\n        modelDefinition,\n        {}\n    );\n    const [streamerStatus, emitter, videoStream, audioStream] = useStreamer(\n        platform,\n        launchRequest,\n        streamerOptions\n    );\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (streamerStatus === StreamerStatus.Failed) {\n            platform.disconnect();\n        }\n    }, [streamerStatus]);\n\n    if (audioStream) {\n        audio.srcObject = audioStream;\n    }\n\n    const launch = async () => {\n        setLoading(true);\n        audio.load();\n\n        if (project.LaunchType !== \"local\") {\n            try {\n                await queueLaunchRequest();\n            } catch (err) {\n                setLaunchRequestError(err);\n            }\n        }\n    };\n    useAsyncEffect(async () => {\n        if (project.projectId) {\n            logger.info(\"Initializing available models: \" + project.projectId);\n            try {\n                await platform.useAnonymousCredentials(project.projectId);\n                await platform.connect();\n                logger.info(\"Agent Connected: \" + platform.agent.id);\n                streamerOptions.iceServers =\n                    platform.agent.serviceCredentials.iceServers;\n                streamerOptions.forceRelay = project.ForceRelay;\n                const models = await platform.getModels();\n                setAvailableModels(models);\n                logger.debug(\"Available models\", models);\n            } catch (err) {\n                logger.error(err);\n            }\n        }\n    }, [project]);\n    useEffect(() => {\n        if (availableModels?.length) {\n            const selectedModels = availableModels.filter(function (\n                model: ModelDefinition\n            ): boolean {\n                if (project.modelId === model.id) {\n                    // If there is a version specified and we encounter it\n                    if (project.Version && project.Version === model.version) {\n                        return true;\n                    }\n                    // If there is no version specified and we find the primary version\n                    if (!project.Version && model.active) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n            if (selectedModels?.length) {\n                setModelDefinition(selectedModels[0]);\n            } else {\n                setModelDefinitionUnavailable(true);\n            }\n        }\n    }, [availableModels]);\n\n    useEffect(() => {\n        if (modelDefinition.type === 0) return;\n\n        launch();\n    }, [modelDefinition]);\n\n    // Log status messages\n    useEffect(() => {\n        logger.info(\"Status\", status, streamerStatus);\n    }, [status, streamerStatus]);\n    console.log(project);\n    // Notify user of missing or errors in configuration\n    if (!project.modelId || !project.projectId) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <p>\n                    Your client has one or more configuration errors. Please\n                    consult the{\" \"}\n                    <a href=\"https://www.npmjs.com/package/@pureweb/cra-template-pureweb-client\">\n                        {\" \"}\n                        README{\" \"}\n                    </a>{\" \"}\n                    for details on how to configure the client template.\n                </p>\n            </div>\n        );\n    }\n\n    if (modelDefinitionUnavailable) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <span>The model that you have requested does not exist</span>\n            </div>\n        );\n    }\n\n    if (launchRequestError) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <span>\n                    {process.env.NODE_ENV === \"development\"\n                        ? `There was an error with the launch request: ${launchRequestError}`\n                        : \"It appears the requested model is currently not online as per your set schedule. Please contact support if it should be available.\"}\n                </span>\n            </div>\n        );\n    }\n\n    // Begin connection\n    if (streamerStatus === StreamerStatus.Disconnected) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <h2>Disconnected from stream</h2>\n            </div>\n        );\n    }\n\n    if (streamerStatus === StreamerStatus.Failed) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <h2>Failure during stream</h2>\n                <h2>Please refresh to request a new session</h2>\n            </div>\n        );\n    }\n\n    if (streamerStatus === StreamerStatus.Withdrawn) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <h2>Streamer contribution withdrawn</h2>\n            </div>\n        );\n    }\n\n    if (loading) {\n        return (\n            <EmbeddedView\n                VideoStream={videoStream}\n                StreamerStatus={streamerStatus}\n                LaunchRequestStatus={status}\n                InputEmitter={emitter}\n                UseNativeTouchEvents={project.UseNativeTouchEvents}\n                UsePointerLock={project.UsePointerLock}\n                PointerLockRelease={project.PointerLockRelease}\n                setLoaded={props.setLoaded}\n            />\n        );\n    } else if (project.LaunchType !== \"local\" && !availableModels) {\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <h2>Initializing...</h2>\n            </div>\n        );\n    } else if (project.LaunchType !== \"local\" && !availableModels?.length) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <h2>No models are currently available in this environment.</h2>\n            </div>\n        );\n    } else {\n        return null;\n    }\n};\n\nconst StreamViewWrapper = (props) => {\n    return System.IsBrowserSupported() ? (\n        <div\n            style={{\n                backgroundColor: \"black\",\n                height: \"100%\",\n                flex: 1,\n                display: \"flex\",\n                color: \"white\",\n            }}\n        >\n            <StreamView setLoaded={props.setLoaded} project={props.project} />\n        </div>\n    ) : (\n        <div className=\"ui red segment center aligned basic\">\n            <h2 className=\"header\">Your browser is currently unsupported</h2>\n        </div>\n    );\n};\n\nexport default StreamViewWrapper;\n","import React from \"react\";\nimport styles from \"./Contacts.module.css\";\n\nexport const PoweredLogo = (props) => {\n    return (\n        <div\n            className={styles.wrap}\n            style={{\n                visibility: props.invisible ? \"hidden\" : \"visible\",\n            }}\n        >\n            Powered by\n            <img\n                src=\"/images/logo-black.png\"\n                alt=\"logo\"\n                style={{ width: \"150px\" }}\n            />\n        </div>\n    );\n};\n","import React from \"react\";\nimport Phone from \"@mui/icons-material/Phone\";\nimport Mail from \"@mui/icons-material/Mail\";\n\nimport StreamViewWrapper from \"../../Components/StreamView/StreamView\";\nimport { PoweredLogo } from \"./PoweredLogo\";\n\nimport styles from \"./DesktopLayout.module.css\";\n\nexport const DesktopLayout = (props) => {\n    const { project, constant } = props;\n    return (\n        <div className={styles.wrap}>\n            <div className={styles.top}>{project.name}</div>\n            <div className={styles.center}>\n                <PoweredLogo invisible />\n                <div className={styles.viewWrap}>\n                    <div className={styles.viewInner}>\n                        <StreamViewWrapper\n                            setLoaded={props.setLoaded}\n                            project={project}\n                        />\n                    </div>\n                </div>\n                <PoweredLogo />\n            </div>\n            <div className={styles.bottomWrap}>\n                <PoweredLogo invisible />\n\n                <div className={styles.bottomCenter}>\n                    <div className={styles.bottomCenterLeft}>\n                        <img\n                            src=\"/images/controls.png\"\n                            alt=\"logo\"\n                            style={{ width: \"100%\" }}\n                        />\n                    </div>\n                    <div className={styles.bottomCenterCenter}>\n                        {project.logo && (\n                            <img\n                                src=\"/images/imperial-logo.png\"\n                                alt=\"logo\"\n                                style={{ height: \"120px\" }}\n                            />\n                        )}\n                    </div>\n                    <div className={styles.bottomCenterRight}>\n                        <a\n                            href={`tel:${constant.call}`}\n                            className={styles.contactWrap}\n                        >\n                            <div className={styles.contactIconWrap}>\n                                <Phone\n                                    name=\"phone\"\n                                    size=\"small\"\n                                    className={styles.contactIcon}\n                                />\n                            </div>\n                            <div style={{ width: \"10px\" }}></div>\n                            <div className={styles.contactText}>\n                                {constant.phone}\n                            </div>\n                        </a>\n                        {/* <div style={{ height: \"20px\" }}></div> */}\n                        <a\n                            href={`mailto:${constant.email}`}\n                            className={styles.contactWrap}\n                        >\n                            <div className={styles.contactIconWrap}>\n                                <Mail\n                                    name=\"mail\"\n                                    size=\"small\"\n                                    className={styles.contactIcon}\n                                />\n                            </div>\n                            <div style={{ width: \"10px\" }}></div>\n                            <div className={styles.contactText}>\n                                {constant.email}\n                            </div>\n                        </a>\n                    </div>\n                </div>\n                <PoweredLogo invisible />\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\n\nimport styles from \"./Button.module.css\";\nimport Phone from \"@mui/icons-material/Phone\";\nimport Mail from \"@mui/icons-material/Mail\";\n\nexport const Button = (props) => {\n    return (\n        <a className={styles.wrap} href={props.link}>\n            {props.name === \"phone\" ? (\n                <Phone className={styles.button}></Phone>\n            ) : (\n                <Mail className={styles.button}></Mail>\n            )}\n        </a>\n    );\n};\n","import React from \"react\";\n\nimport StreamViewWrapper from \"../../Components/StreamView/StreamView\";\nimport { Button } from \"./Button\";\nimport styles from \"./MobileLayout.module.css\";\n\nexport const MobileLayout = (props) => {\n    const { project, constant } = props;\n    return (\n        <div style={{ flex: 1 }}>\n            <StreamViewWrapper setLoaded={props.setLoaded} project={project} />\n            {props.loaded && (\n                <img\n                    src=\"/images/logo-white.png\"\n                    alt=\"logo\"\n                    className={styles.logo}\n                />\n            )}\n            <div className={styles.center}>\n                <Button link={`tel:${constant.call}`} name=\"phone\"></Button>\n                <Button link={`mailto:${constant.email}`} name=\"mail\"></Button>\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\n\nimport styles from \"./Loading.module.css\";\n\nexport const Loading = (props) => {\n    return props.loaded ? null : (\n        <div className={styles.wrap}>\n            <img\n                src=\"/images/logo-white.png\"\n                alt=\"logo\"\n                className={styles.logo}\n            />\n            <div className={styles.center}>\n                <div className={styles.video}>\n                    <video autoPlay loop muted>\n                        <source\n                            src={\"/videos/Immersiv-logo.mp4\"}\n                            type=\"video/mp4\"\n                        />\n                    </video>\n                </div>\n            </div>\n            <div style={{ paddingBottom: \"100px\" }}>Loading...</div>\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\n\nimport \"./ProjectView.css\";\n\nimport { isMobile as isMobileAgent } from \"react-device-detect\";\n\nimport { useWindowSize } from \"@react-hook/window-size\";\n\nimport { DesktopLayout } from \"./Layout/DesktopLayout/DesktopLayout\";\nimport { MobileLayout } from \"./Layout/MobileLayout/MobileLayout\";\nimport { Loading } from \"./Components/Loading/Loading\";\n// import ReactGA from \"react-ga\";\n\nconst ProjectView = (props) => {\n    const { project, constant } = props;\n    const [width, height] = useWindowSize();\n    const isMobile = isMobileAgent || width < 1000 || height < 600;\n    const [loaded, setLoaded] = useState(false);\n\n    //Add google analytic\n    // useEffect(() => {\n    //     if (client.GA) {\n    //         ReactGA.initialize(client.GA);\n    //         ReactGA.pageview(window.location.pathname + window.location.search);\n    //     }\n    // }, []);\n\n    return (\n        <>\n            {isMobile ? (\n                <MobileLayout\n                    setLoaded={setLoaded}\n                    loaded={loaded}\n                    project={project}\n                    constant={constant}\n                />\n            ) : (\n                <DesktopLayout\n                    setLoaded={setLoaded}\n                    project={project}\n                    constant={constant}\n                />\n            )}\n            <Loading loaded={loaded} />\n        </>\n    );\n};\n\nexport default ProjectView;\n","import ProjectView from \"components/ProjectView/ProjectView\";\nimport Layout from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\nimport projectService from \"services/project.service\";\nimport { useParams } from \"react-router-dom\";\nimport constantService from \"services/constant.service\";\n\nconst Project = (props) => {\n    const [projectData, setProjectData] = useState(null);\n    const [constant, setConstant] = useState({});\n\n    const { featured } = props;\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        setProjectData(null);\n        if (featured)\n            projectService.getFeaturedProject().then((response) => {\n                setProjectData(response.data);\n            });\n        else\n            projectService.getProject(id).then((response) => {\n                setProjectData(response.data);\n            });\n\n        constantService.getConstant().then((response) => {\n            if (response.data.length) setConstant(response.data[0]);\n        });\n    }, [id, featured]);\n    return (\n        <Layout loading={!projectData}>\n            <ProjectView project={projectData} constant={constant} />\n        </Layout>\n    );\n};\n\nexport default Project;\n"],"sourceRoot":""}