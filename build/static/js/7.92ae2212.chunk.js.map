{"version":3,"sources":["components/Dashboard/Projects/ProjectListItem.jsx","components/Dashboard/Projects/Projects.jsx","components/Dashboard/Constant/Constant.jsx","services/admin.service.js","components/Dashboard/Admins/Admins.jsx","components/Dashboard/Dashboard.jsx","pages/Admin.jsx","services/project.service.js","services/constant.service.js"],"names":["ProjectListItem","props","project","data","setEditId","setEditState","React","useState","anchorEl","setAnchorEl","ListItem","secondaryAction","IconButton","edge","onClick","event","currentTarget","ListItemButton","url","ListItemIcon","featured","published","ListItemText","primary","name","secondary","open","onClose","MenuListProps","MenuItem","a","projectService","saveProject","response","setProjects","deleteProject","Projects","menuTab","editId","editState","save","createProject","closeModal","Button","projects","sort","b","map","Modal","sx","position","top","left","transform","width","bgcolor","border","boxShadow","p","TextField","value","onChange","e","target","label","style","marginTop","projectId","modelId","FormControlLabel","control","Checkbox","checked","Constant","constant","useEffect","constantService","saveConstant","setConstant","email","phone","call","id","API","get","post","delete","Admins","adminService","createAdmin","setAdmins","deleteAdmin","admins","admin","locked","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","Drawer","MuiDrawer","whiteSpace","boxSizing","overflowX","spacing","breakpoints","up","mdTheme","createTheme","Dashboard","logout","useUser","setOpen","setMenuTab","toggleDrawer","ThemeProvider","Box","display","CssBaseline","Toolbar","pr","color","aria-label","marginRight","Typography","component","variant","noWrap","flexGrow","alignItems","justifyContent","px","Divider","List","selected","backgroundColor","palette","mode","grey","height","overflow","Container","maxWidth","mt","mb","Admin","getProject","then","getAdmin","getConstant","error","Layout","loading","ProjectService","put","ConstantService"],"mappings":"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","file":"static/js/7.92ae2212.chunk.js","sourcesContent":["import {\n    IconButton,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    ListItemButton,\n    Menu,\n    MenuItem,\n} from \"@mui/material\";\nimport React from \"react\";\nimport VisibleIcon from \"@mui/icons-material/Visibility\";\nimport VisibleOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\n\nimport projectService from \"services/project.service\";\n\nexport const ProjectListItem = (props) => {\n    const { project, data, setEditId, setEditState } = props;\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    return (\n        <>\n            <ListItem\n                secondaryAction={\n                    <IconButton\n                        edge=\"end\"\n                        onClick={(event) => {\n                            setAnchorEl(event.currentTarget);\n                        }}\n                    >\n                        <MoreIcon />\n                    </IconButton>\n                }\n            >\n                <ListItemButton\n                    onClick={() => {\n                        setEditId(project.url);\n                        setEditState(project);\n                    }}\n                >\n                    <ListItemIcon>\n                        {project.featured ? (\n                            <StarIcon />\n                        ) : project.published ? (\n                            <VisibleIcon />\n                        ) : (\n                            <VisibleOffIcon />\n                        )}\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={project.name}\n                        secondary={project.url}\n                    />\n                </ListItemButton>\n            </ListItem>\n            <Menu\n                anchorEl={anchorEl}\n                open={!!anchorEl}\n                onClose={() => setAnchorEl(null)}\n                MenuListProps={{\n                    \"aria-labelledby\": \"basic-button\",\n                }}\n            >\n                <MenuItem\n                    onClick={() => {\n                        setEditState(project);\n                        setEditId(project.url);\n                        setAnchorEl(null);\n                    }}\n                >\n                    Edit\n                </MenuItem>\n                <MenuItem\n                    onClick={async () => {\n                        const response = await projectService.saveProject(\n                            project.url,\n                            { ...project, featured: true }\n                        );\n\n                        if (response.data) data.setProjects(response.data);\n                        setAnchorEl(null);\n                    }}\n                >\n                    Set as featured\n                </MenuItem>\n                <MenuItem\n                    onClick={async () => {\n                        const response = await projectService.deleteProject(\n                            project.url\n                        );\n\n                        if (response.data) data.setProjects(response.data);\n                        setAnchorEl(null);\n                    }}\n                >\n                    Delete\n                </MenuItem>\n            </Menu>\n        </>\n    );\n};\n","import {\n    Button,\n    Modal,\n    TextField,\n    Checkbox,\n    FormControlLabel,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { Box } from \"@mui/system\";\nimport projectService from \"services/project.service\";\nimport { ProjectListItem } from \"./ProjectListItem\";\n\nexport const Projects = (props) => {\n    const { data, menuTab } = props;\n\n    const [editId, setEditId] = useState(\"\");\n    const [editState, setEditState] = useState(null);\n\n    const save = async () => {\n        const response = editId\n            ? await projectService.saveProject(editId, editState)\n            : await projectService.createProject(editState);\n\n        if (response.data) data.setProjects(response.data);\n        closeModal();\n    };\n\n    const closeModal = () => {\n        setEditId(\"\");\n        setEditState(null);\n    };\n    return menuTab === \"project\" ? (\n        <>\n            <Button\n                onClick={() => {\n                    setEditId(false);\n                    setEditState({ published: true });\n                }}\n            >\n                Add project\n            </Button>\n            {data.projects\n                .sort((a, b) => (a.url > b.url ? 1 : -1))\n                .map((project) => (\n                    <ProjectListItem\n                        project={project}\n                        key={project.url}\n                        setEditId={setEditId}\n                        setEditState={setEditState}\n                        data={data}\n                    />\n                ))}\n\n            <Modal open={!!editState}>\n                {!!editState && (\n                    <Box\n                        sx={{\n                            position: \"absolute\",\n                            top: \"50%\",\n                            left: \"50%\",\n                            transform: \"translate(-50%, -50%)\",\n                            width: 400,\n                            bgcolor: \"background.paper\",\n                            border: \"2px solid #000\",\n                            boxShadow: 24,\n                            p: 4,\n                        }}\n                    >\n                        <TextField\n                            value={editState.name}\n                            onChange={(e) =>\n                                setEditState({\n                                    ...editState,\n                                    name: e.target.value,\n                                })\n                            }\n                            label=\"Name\"\n                            style={{ marginTop: \"20px\", width: \"100%\" }}\n                        />\n                        <TextField\n                            value={editState.url}\n                            onChange={(e) =>\n                                setEditState({\n                                    ...editState,\n                                    url: e.target.value,\n                                })\n                            }\n                            label=\"Url\"\n                            style={{ marginTop: \"20px\", width: \"100%\" }}\n                        />\n                        <TextField\n                            value={editState.projectId}\n                            onChange={(e) =>\n                                setEditState({\n                                    ...editState,\n                                    projectId: e.target.value,\n                                })\n                            }\n                            label=\"Project id\"\n                            style={{ marginTop: \"20px\", width: \"100%\" }}\n                        />\n                        <TextField\n                            value={editState.modelId}\n                            onChange={(e) =>\n                                setEditState({\n                                    ...editState,\n                                    modelId: e.target.value,\n                                })\n                            }\n                            label=\"Model id\"\n                            style={{ marginTop: \"20px\", width: \"100%\" }}\n                        />\n                        <FormControlLabel\n                            label=\"Published\"\n                            control={\n                                <Checkbox\n                                    checked={editState.published}\n                                    onChange={(e) =>\n                                        setEditState({\n                                            ...editState,\n                                            published: e.target.checked,\n                                        })\n                                    }\n                                />\n                            }\n                        />\n\n                        <div style={{ marginTop: \"50px\" }}>\n                            <Button onClick={save}>Save</Button>\n                            <Button onClick={closeModal}>Cancel</Button>\n                        </div>\n                    </Box>\n                )}\n            </Modal>\n        </>\n    ) : null;\n};\n","import { Button, TextField } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box } from \"@mui/system\";\nimport constantService from \"services/constant.service\";\n\nexport const Constant = (props) => {\n    const { data, menuTab } = props;\n\n    const [editState, setEditState] = useState(data.constant);\n    useEffect(() => {\n        setEditState(data.constant);\n    }, [data.constant]);\n    const save = async () => {\n        const response = await constantService.saveConstant(editState);\n        if (response.data) data.setConstant(response.data);\n    };\n\n    return menuTab === \"constant\" ? (\n        <Box\n            sx={{\n                width: 400,\n                bgcolor: \"background.paper\",\n\n                p: 4,\n            }}\n        >\n            <TextField\n                value={editState.email}\n                onChange={(e) =>\n                    setEditState({\n                        ...editState,\n                        email: e.target.value,\n                    })\n                }\n                label=\"Email\"\n                style={{ marginTop: \"20px\", width: \"100%\" }}\n            />\n            <TextField\n                value={editState.phone}\n                onChange={(e) =>\n                    setEditState({\n                        ...editState,\n                        phone: e.target.value,\n                    })\n                }\n                label=\"Phone\"\n                style={{ marginTop: \"20px\", width: \"100%\" }}\n            />\n            <TextField\n                value={editState.call}\n                onChange={(e) =>\n                    setEditState({\n                        ...editState,\n                        call: e.target.value,\n                    })\n                }\n                label=\"International phone number\"\n                style={{ marginTop: \"20px\", width: \"100%\" }}\n            />\n\n            <div style={{ marginTop: \"50px\" }}>\n                <Button onClick={save}>Save</Button>\n                <Button onClick={() => setEditState(data.constant)}>\n                    Cancel\n                </Button>\n            </div>\n        </Box>\n    ) : null;\n};\n","import API from \"api/axios.config\";\r\n\r\nclass AdminService {\r\n    getAdmin(id) {\r\n        return API.get(`/admins`);\r\n    }\r\n\r\n    createAdmin(data) {\r\n        return API.post(`/admins`, data);\r\n    }\r\n\r\n    deleteAdmin(id) {\r\n        return API.delete(`/admins/${id}`);\r\n    }\r\n}\r\n\r\nexport default new AdminService();\r\n","import {\n    Button,\n    Modal,\n    TextField,\n    Checkbox,\n    FormControlLabel,\n    ListItem,\n    IconButton,\n    ListItemIcon,\n    ListItemText,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { Box } from \"@mui/system\";\nimport adminService from \"services/admin.service\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport LockedIcon from \"@mui/icons-material/Lock\";\nimport UnlockedIcon from \"@mui/icons-material/LockOpen\";\n\nexport const Admins = (props) => {\n    const { data, menuTab } = props;\n\n    const [editState, setEditState] = useState(null);\n\n    const save = async () => {\n        const response = await adminService.createAdmin(editState);\n\n        if (response.data) data.setAdmins(response.data);\n        closeModal();\n    };\n\n    const closeModal = () => {\n        setEditState(null);\n    };\n\n    const deleteAdmin = async (id) => {\n        const response = await adminService.deleteAdmin(id);\n\n        if (response.data) data.setAdmins(response.data);\n    };\n    return menuTab === \"admin\" ? (\n        <>\n            <Button\n                onClick={() => {\n                    setEditState({ published: true });\n                }}\n            >\n                Add admin\n            </Button>\n            {data.admins\n                .sort((a, b) => (a.email > b.email ? 1 : -1))\n                .map((admin) => (\n                    <ListItem\n                        secondaryAction={\n                            <IconButton\n                                edge=\"end\"\n                                onClick={() => deleteAdmin(admin.email)}\n                            >\n                                <DeleteIcon />\n                            </IconButton>\n                        }\n                    >\n                        <ListItemIcon>\n                            {admin.locked ? <LockedIcon /> : <UnlockedIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={admin.email} />\n                    </ListItem>\n                ))}\n\n            <Modal open={!!editState}>\n                {!!editState && (\n                    <Box\n                        sx={{\n                            position: \"absolute\",\n                            top: \"50%\",\n                            left: \"50%\",\n                            transform: \"translate(-50%, -50%)\",\n                            width: 400,\n                            bgcolor: \"background.paper\",\n                            border: \"2px solid #000\",\n                            boxShadow: 24,\n                            p: 4,\n                        }}\n                    >\n                        <TextField\n                            value={editState.email}\n                            onChange={(e) =>\n                                setEditState({\n                                    ...editState,\n                                    email: e.target.value,\n                                })\n                            }\n                            label=\"Email\"\n                            style={{ marginTop: \"20px\", width: \"100%\" }}\n                        />\n\n                        <div style={{ marginTop: \"50px\" }}>\n                            <Button onClick={save}>Save</Button>\n                            <Button onClick={closeModal}>Cancel</Button>\n                        </div>\n                    </Box>\n                )}\n            </Modal>\n        </>\n    ) : null;\n};\n","import React, { useState } from \"react\";\nimport { styled, createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport Box from \"@mui/material/Box\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Container from \"@mui/material/Container\";\n\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport PeopleIcon from \"@mui/icons-material/People\";\nimport { Projects } from \"./Projects/Projects\";\nimport { Constant } from \"./Constant/Constant\";\nimport { Admins } from \"./Admins/Admins\";\nimport { useUser } from \"context/UserContext\";\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n    shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n    \"& .MuiDrawer-paper\": {\n        position: \"relative\",\n        whiteSpace: \"nowrap\",\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        boxSizing: \"border-box\",\n        ...(!open && {\n            overflowX: \"hidden\",\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up(\"sm\")]: {\n                width: theme.spacing(9),\n            },\n        }),\n    },\n}));\n\nconst mdTheme = createTheme();\n\nconst Dashboard = (props) => {\n    const { data } = props;\n    const { logout } = useUser();\n    const [open, setOpen] = useState(false);\n    const [menuTab, setMenuTab] = useState(\"project\");\n    const toggleDrawer = () => {\n        setOpen(!open);\n    };\n\n    return (\n        <ThemeProvider theme={mdTheme}>\n            <Box sx={{ display: \"flex\" }}>\n                <CssBaseline />\n                <AppBar position=\"absolute\" open={open}>\n                    <Toolbar\n                        sx={{\n                            pr: \"24px\", // keep right padding when drawer closed\n                        }}\n                    >\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={toggleDrawer}\n                            sx={{\n                                marginRight: \"36px\",\n                                ...(open && { display: \"none\" }),\n                            }}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography\n                            component=\"h1\"\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            noWrap\n                            sx={{ flexGrow: 1 }}\n                        >\n                            Dashboard\n                        </Typography>\n                        <IconButton color=\"inherit\" onClick={logout}>\n                            <LogoutIcon />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Drawer variant=\"permanent\" open={open}>\n                    <Toolbar\n                        sx={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"flex-end\",\n                            px: [1],\n                        }}\n                    >\n                        <IconButton onClick={toggleDrawer}>\n                            <ChevronLeftIcon />\n                        </IconButton>\n                    </Toolbar>\n                    <Divider />\n                    <List component=\"nav\">\n                        <ListItemButton\n                            onClick={() => setMenuTab(\"project\")}\n                            selected={menuTab === \"project\"}\n                        >\n                            <ListItemIcon>\n                                <DashboardIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Projects\" />\n                        </ListItemButton>\n                        <ListItemButton\n                            onClick={() => setMenuTab(\"constant\")}\n                            selected={menuTab === \"constant\"}\n                        >\n                            <ListItemIcon>\n                                <InfoIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"General\" />\n                        </ListItemButton>\n                        <ListItemButton\n                            onClick={() => setMenuTab(\"admin\")}\n                            selected={menuTab === \"admin\"}\n                        >\n                            <ListItemIcon>\n                                <PeopleIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Admins\" />\n                        </ListItemButton>\n                    </List>\n                </Drawer>\n                <Box\n                    component=\"main\"\n                    sx={{\n                        backgroundColor: (theme) =>\n                            theme.palette.mode === \"light\"\n                                ? theme.palette.grey[100]\n                                : theme.palette.grey[900],\n                        flexGrow: 1,\n                        height: \"100vh\",\n                        overflow: \"auto\",\n                    }}\n                >\n                    <Toolbar />\n                    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n                        <Projects data={data} menuTab={menuTab} />\n                        <Admins data={data} menuTab={menuTab} />\n                        <Constant data={data} menuTab={menuTab} />\n                    </Container>\n                </Box>\n            </Box>\n        </ThemeProvider>\n    );\n};\n\nexport default Dashboard;\n","import Dashboard from \"components/Dashboard/Dashboard\";\r\nimport Layout from \"layout/Layout\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport adminService from \"services/admin.service\";\r\nimport constantService from \"services/constant.service\";\r\nimport projectService from \"services/project.service\";\r\n\r\nconst Admin = () => {\r\n    const [constant, setConstant] = useState(null);\r\n    const [admins, setAdmins] = useState(null);\r\n    const [projects, setProjects] = useState(null);\r\n\r\n    useEffect(() => {\r\n        projectService.getProject().then((response) => {\r\n            setProjects(response.data);\r\n        });\r\n        adminService.getAdmin().then((response) => {\r\n            setAdmins(response.data);\r\n        });\r\n        try {\r\n            constantService.getConstant().then((response) => {\r\n                if (response.data) setConstant(response.data);\r\n                else setConstant({});\r\n            });\r\n        } catch (error) {\r\n            setConstant({});\r\n        }\r\n    }, []);\r\n    return (\r\n        <Layout loading={!constant || !admins || !projects}>\r\n            <Dashboard\r\n                data={{\r\n                    constant,\r\n                    setConstant,\r\n                    admins,\r\n                    setAdmins,\r\n                    projects,\r\n                    setProjects,\r\n                }}\r\n            />\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n","import API from \"api/axios.config\";\r\n\r\nclass ProjectService {\r\n    getProject(id) {\r\n        return API.get(`/projects${id ? \"/\" + id : \"\"}`);\r\n    }\r\n\r\n    getFeaturedProject() {\r\n        return API.get(`/projects/__featured__`);\r\n    }\r\n    saveProject(id, data) {\r\n        return API.put(`/projects/${id}`, data);\r\n    }\r\n    createProject(data) {\r\n        return API.post(`/projects`, data);\r\n    }\r\n    deleteProject(id) {\r\n        return API.delete(`/projects/${id}`);\r\n    }\r\n}\r\n\r\nexport default new ProjectService();\r\n","import API from \"api/axios.config\";\r\n\r\nclass ConstantService {\r\n    getConstant() {\r\n        return API.get(`/constant`);\r\n    }\r\n    saveConstant(data) {\r\n        return API.put(`/constant`, data);\r\n    }\r\n}\r\n\r\nexport default new ConstantService();\r\n"],"sourceRoot":""}