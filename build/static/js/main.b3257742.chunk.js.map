{"version":3,"sources":["services/auth.service.js","components/ProjectView/Components/ProjectUI/Bottom/AdminButton/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/ApartmentContols/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/ButtonUI/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/FilterControls/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/Gallery/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/LocationControls/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/SunControls/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/UIButtons/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/InfoButton/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/RoomsControls/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/FloorPlan/index.jsx","components/ProjectView/Components/ProjectUI/AppUI/index.jsx","services/constant.service.js","pages/ProjectA.jsx","api/axios.config.js","helpers/history.js","helpers/WithAxios.js","context/UserContext.jsx","services/admin.service.js","hooks/useLoginCheck.js","pages/Admins.jsx","services/ga.service.js","components/DashboardItem/DataItems/ChartItem/ChartItem.js","pages/AnalyticClient.jsx","pages/Constants.jsx","services/utils.service.js","helpers/uploadMedia.js","components/ProjectFormFields.jsx","pages/CreateProject.jsx","components/ForgotPasswordModal.jsx","pages/Login.jsx","pages/ProjectDetails.jsx","pages/Projects.jsx","services/property.service.js","components/ProjectView/Components/PropertiesTable.jsx","pages/Properties.jsx","pages/PropertiesAdmin.jsx","pages/MediaAdmin.jsx","pages/PropertiesClient.jsx","pages/UIAdmin.jsx","App.js","reportWebVitals.js","index.js","services/project.service.js","layout/Layout.jsx"],"names":["AuthService","email","password","a","API","post","data","token","localStorage","removeItem","password2","username","get","MoreButton","styled","Button","props","adminSide","Overlay","div","AdminButton","uiData","setUiData","name","button","hideControls","useState","isModalOpen","setIsModalOpen","hide","type","shape","icon","MoreOutlined","onClick","title","open","footer","destroyOnClose","onCancel","labelCol","span","wrapperCol","onFinish","values","prevState","initialValues","Item","label","valuePropName","offset","htmlType","Container","Inner","Inner2","Top","Details","NameContainer","Name","Price","Availability","FacadeName","Stats","StatContainer","StatText","Bottom","ButtonContainer","getCustomColorsStyles","ButtonText","Stat","admin","hideHidden","children","style","position","PlayCircleOutlined","fontSize","ApartmentControls","isVisible","activeUI","includes","emitUIInteraction","setActiveUI","backgroundColor","background","hex","size","transform","TDTour","VTour","EyeOutlined","window","focus","ButtonUI","onUnclick","visible","isActive","filter","v","length","refinedTitle","ButtonsContainer","SelectMulti","options","propValue","value","onChange","map","CheckableTag","i","checked","color","FilterControls","Form","useForm","form","valuesState","setValuesState","margin","resetFields","ResetFilters","layout","Orientation","onValuesChange","min","max","step","defaultValue","Gallery","project","tab","setTab","slide","setSlide","dimensionsW","setDimensionsW","ref","useRef","useEffect","getContainerSize","current","width","clientWidth","height","clientHeight","addEventListener","media","images","index","original","url","thumbnail","description","originalClass","thumbnailClass","renderItem","k","controls","preload","autoPlay","muted","src","class","href","target","rel","renderThumbInner","id","left","right","top","bottom","handleTabClick","newTab","className","undefined","items","showBullets","showFullscreenButton","showPlayButton","thumbnailPosition","onSlide","startIndex","LocationControls","Array","levelsCount","_level","Location","table","TR","tr","TD0","td","TD1","TD2","SunControls","time","Time","tooltip","formatter","SunPosition","UIButtons","HomeOutlined","Home","PictureOutlined","Nearby","SearchOutlined","Filter","Materials","Teleport","InteriorInfo","Discover","FloorPlan","LevelView","onlyInterior","ClockCircleOutlined","CloseButton","InfoButton","isOpen","setIsOpen","onClose","forceRender","RoomsControls","rooms","split","room","Room","display","InfoContainer","AppUI","propsC","zIndex","textColor","buttonColor","buttonHoverColor","hover","ConstantService","put","ProjectA","setVideoInitialized","sizeContainerRef","containerRef","videoRef","webrtcClient","setWebrtcClient","webrtcClientInit","responseCallback","message","console","log","videoInitialized","args","address","arcwareAddress","packageId","arcwarePackageId","settings","autoplay","video","audio","sizeContainer","container","playOverlay","loader","applicationResponse","videoInitializeCallback","WebRTCClient","flex","newUI","axios","create","baseURL","withCredentials","interceptors","request","use","req","getItem","headers","error","Promise","reject","createBrowserHistory","WithAxios","useUser","isInitiated","logout","response","originalRequest","config","status","resolve","history","push","_retry","res","setItem","UserContext","createContext","UserProvider","authData","setAuthData","isLoggedIn","setIsLoggedIn","setIsInitiated","getTokenData","decoded","jwt_decode","Provider","setUserState","setUserInfo","authService","context","useContext","Error","delete","useLoginCheck","navigate","useNavigate","super","projectId","Admins","formRef","admins","setAdmins","editModalOpen","setEditModalOpen","adminService","getAdmin","then","createAdmin","toast","success","deleteAdmin","Layout","loading","onBack","boxShadow","overflow","padding","paddingTop","maxWidth","rules","required","placeholder","itemLayout","dataSource","sort","b","actions","overlay","onConfirm","okText","cancelText","danger","trigger","borderBottom","paddingLeft","Meta","locked","metrics","dimensions","period","start","finish","ChartItem","column","seconds","isDate","dataRefined","humanizeString","columnHeaders","replace","rows","moment","format","parseInt","chartType","legend","chartArea","allowHtml","AnalyticClient","useParams","setProject","dateData","setDateData","cityData","setCityData","deviceData","setDeviceData","sourceData","setSourceData","subtract","setPeriod","toString","projectService","getProject","getMetricData","gaService","getGA","catch","err","RangePicker","m","allowClear","textAlign","flexDirection","flexWrap","alignItems","justifyContent","xKey","valKey","Constants","constants","setConstants","constantService","getConstant","setFieldsValue","saveConstant","isVideo","isLogo","params","uploadMedia","cb","action","file","filename","onError","onProgress","onSuccess","utilsService","signUrl","signedRequest","s3res","Logo","customUploadClientLogo","image","setImage","setTimeout","maxHeight","LoadingOutlined","marginTop","customRequest","showUploadList","maxCount","getValueFromEvent","ProjectFormFields","extra","hidden","CreateProject","createProject","ForgotPasswordModal","forgotPassword","prefix","UserOutlined","Login","isLoading","setIsLoading","redirectToReferrer","setRedirectToReferrer","login","Title","marginBottom","Password","LockOutlined","ProjectDetails","saveProject","projectAddress","galleryAddress","propertiesAddress","projectName","useWatch","clientLogo","clientLogoMaxWidth","clientLogoMaxHeight","projectLogo","projectLogoMaxWidth","projectLogoMaxHeight","Paragraph","copy","val","getFieldsValue","alt","Projects","projects","setProjects","openDrawer","setOpenDrawer","deleteProject","setFeatured","featured","backIcon","MenuOutlined","Divider","avatar","StarFilled","published","EyeFilled","EyeInvisibleFilled","placement","mode","item","key","activeKey","selectedKeys","ids","Option","Select","transferOrientationToObject","o","indexOf","N","S","E","W","transferOrientationToString","EditableCell","editing","dataIndex","inputType","property","restProps","inputNode","PropertiesTable","properties","setProperties","selectedProperties","setSelectedProperties","editingKey","setEditingKey","isEditing","cancel","save","validateFields","propertyService","saveProperty","deleteProperty","mergedColumns","sorter","sortDirections","editable","onFilter","render","_","str","charAt","toUpperCase","slice","Surface","BathroomsCount","toLowerCase","Frontage","Depth","Link","marginRight","disabled","edit","col","onCell","onAddProperty","createProperty","newProperties","newProperty","document","querySelector","scrollTop","component","components","body","cell","bordered","d","columns","rowClassName","rowSelection","selectedRows","pagination","tableLayout","scroll","y","Properties","getProperty","PropertiesAdmin","MediaAdmin","addMedia","handleMove","mediaId","down","moveMedia","handleDelete","deleteMedia","customUpload","getFieldValue","level","readOnly","accept","listType","UploadOutlined","PropertiesClient","UIAdmin","loaded","setLoaded","setHideHidden","setHideControls","paddingBottom","e","disableAlpha","lazy","Project","ResetPassword","App","fallback","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","ProjectService","isProject","content"],"mappings":"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","file":"static/js/main.b3257742.chunk.js","sourcesContent":["import API from \"api/axios.config\";\r\n\r\nclass AuthService {\r\n    async login(email, password) {\r\n        const { data } = await API.post(\"/auth/login\", {\r\n            email,\r\n            password,\r\n        });\r\n        return data;\r\n    }\r\n\r\n    async googleLogin(token) {\r\n        const { data } = await API.post(\"/auth/google\", {\r\n            token,\r\n        });\r\n        return data;\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"expiresAt\");\r\n    }\r\n\r\n    forgotPassword(email) {\r\n        return API.post(\"/auth/forgot-password\", {\r\n            email,\r\n        });\r\n    }\r\n\r\n    checkToken(token, email) {\r\n        return API.post(\"auth/check-token\", {\r\n            token,\r\n            email,\r\n        });\r\n    }\r\n\r\n    resetPassword(token, email, password, password2) {\r\n        return API.post(\"auth/reset-password\", {\r\n            token,\r\n            email,\r\n            password,\r\n            password2,\r\n        });\r\n    }\r\n\r\n    register(username, email, password) {\r\n        return API.post(\"auth/signup\", {\r\n            username,\r\n            email,\r\n            password,\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return API.get(\"/users/profile\");\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { MoreOutlined } from \"@ant-design/icons\";\nimport { Button, Checkbox, Form, Input, InputNumber, Modal } from \"antd\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst MoreButton = styled(Button)`\n  position: absolute;\n  top: 0px;\n\n  ${(props) => (props.adminSide === \"left\" ? \"left: -15px;\" : \"right: -15px;\")}\n  z-index: 1;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  inset: 0;\n  background-color: rgba(83, 72, 4, 0.6);\n`;\n\nconst AdminButton = ({\n  uiData,\n  setUiData,\n  name,\n  button,\n  hideControls,\n  adminSide,\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const onFinish = (values) => {\n    setUiData((prevState) => ({\n      ...prevState,\n      [name]: { ...(prevState[name] || {}), ...values },\n    }));\n\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      {uiData[name]?.hide && <Overlay />}\n      {!hideControls && (\n        <MoreButton\n          type=\"primary\"\n          shape=\"circle\"\n          icon={<MoreOutlined />}\n          onClick={showModal}\n          adminSide={adminSide}\n        />\n      )}\n\n      <Modal\n        title={name}\n        open={isModalOpen}\n        footer={null}\n        destroyOnClose\n        onCancel={() => setIsModalOpen(false)}\n      >\n        <Form\n          labelCol={{ span: 8 }}\n          wrapperCol={{ span: 16 }}\n          onFinish={onFinish}\n          initialValues={uiData[name] || {}}\n        >\n          <Form.Item label=\"Hide\" name=\"hide\" valuePropName=\"checked\">\n            <Checkbox />\n          </Form.Item>\n          <Form.Item label=\"Label\" name=\"label\">\n            <Input />\n          </Form.Item>\n          {!button && (\n            <>\n              <Form.Item label=\"Min\" name=\"min\">\n                <InputNumber />\n              </Form.Item>\n              <Form.Item label=\"Max\" name=\"max\">\n                <InputNumber />\n              </Form.Item>\n              <Form.Item label=\"Step\" name=\"step\">\n                <InputNumber />\n              </Form.Item>\n\n              <Form.Item label=\"Default\" name=\"default\">\n                <InputNumber />\n              </Form.Item>\n            </>\n          )}\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport { AdminButton };\n","import { EyeOutlined, PlayCircleOutlined } from \"@ant-design/icons\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { AdminButton } from \"../AdminButton\";\nimport { FaBed, FaBath, FaHouseUser } from \"react-icons/fa\";\nimport { IoResize } from \"react-icons/io5\";\nimport { TbViewportWide } from \"react-icons/tb\";\nimport { getCustomColorsStyles } from \"../../AppUI\";\nimport { MdOtherHouses } from \"react-icons/md\";\n\nconst Container = styled.div`\n  bottom: 60px;\n  left: 0px;\n  right: 0px;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow-x: auto;\n  white-space: nowrap;\n  justify-content: end;\n  align-items: center;\n`;\n\nconst Inner2 = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow-x: auto;\n  white-space: nowrap;\n  justify-content: end;\n  width: 100%;\n  max-width: 600px;\n`;\n\nconst Top = styled.div`\n  border-radius: 5px;\n  padding: 15px 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Details = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\n\nconst NameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 200px;\n`;\n\nconst Name = styled.div`\n  font-size: 40px;\n`;\n\nconst Price = styled.div`\n  font-size: 26px;\n`;\n\nconst Availability = styled.div`\n  font-size: 16px;\n`;\n\nconst FacadeName = styled.div`\n  margin-top: 20px;\n  font-size: 16px;\n`;\n\n// const InfoContainer = styled.div`\n//   display: flex;\n//   flex-direction: column;\n// `;\n\n// const Frontage = styled.div`\n//   line-height: 40px;\n// `;\n\n// const Depth = styled.div``;\n\nconst Stats = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  margin-top: 20px;\n`;\n\nconst StatContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0 10px;\n`;\n\nconst StatText = styled.div`\n  margin-left: 10px;\n`;\n\nconst Bottom = styled.div`\n  border-radius: 5px;\n  color: white;\n  padding: 15px 20px;\n  display: flex;\n  margin-top: 5px;\n  justify-content: center;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 5px;\n  margin: 0 10px;\n  cursor: pointer;\n  ${(props) => getCustomColorsStyles?.(props)};\n`;\n\nconst ButtonText = styled.div`\n  margin-top: 5px;\n`;\n\nconst Stat = ({\n  icon,\n  admin,\n  uiData,\n  setUiData,\n  name,\n  hideHidden,\n  hideControls,\n  children,\n}) =>\n  uiData?.[name]?.hide && (hideHidden || !admin) ? null : (\n    <div style={{ position: \"relative\" }}>\n      <StatContainer>\n        {icon}\n        <StatText>{children}</StatText>\n      </StatContainer>\n      {admin && (\n        <AdminButton\n          uiData={uiData}\n          setUiData={setUiData}\n          name={name}\n          button\n          hideControls={hideControls}\n        />\n      )}\n    </div>\n  );\n\nconst Button = ({\n  onClick,\n  admin,\n  uiData,\n  setUiData,\n  name,\n  label,\n  hideHidden,\n  hideControls,\n}) =>\n  uiData?.[name]?.hide && (hideHidden || !admin) ? null : (\n    <div style={{ position: \"relative\" }}>\n      <ButtonContainer onClick={onClick} uiData={uiData}>\n        <PlayCircleOutlined style={{ fontSize: \"30px\" }} />\n        <ButtonText>{uiData?.[name]?.label || label}</ButtonText>\n      </ButtonContainer>\n      {admin && (\n        <AdminButton\n          uiData={uiData}\n          setUiData={setUiData}\n          name={name}\n          button\n          hideControls={hideControls}\n        />\n      )}\n    </div>\n  );\n\nconst ApartmentControls = (props) => {\n  const isVisible = props.activeUI?.includes(\"apartment\");\n  const { emitUIInteraction, setActiveUI, activeUI } = props;\n  return (\n    <Container open={isVisible}>\n      <Inner>\n        <Inner2>\n          <Top\n            style={{\n              backgroundColor: props.uiData?.background?.hex || \"black\",\n            }}\n          >\n            <Details>\n              <NameContainer>\n                <Name>Name</Name>\n                <Price>Price</Price>\n                <Availability>Available</Availability>\n                <FacadeName>Facade name</FacadeName>\n              </NameContainer>\n              {/* <InfoContainer>\n                <Frontage>Lot frontage: 10m2</Frontage>\n                <Depth>Lot depth: 10m2</Depth>\n              </InfoContainer> */}\n            </Details>\n            <Stats>\n              <Stat {...props} name=\"BedStat\" icon={<FaBed size={30} />}>\n                4 bed\n              </Stat>\n              <Stat {...props} name=\"BathStat\" icon={<FaBath size={30} />}>\n                2 bath\n              </Stat>\n              <Stat {...props} name=\"SurfaceStat\" icon={<IoResize size={30} />}>\n                180 m2\n              </Stat>\n              <Stat\n                {...props}\n                name=\"FrontageStat\"\n                icon={<TbViewportWide size={30} />}\n              >\n                23 m\n              </Stat>\n              <Stat\n                {...props}\n                name=\"DepthStat\"\n                icon={\n                  <TbViewportWide\n                    size={30}\n                    style={{ transform: \"rotate(90deg)\" }}\n                  />\n                }\n              >\n                6 m\n              </Stat>\n            </Stats>\n          </Top>\n          <Bottom\n            style={{\n              backgroundColor: props.uiData?.background?.hex || \"black\",\n            }}\n          >\n            <Button\n              {...props}\n              icon={<FaHouseUser />}\n              onClick={() => emitUIInteraction?.({ TDTour: true })}\n              label=\"3D Tour\"\n              name=\"TDTour\"\n            ></Button>\n            <Button\n              {...props}\n              icon={<FaHouseUser />}\n              onClick={() => emitUIInteraction?.({ VTour: true })}\n              label=\"Virtual tour\"\n              name=\"VTour\"\n            ></Button>\n            <Button\n              {...props}\n              icon={<EyeOutlined />}\n              onClick={() => setActiveUI([...activeUI, \"floorPlan\"])}\n              label=\"Floor plan\"\n              name=\"FloorPlan\"\n            ></Button>\n            <Button\n              {...props}\n              icon={<MdOtherHouses />}\n              onClick={() =>\n                window.open(\"https://www.realestate.com.au\", \"_blank\").focus()\n              }\n              label=\"Property info\"\n              name=\"PropertyInfo\"\n            ></Button>\n          </Bottom>\n        </Inner2>\n      </Inner>\n    </Container>\n  );\n};\n\nexport { ApartmentControls };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { getCustomColorsStyles } from \"../../AppUI\";\nimport { AdminButton } from \"../AdminButton\";\n\nexport const Button = styled.div`\n  cursor: pointer;\n  padding: 5px 5px 0px;\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  user-select: none;\n  ${(props) => getCustomColorsStyles?.(props)}\n  > p {\n    font-size: 11px;\n    margin: 0;\n    margin-top: 5px;\n    text-transform: uppercase;\n    white-space: nowrap;\n  }\n`;\n\nconst ButtonUI = ({\n  activeUI,\n  title,\n  icon,\n  onUnclick,\n  onClick,\n  visible,\n  admin,\n  uiData,\n  setUiData,\n  name,\n  hideControls,\n  hideHidden,\n  adminSide,\n}) => {\n  const isActive = activeUI?.includes(name || title);\n  let isVisible = activeUI?.filter((v) => visible.includes(v)).length || admin;\n\n  if (uiData?.[name]?.hide && (hideHidden || !admin)) isVisible = false;\n\n  const refinedTitle = uiData?.[name]?.label || title;\n  return isVisible ? (\n    <div style={{ position: \"relative\" }}>\n      <Button\n        onClick={isActive ? onUnclick : onClick}\n        isActive={isActive}\n        uiData={uiData}\n      >\n        {icon}\n        {refinedTitle && <p>{refinedTitle}</p>}\n      </Button>\n      {admin && (\n        <AdminButton\n          uiData={uiData}\n          setUiData={setUiData}\n          name={name}\n          button\n          hideControls={hideControls}\n          adminSide={adminSide}\n        />\n      )}\n    </div>\n  ) : null;\n};\n\nexport { ButtonUI };\n","import { Button, ConfigProvider, Form, Slider, Tag } from \"antd\";\nimport React, { useState } from \"react\";\nimport { BiCloset, BiReset } from \"react-icons/bi\";\nimport { IoClose } from \"react-icons/io5\";\nimport styled from \"styled-components\";\nimport { AdminButton } from \"../AdminButton\";\n\nconst Container = styled.div`\n  top: 20px;\n  bottom: 60px;\n  left: 0;\n  right: 0;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n  pointer-events: none;\n`;\n\nconst Inner = styled.div`\n  width: 100%;\n  padding: 70px 30px 20px;\n  max-height: 100%;\n  max-width: 600px;\n  overflow: auto;\n  overflow-x: hidden;\n  pointer-events: all;\n  position: relative;\n`;\n\nconst ButtonsContainer = styled.div`\n  position: absolute;\n  right: 0px;\n  top: 20px;\n`;\n\nconst SelectMulti = ({\n  options,\n  value: propValue,\n  onChange,\n  emitUIInteraction,\n}) =>\n  options.map(({ value, label }) => (\n    <Tag.CheckableTag\n      key={value}\n      onClick={() => {\n        if (propValue?.includes(value))\n          onChange(propValue.filter((i) => i !== value));\n        else onChange([...(propValue || []), value]);\n        emitUIInteraction(value);\n      }}\n      checked={propValue?.includes(value)}\n      style={{ color: \"white\" }}\n    >\n      {label || value}\n    </Tag.CheckableTag>\n  ));\n\nconst FilterControls = (props) => {\n  const {\n    activeUI,\n    emitUIInteraction,\n    admin,\n    uiData,\n    setUiData,\n    hideHidden,\n    hideControls,\n  } = props;\n  const isVisible = activeUI?.includes(\"filter\");\n  const [form] = Form.useForm();\n\n  const items = [\n    {\n      name: \"Budget\",\n      label: \"Budget\",\n      type: \"range\",\n      min: 0,\n      max: 5000000,\n      step: 10000,\n    },\n    {\n      name: \"Size\",\n      label: \"Size\",\n      type: \"range\",\n      min: 0,\n      max: 100,\n      step: 1,\n    },\n    {\n      name: \"Bedrooms\",\n      label: \"Bedrooms\",\n      type: \"range\",\n      min: 0,\n      max: 5,\n      step: 0.5,\n    },\n    {\n      name: \"Bathrooms\",\n      label: \"Bathrooms\",\n      type: \"range\",\n      min: 0,\n      max: 3,\n      step: 0.5,\n    },\n    {\n      name: \"Availability\",\n      label: \"Availability\",\n      type: \"selectMulti\",\n      options: [\n        { value: \"Available\" },\n        { value: \"Reserved\" },\n        { value: \"Sold\" },\n      ],\n    },\n    {\n      name: \"Orientation\",\n      label: \"Orientation\",\n      type: \"selectMulti\",\n      options: [{ value: \"N\" }, { value: \"E\" }, { value: \"S\" }, { value: \"W\" }],\n    },\n    {\n      name: \"Depth\",\n      label: \"Depth\",\n      type: \"range\",\n      min: 0,\n      max: 100,\n      step: 0.5,\n    },\n    {\n      name: \"Frontage\",\n      label: \"Frontage\",\n      type: \"range\",\n      min: 0,\n      max: 100,\n      step: 0.5,\n    },\n  ];\n\n  const [valuesState, setValuesState] = useState({});\n  return (\n    <Container open={isVisible}>\n      <Inner\n        style={{\n          backgroundColor: (props.uiData?.background?.hex || \"#000000\") + \"CC\",\n        }}\n      >\n        {/* <ConfigProvider\n          getPopupContainer={(triggerNode) => triggerNode.parentNode}\n        > */}\n        {isVisible && (\n          <ButtonsContainer>\n            <Button\n              htmlType=\"button\"\n              style={{ margin: \"0 8px\" }}\n              type=\"link\"\n              onClick={() => {\n                form.resetFields();\n                emitUIInteraction?.({ ResetFilters: true });\n              }}\n            >\n              <BiReset size={30} color=\"white\" />\n            </Button>\n            <Button onClick={() => props.setActiveUI([\"exterior\"])} type=\"link\">\n              <IoClose size={30} color=\"white\" />\n            </Button>\n          </ButtonsContainer>\n        )}\n        <Form\n          layout=\"vertical\"\n          form={form}\n          initialValues={{\n            Orientation: [\"N\", \"E\", \"S\", \"W\"],\n            Availability: [\"Available\", \"Reserved\", \"Sold\"],\n          }}\n          onValuesChange={setValuesState}\n        >\n          {items.map(\n            ({ name, label, type, defaultValue, min, max, step, options }) => {\n              let refinedTitle = uiData?.[name]?.label || label;\n              if (type === \"range\")\n                refinedTitle = `${refinedTitle}: more than ${\n                  valuesState[name] || 0\n                }`;\n              return uiData?.[name]?.hide && (hideHidden || !admin) ? null : (\n                <div style={{ position: \"relative\" }}>\n                  <Form.Item\n                    name={name}\n                    label={\n                      <label style={{ color: \"white\" }}>{refinedTitle}</label>\n                    }\n                  >\n                    {!isVisible ? null : type === \"range\" ? (\n                      <Slider\n                        defaultValue={defaultValue || [min, max]}\n                        min={uiData?.[name]?.min || min}\n                        max={uiData?.[name]?.max || max}\n                        step={uiData?.[name]?.step || step}\n                        onChange={(v) => {\n                          emitUIInteraction?.({ [name]: v });\n                        }}\n                      />\n                    ) : (\n                      <SelectMulti\n                        options={options}\n                        defaultValue={defaultValue}\n                        emitUIInteraction={(v) =>\n                          emitUIInteraction?.({ [v]: true })\n                        }\n                      />\n                    )}\n                  </Form.Item>\n                  {admin && (\n                    <AdminButton\n                      uiData={uiData}\n                      setUiData={setUiData}\n                      name={name}\n                      button={type !== \"range\"}\n                      hideControls={hideControls}\n                    />\n                  )}\n                </div>\n              );\n            }\n          )}\n        </Form>\n        {/* </ConfigProvider> */}\n      </Inner>\n    </Container>\n  );\n};\n\nexport { FilterControls };\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport ImageGallery from \"react-image-gallery\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  top: 00px;\n  bottom: 50px;\n  left: 0px;\n  right: 0px;\n  padding: 50px 10px 10px;\n  position: absolute;\n\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst Gallery = ({ project, activeUI, uiData }) => {\n  const [tab, setTab] = useState(\"\");\n  const [slide, setSlide] = useState(0);\n  const [dimensionsW, setDimensionsW] = useState({});\n  const ref = useRef();\n\n  useEffect(() => {\n    setSlide(0);\n  }, [tab]);\n\n  const getContainerSize = () => {\n    if (ref.current)\n      setDimensionsW({\n        width: ref.current.clientWidth,\n        height: ref.current.clientHeight,\n      });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", getContainerSize);\n    getContainerSize();\n  }, []);\n  if (!project) return null;\n  const { media } = project;\n\n  const images =\n    media\n      ?.filter((i) => (tab ? tab === i.type : true))\n      .map((i, index) => {\n        if (i.type !== \"video\") {\n          return {\n            ...i,\n            original: i.url,\n            thumbnail: i.thumbnail,\n            description: i.name,\n            originalClass: \"featured-slide\",\n            thumbnailClass: \"featured-thumb\",\n          };\n        } else {\n          return {\n            ...i,\n            index,\n            thumbnail: i.url,\n            renderItem: (k) => {\n              return slide === k.index ? (\n                <video\n                  // id=\"my-player\"\n                  // class=\"video-js\"\n                  controls\n                  preload=\"auto\"\n                  autoPlay\n                  muted\n                  // data-setup=\"{}\"\n                  style={{ width: \"100%\", height: \"100%\" }}\n                >\n                  <source src={i.url} type=\"video/mp4\"></source>\n                  <p class=\"vjs-no-js\">\n                    To view this video please enable JavaScript, and consider\n                    upgrading to a web browser that\n                    <a\n                      href=\"https://videojs.com/html5-video-support/\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      supports HTML5 video\n                    </a>\n                  </p>\n                </video>\n              ) : null;\n            },\n            renderThumbInner: (k) => (\n              <div style={{ position: \"relative\" }}>\n                <video\n                  id=\"my-player\"\n                  class=\"video-js\"\n                  controls\n                  data-setup=\"{}\"\n                  style={{ width: \"100%\", height: \"100%\" }}\n                >\n                  <source src={i.url} type=\"video/mp4\"></source>\n                  <p class=\"vjs-no-js\">\n                    To view this video please enable JavaScript, and consider\n                    upgrading to a web browser that\n                    <a\n                      href=\"https://videojs.com/html5-video-support/\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      supports HTML5 video\n                    </a>\n                  </p>\n                </video>\n                <div\n                  style={{\n                    position: \"absolute\",\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                  }}\n                />\n              </div>\n            ),\n          };\n        }\n      })\n      .filter((i) => i) || [];\n\n  const handleTabClick = (newTab) => {\n    setTab(newTab === tab ? \"\" : newTab);\n  };\n\n  return (\n    <Container\n      ref={ref}\n      open={activeUI.includes(\"gallery\")}\n      style={{\n        backgroundColor: (uiData?.background?.hex || \"#000000\") + \"CC\",\n      }}\n    >\n      <Inner>\n        <div className=\"buttons\">\n          <div\n            onClick={() => handleTabClick(\"photo\")}\n            className={tab === \"photo\" ? \"active\" : undefined}\n          >\n            <img src=\"/gallery/photo.png\" />\n          </div>\n          <div\n            onClick={() => handleTabClick(\"plan\")}\n            className={tab === \"plan\" ? \"active\" : undefined}\n          >\n            <img src=\"/gallery/plan.png\" />\n          </div>\n          <div\n            onClick={() => handleTabClick(\"video\")}\n            className={tab === \"video\" ? \"active\" : undefined}\n          >\n            <img src=\"/gallery/video.png\" />\n          </div>\n        </div>\n        <ImageGallery\n          items={images}\n          showBullets={false}\n          showFullscreenButton={false}\n          showPlayButton={false}\n          // showNav={false}\n          thumbnailPosition={\n            dimensionsW.height > dimensionsW.width ? \"bottom\" : \"right\"\n          }\n          onSlide={setSlide}\n          startIndex={slide}\n        />\n      </Inner>\n    </Container>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  bottom: 60px;\n  left: 0px;\n  right: 0px;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  flex: 1;\n  overflow-x: auto;\n  justify-content: center;\n`;\n\nconst Item = styled.div`\n  border-radius: 5px;\n  color: white;\n  margin: 0 6px;\n  padding: 5px 10px;\n  white-space: nowrap;\n  cursor: pointer;\n`;\n\nconst LocationControls = (props) => {\n  const { emitUIInteraction, activeUI, project } = props;\n  const isVisible = activeUI?.includes(\"location\");\n  return (\n    <Container open={isVisible}>\n      <Inner>\n        {[...Array(project?.levelsCount || 0)].map((_level, index) => (\n          <Item\n            onClick={() => {\n              emitUIInteraction?.({ Location: index });\n            }}\n            style={{\n              backgroundColor: props.uiData?.background?.hex || \"#000000\",\n            }}\n          >\n            {`Level ${index}`}\n          </Item>\n        ))}\n      </Inner>\n    </Container>\n  );\n};\n\nexport { LocationControls };\n","import { Slider } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { AdminButton } from \"../AdminButton\";\n\nconst Container = styled.div`\n  bottom: 60px;\n  left: 0;\n  right: 0;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.table`\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0 3px;\n  color: white;\n  max-width: 300px;\n`;\n\nconst TR = styled.tr`\n  margin: 5px 0;\n  border-radius: 5px;\n  position: relative;\n  td {\n    padding: 5px;\n  }\n  td:first-child {\n    border-top-left-radius: 5px;\n  }\n  td:last-child {\n    border-top-right-radius: 5px;\n  }\n\n  td:first-child {\n    border-bottom-left-radius: 5px;\n  }\n  td:last-child {\n    border-bottom-right-radius: 5px;\n  }\n`;\n\nconst TD0 = styled.td`\n  text-align: right;\n`;\n\nconst TD1 = styled.td`\n  width: 100%;\n`;\n\nconst TD2 = styled.td`\n  text-align: left;\n`;\n\nconst SunControls = ({\n  emitUIInteraction,\n  activeUI,\n  admin,\n  uiData,\n  setUiData,\n  hideHidden,\n  hideControls,\n}) => {\n  const isVisible = activeUI?.includes(\"sun\");\n  return (\n    <Container open={isVisible}>\n      <Inner>\n        <tbody>\n          {uiData?.time?.hide && (hideHidden || !admin) ? null : (\n            <TR\n              style={{\n                backgroundColor: (uiData?.background?.hex || \"#000000\") + \"CC\",\n              }}\n            >\n              <TD0>{`${uiData?.time?.min || 0}:00`}</TD0>\n              <TD1>\n                <Slider\n                  onChange={(v) => {\n                    emitUIInteraction?.({ Time: v });\n                  }}\n                  min={uiData?.time?.min || 0}\n                  max={uiData?.time?.max || 23}\n                  step={uiData?.time?.step || 1}\n                  tooltip={{ formatter: (v) => `${v}:00` }}\n                />\n              </TD1>\n              <TD2>{`${uiData?.time?.max || 23}:00`}</TD2>\n              {admin && (\n                <AdminButton\n                  uiData={uiData}\n                  setUiData={setUiData}\n                  name=\"time\"\n                  hideControls={hideControls}\n                />\n              )}\n            </TR>\n          )}\n          {uiData?.position?.hide && (hideHidden || !admin) ? null : (\n            <TR\n              style={{\n                backgroundColor: (uiData?.background?.hex || \"#000000\") + \"CC\",\n              }}\n            >\n              <TD0>S</TD0>\n              <TD1>\n                <Slider\n                  tooltip={{ open: false }}\n                  onChange={(v) => {\n                    emitUIInteraction?.({ SunPosition: v });\n                  }}\n                  min={uiData?.position?.min || 0}\n                  max={uiData?.position?.max || 360}\n                  step={uiData?.position?.step || 1}\n                />\n              </TD1>\n              <TD2>N</TD2>\n              {admin && (\n                <AdminButton\n                  uiData={uiData}\n                  setUiData={setUiData}\n                  name=\"position\"\n                  hideControls={hideControls}\n                />\n              )}\n            </TR>\n          )}\n        </tbody>\n      </Inner>\n    </Container>\n  );\n};\n\nexport { SunControls };\n","import React from \"react\";\nimport { ButtonUI } from \"../ButtonUI\";\nimport {\n  ClockCircleOutlined,\n  HomeOutlined,\n  PictureOutlined,\n  SearchOutlined,\n} from \"@ant-design/icons\";\n\nimport {\n  BsChevronExpand,\n  BsFillSunFill,\n  BsPinMap,\n  BsArrowLeftRight,\n  BsEye,\n  BsInfoCircle,\n  BsLayoutWtf,\n} from \"react-icons/bs\";\n\nimport { MdOutlineMeetingRoom } from \"react-icons/md\";\n\nimport { BiCompass } from \"react-icons/bi\";\n\nimport { FaLevelUpAlt } from \"react-icons/fa\";\n\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  height: 100%;\n  position: relative;\n  > * {\n    margin: 0px 10px;\n  }\n`;\n\nconst UIButtons = (props) => {\n  const { activeUI, setActiveUI, emitUIInteraction } = props;\n\n  return (\n    <>\n      <Container>\n        <ButtonUI\n          {...props}\n          title=\"home\"\n          icon={<HomeOutlined />}\n          onClick={() => {\n            setActiveUI([\"exterior\"]);\n            emitUIInteraction?.({ Home: true });\n          }}\n          visible={[\"exterior\"]}\n          name=\"home\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"gallery\"\n          icon={<PictureOutlined />}\n          onClick={() => setActiveUI([activeUI[0], \"gallery\"])}\n          onUnclick={() => setActiveUI([activeUI[0]])}\n          visible={[\"exterior\", \"interior\"]}\n          name=\"gallery\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"nearby\"\n          icon={<BsPinMap />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"nearby\"]);\n            emitUIInteraction?.({ Nearby: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Nearby: true });\n          }}\n          visible={[\"exterior\"]}\n          name=\"nearby\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"filter\"\n          icon={<SearchOutlined />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"filter\"]);\n            emitUIInteraction?.({ Filter: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Filter: true });\n          }}\n          visible={[\"exterior\"]}\n          name=\"filter\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"materials\"\n          icon={<BsArrowLeftRight />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"materials\"]);\n            emitUIInteraction?.({ Materials: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Materials: true });\n          }}\n          visible={[\"interior\"]}\n          name=\"materials\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"teleport\"\n          icon={<BsEye />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"teleport\"]);\n            emitUIInteraction?.({ Teleport: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Teleport: true });\n          }}\n          visible={[\"interior\"]}\n          name=\"teleport\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"info\"\n          icon={<BsInfoCircle />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"info\"]);\n            emitUIInteraction?.({ InteriorInfo: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ InteriorInfo: true });\n          }}\n          visible={[\"interior\"]}\n          name=\"info\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"discover\"\n          icon={<BiCompass />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"discover\"]);\n            emitUIInteraction?.({ Discover: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Discover: true });\n          }}\n          visible={[\"exterior\"]}\n          name=\"info\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"level\"\n          icon={<BsChevronExpand />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"location\"]);\n          }}\n          onUnclick={() => setActiveUI([activeUI[0]])}\n          visible={[\"exterior\", \"interior\"]}\n          name=\"location\"\n        />\n\n        <ButtonUI\n          {...props}\n          title=\"rooms\"\n          icon={<MdOutlineMeetingRoom />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"rooms\"]);\n            emitUIInteraction?.({ Teleport: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Teleport: true });\n          }}\n          visible={[\"exterior\", \"interior\"]}\n          name=\"rooms\"\n        />\n\n        <ButtonUI\n          {...props}\n          title=\"sun\"\n          icon={<BsFillSunFill />}\n          onClick={() => setActiveUI([activeUI[0], \"sun\"])}\n          onUnclick={() => setActiveUI([activeUI[0]])}\n          visible={[\"exterior\", \"interior\"]}\n          name=\"sun\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"Floor plan\"\n          icon={<BsLayoutWtf />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"floorPlan\"]);\n            emitUIInteraction?.({ FloorPlan: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ FloorPlan: true });\n          }}\n          visible={[\"interior\"]}\n          name=\"floorPlan\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"Level view\"\n          icon={<FaLevelUpAlt />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"levelView\"]);\n            emitUIInteraction?.({ LevelView: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ LevelView: true });\n          }}\n          visible={[\"interior\"]}\n          name=\"levelView\"\n        />\n        {!props.uiData.onlyInterior && (\n          <ButtonUI\n            {...props}\n            title=\"interior\"\n            icon={<ClockCircleOutlined />}\n            onClick={() => setActiveUI([\"interior\"])}\n            onUnclick={() => setActiveUI([\"exterior\"])}\n            visible={[\"exterior\", \"interior\"]}\n            admin={false}\n          />\n        )}\n        <ButtonUI\n          {...props}\n          title=\"apartment\"\n          icon={<ClockCircleOutlined />}\n          onClick={() => setActiveUI([\"exterior\", \"apartment\"])}\n          onUnclick={() => setActiveUI([\"exterior\"])}\n          visible={[\"exterior\"]}\n          admin={false}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport { UIButtons };\n","import { Button, Drawer, Image, Modal } from \"antd\";\nimport React, { useState } from \"react\";\nimport { BsQuestionLg } from \"react-icons/bs\";\nimport { IoClose } from \"react-icons/io5\";\nimport styled from \"styled-components\";\nimport { ButtonUI } from \"../ButtonUI\";\n\nconst Container = styled.div`\n  position: absolute;\n  inset: 0;\n  background-color: black;\n  z-index: 99999999;\n  background-image: url(\"/images/how-to.png\");\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n`;\n\nconst CloseButton = styled(Button)`\n  position: absolute;\n  left: 16px;\n  top: 16px;\n  z-index: 1;\n`;\n\nconst InfoButton = (props) => {\n  const [isOpen, setIsOpen] = useState();\n  return (\n    <>\n      <ButtonUI\n        icon={<BsQuestionLg />}\n        visible={[\"exterior\", \"interior\"]}\n        {...props}\n        adminSide=\"left\"\n        onClick={() => setIsOpen(true)}\n        onUnclick={() => setIsOpen(false)}\n      />\n      {/* <Modal\n        open={isOpen}\n        onCancel={() => setIsOpen(false)}\n        footer={null}\n        getContainer={false}\n      >\n        <Image src=\"/images/logo-black.png\" preview={false}></Image>\n      </Modal> */}\n      <Drawer\n        visible={isOpen}\n        onClose={() => setIsOpen(false)}\n        width=\"100VW\"\n        title=\"How to use IMMERSIV\"\n        forceRender\n      >\n        <Container>\n          <CloseButton onClick={() => setIsOpen(false)} type=\"link\">\n            <IoClose size={30} color=\"white\" />\n          </CloseButton>\n        </Container>\n      </Drawer>\n    </>\n  );\n};\n\nexport { InfoButton };\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  bottom: 60px;\n  left: 0px;\n  right: 0px;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  display: flexbox;\n  overflow-x: auto;\n  justify-content: center;\n`;\n\nconst Item = styled.div`\n  border-radius: 5px;\n  color: white;\n  margin: 0 6px;\n  padding: 5px 10px;\n  white-space: nowrap;\n  cursor: pointer;\n`;\n\nconst RoomsControls = (props) => {\n  const { emitUIInteraction, activeUI, uiData } = props;\n  const isVisible = activeUI?.includes(\"rooms\");\n  return uiData?.rooms ? (\n    <Container open={isVisible}>\n      <Inner>\n        {uiData.rooms.split(\"\\n\").map((room, index) => (\n          <Item\n            onClick={() => {\n              emitUIInteraction?.({ Room: index + 1 });\n            }}\n            style={{\n              backgroundColor: props.uiData?.background?.hex || \"#000000\",\n            }}\n          >\n            {room}\n          </Item>\n        ))}\n      </Inner>\n    </Container>\n  ) : null;\n};\n\nexport { RoomsControls };\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport ImageGallery from \"react-image-gallery\";\nimport styled from \"styled-components\";\nimport { IoClose } from \"react-icons/io5\";\nimport { Button } from \"../ButtonUI\";\n\nconst Container = styled.div`\n  top: 00px;\n  bottom: 50px;\n  left: 0px;\n  right: 0px;\n  padding: 50px 10px 10px;\n  position: absolute;\n\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n  z-index: 1;\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst FloorPlan = ({ project, activeUI, uiData, setActiveUI }) => {\n  const [slide, setSlide] = useState(0);\n  const [dimensionsW, setDimensionsW] = useState({});\n  const ref = useRef();\n\n  const getContainerSize = () => {\n    if (ref.current)\n      setDimensionsW({\n        width: ref.current.clientWidth,\n        height: ref.current.clientHeight,\n      });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", getContainerSize);\n    getContainerSize();\n  }, []);\n  if (!project) return null;\n  const { media } = project;\n\n  const images =\n    media\n      ?.filter((i) => i.type === \"plan\")\n      .map((i, index) => ({\n        ...i,\n        original: i.url,\n        thumbnail: i.thumbnail,\n        description: i.name,\n        originalClass: \"featured-slide\",\n        thumbnailClass: \"featured-thumb\",\n      }))\n      .filter((i) => i) || [];\n\n  return (\n    <Container\n      ref={ref}\n      open={activeUI.includes(\"floorPlan\")}\n      style={{\n        backgroundColor: (uiData?.background?.hex || \"#000000\") + \"CC\",\n      }}\n    >\n      <Inner>\n        <div style={{ display: \"flex\" }}>\n          <Button\n            type=\"text\"\n            onClick={() =>\n              setActiveUI(activeUI.filter((i) => i !== \"floorPlan\"))\n            }\n          >\n            <IoClose size={30} />\n          </Button>\n        </div>\n        <ImageGallery\n          items={images}\n          showBullets={false}\n          showFullscreenButton={false}\n          showPlayButton={false}\n          // showNav={false}\n          thumbnailPosition={\n            dimensionsW.height > dimensionsW.width ? \"bottom\" : \"right\"\n          }\n          onSlide={setSlide}\n          startIndex={slide}\n        />\n      </Inner>\n    </Container>\n  );\n};\n\nexport default FloorPlan;\n","import { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ApartmentControls } from \"../Bottom/ApartmentContols\";\nimport { ButtonUI } from \"../Bottom/ButtonUI\";\nimport { FilterControls } from \"../Bottom/FilterControls\";\nimport Gallery from \"../Bottom/Gallery\";\nimport { LocationControls } from \"../Bottom/LocationControls\";\nimport { SunControls } from \"../Bottom/SunControls\";\nimport { UIButtons } from \"../Bottom/UIButtons\";\nimport { QuestionOutlined } from \"@ant-design/icons\";\nimport { BsQuestionLg } from \"react-icons/bs\";\nimport { InfoButton } from \"../Bottom/InfoButton\";\nimport { RoomsControls } from \"../Bottom/RoomsControls\";\nimport FloorPlan from \"../Bottom/FloorPlan\";\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 50px;\n  display: flex;\n  overflow-x: auto;\n`;\n\nconst ButtonsContainer = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`;\n\nconst InfoContainer = styled.div`\n  background: black;\n  margin-left: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0px 16px;\n`;\n\nconst AppUI = (props) => {\n  const [activeUI, setActiveUI] = useState([\"exterior\"]);\n  const propsC = {\n    ...props,\n    activeUI,\n    setActiveUI: (v) => {\n      if (props.uiData?.onlyInterior && v.includes(\"exterior\"))\n        setActiveUI([\"interior\"]);\n      else setActiveUI(v);\n    },\n  };\n  useEffect(() => {\n    if (props.uiData?.onlyInterior) setActiveUI([\"interior\"]);\n  }, [props.uiData?.onlyInterior]);\n  return (\n    <div style={{ zIndex: 1, color: props.uiData?.textColor?.hex || \"white\" }}>\n      <Container>\n        <ButtonsContainer\n          style={{ backgroundColor: props.uiData?.background?.hex || \"black\" }}\n        >\n          <UIButtons {...propsC} />\n        </ButtonsContainer>\n        <InfoContainer\n          style={{ backgroundColor: props.uiData?.background?.hex || \"black\" }}\n        >\n          <InfoButton {...propsC} />\n        </InfoContainer>\n      </Container>\n      <FilterControls {...propsC} />\n      <Gallery {...propsC} />\n      <FloorPlan {...propsC} />\n      <SunControls {...propsC} />\n      <LocationControls {...propsC} />\n      <RoomsControls {...propsC} />\n      <ApartmentControls {...propsC} />\n    </div>\n  );\n};\n\nconst getCustomColorsStyles = (props) => {\n  let color = props.uiData?.buttonColor?.hex || \"white\";\n  if (props.isActive)\n    color = props.uiData?.buttonHoverColor?.hex || \"lightblue\";\n\n  const hover =\n    props.uiData?.buttonHoverColor?.hex ||\n    props.uiData?.buttonColor?.hex ||\n    \"lightblue\";\n  return `color: ${color};\n  &:hover {\n    color: ${hover};\n  }`;\n};\nexport { AppUI, getCustomColorsStyles };\n","import API from \"api/axios.config\";\r\n\r\nclass ConstantService {\r\n    getConstant() {\r\n        return API.get(`/constant`);\r\n    }\r\n    saveConstant(data) {\r\n        return API.put(`/constant`, data);\r\n    }\r\n}\r\n\r\nexport default new ConstantService();\r\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { WebRTCClient } from \"@arcware/webrtc-plugin\";\nimport { AppUI } from \"components/ProjectView/Components/ProjectUI/AppUI\";\n\nconst ProjectA = (props) => {\n  const { project, setVideoInitialized } = props;\n\n  const sizeContainerRef = useRef(null);\n  const containerRef = useRef(null);\n  const videoRef = useRef(null);\n  const [webrtcClient, setWebrtcClient] = useState();\n  const webrtcClientInit = useRef();\n\n  const responseCallback = (message) => {\n    console.log(\"UE response: \", message);\n  };\n\n  const videoInitialized = () => {\n    setVideoInitialized(true);\n  };\n\n  useEffect(() => {\n    const args = {\n      address:\n        props.project.arcwareAddress ||\n        \"wss://signalling-client.ragnarok.arcware.cloud/\",\n      packageId:\n        props.project.arcwarePackageId ||\n        \"ff41fd0c-cac9-4e4c-abe5-3ada402f57cc\",\n      settings: {},\n      autoplay: { video: true, audio: true },\n      sizeContainer: sizeContainerRef.current,\n      container: containerRef.current,\n      videoRef: videoRef.current,\n      playOverlay: false,\n      loader: () => {},\n      applicationResponse: responseCallback,\n      videoInitializeCallback: videoInitialized,\n    };\n\n    // double load protection\n    if (!webrtcClientInit.current) {\n      webrtcClientInit.current = true;\n      setWebrtcClient(new WebRTCClient(args));\n    }\n  }, []);\n\n  return (\n    <>\n      <div ref={sizeContainerRef} style={{ flex: 1 }}>\n        <div ref={containerRef} style={{ zIndex: 1 }}>\n          <video ref={videoRef} />\n          {/* <Responses responses={responses} /> */}\n        </div>\n      </div>\n      {webrtcClient != null && project?.newUI && (\n        <AppUI\n          emitUIInteraction={(v) => {\n            webrtcClient.emitUIInteraction(v);\n            console.log(\"emitUIInteraction() with: \", v);\n          }}\n          project={project}\n          uiData={project.uiData}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ProjectA;\n","import axios from \"axios\";\r\n\r\nconst baseURL =\r\n    process.env.NODE_ENV === \"production\"\r\n        ? \"https://tour.immersiv.com.au/api\"\r\n        : \"http://localhost:5000/api\";\r\n\r\nconst API = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n});\r\n\r\nAPI.interceptors.request.use(\r\n    function (req) {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) req.headers[\"auth-token\"] = token;\r\n        return req;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default API;\r\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import { useEffect } from \"react\";\nimport API from \"api/axios.config\";\nimport { useUser } from \"context/UserContext\";\nimport history from \"helpers/history\";\n\nconst WithAxios = ({ children }) => {\n    const { isInitiated, logout } = useUser();\n\n    useEffect(() => {\n        API.interceptors.response.use(\n            (response) => response,\n            async (error) => {\n                const originalRequest = error.config;\n                if (\n                    error.response.status === 401 &&\n                    originalRequest.url === \"/auth/refresh-token\"\n                ) {\n                    return new Promise((resolve, reject) => {\n                        logout();\n                        history.push(\"/login\");\n                        reject(error);\n                    });\n                }\n\n                if (error.response.status === 401 && !originalRequest._retry) {\n                    try {\n                        originalRequest._retry = true;\n                        const res = await API.post(\"/auth/refresh-token\");\n                        localStorage.setItem(\"token\", res.data.token);\n                        return API(originalRequest);\n                    } catch (error) {\n                        logout();\n                        history.push(\"/login\");\n                    }\n                }\n                return Promise.reject(error);\n            }\n        );\n    }, []);\n\n    return isInitiated ? children : null;\n};\n\nexport default WithAxios;\n","import WithAxios from \"helpers/WithAxios\";\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport authService from \"services/auth.service\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst UserContext = createContext();\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [authData, setAuthData] = useState({\r\n        token: \"\",\r\n    });\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [isInitiated, setIsInitiated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            setIsLoggedIn(true);\r\n            setAuthData(() => getTokenData(localStorage.getItem(\"token\")));\r\n        }\r\n        setIsInitiated(true);\r\n    }, []);\r\n\r\n    const getTokenData = (token) => {\r\n        if (token) {\r\n            const decoded = jwt_decode(token);\r\n            return {\r\n                ...decoded,\r\n                token,\r\n            };\r\n        } else\r\n            return {\r\n                token: \"\",\r\n            };\r\n    };\r\n\r\n    const setUserInfo = (data) => {\r\n        const { token } = data;\r\n\r\n        setIsLoggedIn(true);\r\n\r\n        setAuthData(() => getTokenData(token));\r\n        localStorage.setItem(\"token\", token);\r\n    };\r\n\r\n    const logout = () => {\r\n        setAuthData(null);\r\n        setIsLoggedIn(false);\r\n\r\n        authService.logout();\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                setUserState: (data) => setUserInfo(data),\r\n                logout,\r\n                isInitiated,\r\n                isLoggedIn,\r\n                setIsLoggedIn,\r\n                authData,\r\n                setAuthData,\r\n            }}\r\n        >\r\n            <WithAxios>{children}</WithAxios>\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nconst useUser = () => {\r\n    const context = useContext(UserContext);\r\n\r\n    if (context === undefined) {\r\n        throw new Error(\"useUser must be used within UserProvider\");\r\n    }\r\n    return context;\r\n};\r\n\r\nexport { UserProvider, useUser };\r\n","import API from \"api/axios.config\";\r\n\r\nclass AdminService {\r\n    getAdmin() {\r\n        return API.get(`/admins`);\r\n    }\r\n\r\n    createAdmin(data) {\r\n        return API.post(`/admins`, data);\r\n    }\r\n\r\n    deleteAdmin(id) {\r\n        return API.delete(`/admins/${id}`);\r\n    }\r\n}\r\n\r\nexport default new AdminService();\r\n","import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUser } from \"context/UserContext\";\n\nconst useLoginCheck = () => {\n    const navigate = useNavigate();\n    const { isLoggedIn, authData, logout, isInitiated } = useUser();\n    useEffect(() => {\n        if (isInitiated) {\n            if (!isLoggedIn) {\n                logout();\n                navigate(\"/login\");\n                return null;\n            }\n\n            if (!authData?.super) {\n                if (authData?.projectId) {\n                    navigate(`/p-admin/${authData.projectId}`);\n                    return null;\n                } else {\n                    logout();\n                    navigate(\"/login\");\n                    return null;\n                }\n            }\n        }\n    }, [isLoggedIn, authData?.super, authData?.projectId, isInitiated]);\n};\n\nexport default useLoginCheck;\n","import LayoutHOC from \"layout/Layout\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport {\r\n    Button,\r\n    Dropdown,\r\n    Form,\r\n    Input,\r\n    Layout,\r\n    List,\r\n    Menu,\r\n    Modal,\r\n    PageHeader,\r\n    Popconfirm,\r\n} from \"antd\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\nimport { MoreOutlined } from \"@ant-design/icons\";\r\nimport { useUser } from \"context/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport toast from \"react-hot-toast\";\r\nimport adminService from \"services/admin.service\";\r\nimport useLoginCheck from \"hooks/useLoginCheck\";\r\n\r\nconst Admins = (props) => {\r\n    const formRef = useRef(null);\r\n    const [admins, setAdmins] = useState(null);\r\n    const [editModalOpen, setEditModalOpen] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        adminService.getAdmin().then((response) => {\r\n            setAdmins(response.data);\r\n        });\r\n    }, []);\r\n\r\n    useLoginCheck();\r\n\r\n    const onFinish = async (values) => {\r\n        const response = await adminService.createAdmin(values);\r\n        if (response.data) {\r\n            toast.success(\"Saved\");\r\n            setAdmins(response.data);\r\n            setEditModalOpen(null);\r\n            if (formRef.current) formRef.current.resetFields();\r\n        }\r\n    };\r\n\r\n    const deleteAdmin = async (id) => {\r\n        const response = await adminService.deleteAdmin(id);\r\n        if (response.data) setAdmins(response.data);\r\n    };\r\n\r\n    return (\r\n        <LayoutHOC loading={!admins}>\r\n            <Layout\r\n                style={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flex: 1,\r\n                    background: \"white\",\r\n                }}\r\n            >\r\n                <PageHeader\r\n                    onBack={() => navigate(`/admin`)}\r\n                    title={`Admins`}\r\n                    style={{\r\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\r\n                        position: \"fixed\",\r\n                        zIndex: 100,\r\n                        width: \"100%\",\r\n                    }}\r\n                />\r\n\r\n                <Content\r\n                    style={{\r\n                        flex: 1,\r\n                        overflow: \"auto\",\r\n                        padding: \"16px\",\r\n                        paddingTop: \"100px\",\r\n                        maxWidth: \"800px\",\r\n                        width: \"100%\",\r\n                        margin: \"auto\",\r\n                    }}\r\n                >\r\n                    <Button\r\n                        onClick={() => setEditModalOpen({})}\r\n                        style={{ margin: \"16px\" }}\r\n                    >\r\n                        Add admin\r\n                    </Button>\r\n                    <Modal\r\n                        visible={!!editModalOpen}\r\n                        onCancel={() => setEditModalOpen(null)}\r\n                        footer={null}\r\n                    >\r\n                        <Form\r\n                            onFinish={onFinish}\r\n                            style={{\r\n                                padding: \" 16px\",\r\n                                maxWidth: \"500px\",\r\n                                margin: \"auto\",\r\n                            }}\r\n                            ref={formRef}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"email\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please add name!\",\r\n                                        type: \"email\",\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input placeholder=\"Email\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    htmlType=\"submit\"\r\n                                    style={{ width: \"100%\" }}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                    {admins && (\r\n                        <List\r\n                            itemLayout=\"horizontal\"\r\n                            dataSource={admins.sort((a, b) =>\r\n                                a.name > b.name ? 1 : -1\r\n                            )}\r\n                            renderItem={(admin) => (\r\n                                <List.Item\r\n                                    actions={[\r\n                                        <Dropdown\r\n                                            overlay={\r\n                                                <Menu>\r\n                                                    <Popconfirm\r\n                                                        title=\"Are you sure to delete this admin?\"\r\n                                                        onConfirm={() =>\r\n                                                            deleteAdmin(\r\n                                                                admin.email\r\n                                                            )\r\n                                                        }\r\n                                                        okText=\"Yes\"\r\n                                                        cancelText=\"No\"\r\n                                                    >\r\n                                                        <Menu.Item\r\n                                                            key=\"3\"\r\n                                                            danger\r\n                                                        >\r\n                                                            Delete\r\n                                                        </Menu.Item>\r\n                                                    </Popconfirm>\r\n                                                </Menu>\r\n                                            }\r\n                                            trigger={[\"click\"]}\r\n                                        >\r\n                                            <MoreOutlined\r\n                                                style={{ fontSize: \"30px\" }}\r\n                                            />\r\n                                        </Dropdown>,\r\n                                    ]}\r\n                                    style={{\r\n                                        borderBottom: \"3px solid #ccc\",\r\n                                        paddingLeft: \"16px\",\r\n                                    }}\r\n                                >\r\n                                    <List.Item.Meta\r\n                                        title={admin.email}\r\n                                        description={\r\n                                            admin.locked\r\n                                                ? \"Locked\"\r\n                                                : \"Not locked\"\r\n                                        }\r\n                                    />\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                    )}\r\n                </Content>\r\n            </Layout>\r\n        </LayoutHOC>\r\n    );\r\n};\r\n\r\nexport default Admins;\r\n","import API from \"api/axios.config\";\r\n\r\nclass GAService {\r\n    getGA(projectId, metrics, dimensions, period) {\r\n        return API.post(`/ga/${projectId}`, {\r\n            metrics,\r\n            dimensions,\r\n            start: period[0],\r\n            finish: period[1],\r\n        });\r\n    }\r\n\r\n    getAccessToken() {\r\n        return API.get(`/ga/access-token`);\r\n    }\r\n}\r\n\r\nexport default new GAService();\r\n","import React from \"react\";\n\nimport { Chart } from \"react-google-charts\";\nimport moment from \"moment\";\nimport humanizeString from \"string-humanize\";\n\nexport const ChartItem = (props) => {\n    const {\n        data,\n        title,\n        column,\n        seconds,\n        type = \"LineChart\",\n        isDate = true,\n    } = props;\n\n    const dataRefined = data\n        ? [\n              [\n                  humanizeString(data.columnHeaders[0].name.replace(\"ga:\", \"\")),\n                  humanizeString(\n                      data.columnHeaders[column].name.replace(\"ga:\", \"\")\n                  ),\n              ],\n              ...data.rows\n                  .map((i) => [\n                      isDate ? moment(i[0], \"YYYYMMDD\").format(\"D MMM\") : i[0],\n                      parseInt(i[column]) / (seconds ? 60 : 1),\n                  ])\n                  .sort((a, b) => (isDate ? 0 : b[1] - a[1])),\n          ]\n        : [];\n    return (\n        <div style={{ maxWidth: \"400px\", margin: \"20px\", width: \"100%\" }}>\n            <Chart\n                chartType={type}\n                width=\"100%\"\n                height=\"400px\"\n                data={dataRefined}\n                options={{\n                    title,\n                    legend: {\n                        position: \"none\",\n                    },\n                    chartArea: { width: \"85%\", height: \"80%\" },\n                    allowHtml: true,\n                    width: \"100%\",\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ChartItem;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { DatePicker, Layout, PageHeader } from \"antd\";\n\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport projectService from \"services/project.service\";\nimport moment from \"moment\";\nimport gaService from \"services/ga.service\";\nimport toast from \"react-hot-toast\";\nimport { ChartItem } from \"components/DashboardItem/DataItems\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\nimport { useUser } from \"context/UserContext\";\n\nconst AnalyticClient = (props) => {\n    const { id } = useParams();\n\n    const [project, setProject] = useState(null);\n    const [dateData, setDateData] = useState(null);\n    const [cityData, setCityData] = useState(null);\n    const [deviceData, setDeviceData] = useState(null);\n    const [sourceData, setSourceData] = useState(null);\n    const [period, setPeriod] = useState([\n        moment().subtract(7, \"day\").format(),\n        moment().format(),\n    ]);\n    const navigate = useNavigate();\n    const { logout, isLoggedIn, authData } = useUser();\n\n    useEffect(() => {\n        if (\n            !isLoggedIn ||\n            (!authData?.super &&\n                id.toString() !== authData?.projectId.toString())\n        ) {\n            logout();\n            navigate(\"/login\");\n            return null;\n        }\n    }, [isLoggedIn, authData?.super, authData?.projectId]);\n\n    useEffect(() => {\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (period.length === 2 && project?.id) {\n            setDateData(null);\n            setCityData(null);\n            setDeviceData(null);\n            setSourceData(null);\n            getMetricData();\n        }\n    }, [period[0], period[1], project?.id]);\n\n    const getMetricData = () => {\n        gaService\n            .getGA(\n                project.id,\n                \"ga:users,ga:newUsers,ga:pageviews,ga:sessions,ga:sessionDuration\",\n                \"ga:date\",\n                period\n            )\n            .then((res) => {\n                setDateData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Users analytics data not loaded\");\n            });\n\n        gaService\n            .getGA(project.id, \"ga:users\", \"ga:city\", period)\n            .then((res) => {\n                setCityData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Location analytics data not loaded\");\n            });\n\n        gaService\n            .getGA(project.id, \"ga:users\", \"ga:deviceCategory\", period)\n            .then((res) => {\n                setDeviceData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Device analytics data not loaded\");\n            });\n\n        gaService\n            .getGA(project.id, \"ga:users\", \"ga:source\", period)\n            .then((res) => {\n                setSourceData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Source analytics data not loaded\");\n            });\n    };\n\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(`/p-admin/${id}`)}\n                    title={\n                        <>\n                            Analytics\n                            <br />\n                            <DatePicker.RangePicker\n                                size=\"large\"\n                                defaultValue={[\n                                    moment().subtract(7, \"day\"),\n                                    moment(),\n                                ]}\n                                onChange={(m) =>\n                                    setPeriod([m[0].format(), m[1].format()])\n                                }\n                                allowClear={false}\n                            />\n                        </>\n                    }\n                    style={{ borderBottom: \"1px #ccc solid\" }}\n                />\n                {project && (\n                    <Content\n                        style={{\n                            flex: 1,\n                            overflow: \"auto\",\n                            paddingTop: \"100px\",\n                            padding: \"16px\",\n\n                            width: \"100%\",\n                            margin: \"auto\",\n                        }}\n                    >\n                        <div\n                            style={{\n                                textAlign: \"center\",\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                flexWrap: \"wrap\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                            }}\n                        >\n                            <ChartItem\n                                data={dateData}\n                                title=\"Users\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={1}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"New users\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={2}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"Page views\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={3}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"Sessions\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={4}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"Session duration (minutes)\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={5}\n                                seconds\n                            />\n                            <ChartItem\n                                data={deviceData}\n                                title=\"Device type\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                type=\"PieChart\"\n                                column={1}\n                                seconds\n                                isDate={false}\n                            />\n                            <ChartItem\n                                data={sourceData}\n                                title=\"Source\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                type=\"BarChart\"\n                                column={1}\n                                isDate={false}\n                            />\n                            <ChartItem\n                                data={cityData}\n                                title=\"Source\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                type=\"Table\"\n                                column={1}\n                                isDate={false}\n                            />\n                        </div>\n                    </Content>\n                )}\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default AnalyticClient;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { Button, Layout, PageHeader, Form, Input } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport constantService from \"services/constant.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst Constants = (props) => {\n    const [constants, setConstants] = useState(null);\n    const formRef = useRef(null);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        constantService\n            .getConstant()\n            .then((response) => {\n                if (response.data) {\n                    setConstants(response.data);\n                    formRef.current &&\n                        formRef.current.setFieldsValue(response.data);\n                } else setConstants({});\n            })\n            .catch(() => {\n                setConstants({});\n            });\n    }, []);\n\n    useLoginCheck();\n    const onFinish = async (values) => {\n        const response = await constantService.saveConstant(values);\n        if (response.data) {\n            setConstants(response.data);\n            toast.success(\"Saved\");\n        }\n    };\n\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(\"/admin\")}\n                    title=\"Constants\"\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"800px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Form\n                        ref={formRef}\n                        name=\"normal_login\"\n                        onFinish={onFinish}\n                        style={{\n                            padding: \" 16px\",\n                            maxWidth: \"500px\",\n                            margin: \"auto\",\n                        }}\n                        initialValues={constants}\n                    >\n                        <Form.Item name=\"email\">\n                            <Input placeholder=\"Email\" />\n                        </Form.Item>\n\n                        <Form.Item name=\"phone\">\n                            <Input placeholder=\"Phone\" />\n                        </Form.Item>\n\n                        <Form.Item name=\"call\">\n                            <Input placeholder=\"Phone in international format\" />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                style={{ width: \"100%\" }}\n                            >\n                                Save\n                            </Button>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button\n                                onClick={() => {\n                                    if (formRef.current)\n                                        formRef.current.resetFields();\n                                }}\n                                style={{ width: \"100%\" }}\n                            >\n                                Reset\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default Constants;\n","import API from \"api/axios.config\";\r\n\r\nclass ProjectService {\r\n    signUrl(isVideo, isLogo) {\r\n        return API.get(\"/utils/sign-s3\", {\r\n            params: { isVideo: !!isVideo, isLogo: !!isLogo },\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ProjectService();\r\n","import axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport utilsService from \"services/utils.service\";\n\nconst uploadMedia =\n    (cb, isVideo, isLogo) =>\n    async ({\n        action,\n        data,\n        file,\n        filename,\n        headers,\n        onError,\n        onProgress,\n        onSuccess,\n        withCredentials,\n    }) => {\n        try {\n            const res = await utilsService.signUrl(isVideo, isLogo);\n\n            axios\n                .put(res.data.signedRequest, file, {})\n                .then((s3res) => {\n                    cb({ url: res.data.url, thumbnail: res.data.thumbnail });\n                    onSuccess(res.data.thumbnail);\n                })\n                .catch((err) => {\n                    console.log(err.message);\n                    onError();\n                });\n        } catch (error) {\n            onError();\n            toast.error(error.message);\n        }\n    };\n\nexport default uploadMedia;\n","import { LoadingOutlined } from \"@ant-design/icons\";\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Image,\n  Input,\n  InputNumber,\n  Switch,\n  Upload,\n} from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport uploadMedia from \"helpers/uploadMedia\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Logo = (props) => {\n  const customUploadClientLogo = uploadMedia(\n    (values) => {\n      props.setFieldsValue({ [props.id]: values.url });\n    },\n    props.isVideo,\n    true\n  );\n  const [image, setImage] = useState(\"\");\n  useEffect(() => {\n    setTimeout(() => setImage(props[props.id]), 5000);\n  }, [props[props.id]]);\n  return (\n    <>\n      {image === props[props.id] ? (\n        props.isVideo ? (\n          <video\n            id=\"my-player\"\n            class=\"video-js\"\n            controls\n            preload=\"auto\"\n            data-setup=\"{}\"\n          >\n            <source src={image} type=\"video/mp4\"></source>\n            <p class=\"vjs-no-js\">\n              To view this video please enable JavaScript, and consider\n              upgrading to a web browser that\n              <a\n                href=\"https://videojs.com/html5-video-support/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                supports HTML5 video\n              </a>\n            </p>\n          </video>\n        ) : (\n          <Image src={image} style={{ maxHeight: \"50px\" }} />\n        )\n      ) : (\n        <LoadingOutlined />\n      )}\n      <div style={{ marginTop: \"10px\" }}>\n        <Upload\n          customRequest={customUploadClientLogo}\n          showUploadList={false}\n          maxCount={1}\n          getValueFromEvent={() => {}}\n        >\n          <Button>Change</Button>\n        </Upload>\n      </div>\n    </>\n  );\n};\n\nconst ProjectFormFields = ({ setFieldsValue }) => {\n  return (\n    <>\n      <Form.Item\n        name=\"name\"\n        label=\"Name\"\n        rules={[\n          {\n            required: true,\n            message: \"Please set name!\",\n          },\n        ]}\n      >\n        <Input placeholder=\"Name\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"url\"\n        label=\"Url\"\n        rules={[\n          {\n            required: true,\n            message: \"Please add url!\",\n          },\n        ]}\n        extra=\"This is only what should appear at the end of url, for example 'best-hotel', 'sky_mall'... Do not put https://tour.immersiv.com.au/ here!\"\n      >\n        <Input placeholder=\"Url\" />\n      </Form.Item>\n\n      <Form.Item label=\"New UI\" name=\"newUI\" valuePropName=\"checked\">\n        <Checkbox />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Arcware project\"\n        name=\"isArcware\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Monkeyway project\"\n        name=\"isMonkeyway\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n\n      <Form.Item name=\"monkeywayBaseUrl\" label=\"Monkeyway base url\">\n        <Input placeholder=\"Leave empty for default.\" />\n      </Form.Item>\n\n      <Form.Item name=\"monkeywayAppEnvId\" label=\"Monkeyway app env id\">\n        <Input placeholder=\"Monkeyway app env id\" />\n      </Form.Item>\n\n      <Form.Item name=\"monkeywayApiKey\" label=\"Monkeyway api key\">\n        <Input placeholder=\"Monkeyway api key\" />\n      </Form.Item>\n\n      <Form.Item name=\"arcwareAddress\" label=\"Arcware address\">\n        <Input placeholder=\"Arcware address\" />\n      </Form.Item>\n\n      <Form.Item name=\"arcwarePackageId\" label=\"Arcware project id\">\n        <Input placeholder=\"Arcware project id\" />\n      </Form.Item>\n\n      <Form.Item name=\"projectId\" label=\"Project id\" hidden>\n        <Input placeholder=\"Project id\" />\n      </Form.Item>\n\n      <Form.Item name=\"modelId\" label=\"Model id\" hidden>\n        <Input placeholder=\"Model id\" />\n      </Form.Item>\n\n      <Form.Item name=\"levelsCount\" label=\"Number of levels\">\n        <InputNumber placeholder=\"Number of levels\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Custom background\"\n        name=\"backgroundOn\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n      <Form.Item\n        label=\"Background video\"\n        name=\"backgroundTypeVideo\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n      <Form.Item\n        label=\"Background video\"\n        valuePropName=\"backgroundVideo\"\n        name=\"backgroundVideo\"\n      >\n        <Logo setFieldsValue={setFieldsValue} isVideo />\n      </Form.Item>\n      <Form.Item\n        label=\"Background image\"\n        valuePropName=\"backgroundImage\"\n        name=\"backgroundImage\"\n      >\n        <Logo setFieldsValue={setFieldsValue} />\n      </Form.Item>\n\n      <Form.Item name=\"adminEmail\" label=\"Client login\">\n        <Input placeholder=\"Admin email\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"adminPassword\"\n        label=\"Client password\"\n        rules={[\n          {\n            min: 6,\n            message: \"Must have length at least 6!\",\n          },\n        ]}\n      >\n        <Input placeholder=\"Admin password\" />\n      </Form.Item>\n\n      <Form.Item name=\"analytic\" label=\"Analytics property\">\n        <Input placeholder=\"Google analytics property id\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"mobileNativeEvents\"\n        label=\"Mobile native events\"\n        valuePropName=\"checked\"\n      >\n        <Switch>Mobile native events</Switch>\n      </Form.Item>\n      <Form.Item\n        name=\"desktopNativeEvents\"\n        label=\"Desktop native events\"\n        valuePropName=\"checked\"\n      >\n        <Switch />\n      </Form.Item>\n\n      <Form.Item name=\"published\" valuePropName=\"checked\" label=\"Published\">\n        <Checkbox />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Project details on\"\n        name=\"projectDetailsOn\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n      <Form.Item label=\"Project details duration\" name=\"projectDetailsDuraton\">\n        <Input type=\"number\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Client logo\"\n        valuePropName=\"clientLogo\"\n        name=\"clientLogo\"\n      >\n        <Logo setFieldsValue={setFieldsValue} />\n      </Form.Item>\n      <Form.Item label=\"Client logo max width\" name=\"clientLogoMaxWidth\">\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item label=\"Client logo max height\" name=\"clientLogoMaxHeight\">\n        <Input type=\"number\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Project logo\"\n        valuePropName=\"projectLogo\"\n        name=\"projectLogo\"\n      >\n        <Logo setFieldsValue={setFieldsValue} />\n      </Form.Item>\n      <Form.Item label=\"Project logo max width\" name=\"projectLogoMaxWidth\">\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item label=\"Project logo max height\" name=\"projectLogoMaxHeight\">\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item\n        name=\"projectName\"\n        label=\"Project name\"\n        extra=\"This text will appear on the screen where the project is being loaded if there is no logo\"\n      >\n        <Input placeholder=\"projectName\" />\n      </Form.Item>\n      <Form.Item\n        name=\"description\"\n        label=\"Description\"\n        extra=\"This text will appear on the screen where the project is being loaded\"\n      >\n        <TextArea placeholder=\"Description\" rows={4} />\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\n          Save\n        </Button>\n      </Form.Item>\n    </>\n  );\n};\n\nexport default ProjectFormFields;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useRef } from \"react\";\nimport projectService from \"services/project.service\";\n\nimport { Button, Layout, PageHeader, Form } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport ProjectFormFields from \"components/ProjectFormFields\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst CreateProject = (props) => {\n    const formRef = useRef(null);\n\n    const navigate = useNavigate();\n\n    useLoginCheck();\n\n    const onFinish = async (values) => {\n        const response = await projectService.createProject(values);\n        if (response.data) {\n            toast.success(\"Saved\");\n            navigate(\"/admin\");\n        }\n    };\n\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(\"/admin\")}\n                    title=\"Create project\"\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"800px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Form\n                        ref={formRef}\n                        name=\"normal_login\"\n                        onFinish={onFinish}\n                        style={{\n                            padding: \" 16px\",\n                            maxWidth: \"500px\",\n                            margin: \"auto\",\n                        }}\n                        labelCol={{ span: 8 }}\n                        wrapperCol={{ span: 16 }}\n                    >\n                        <ProjectFormFields />\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                            <Button\n                                onClick={() => {\n                                    if (formRef.current)\n                                        formRef.current.resetFields();\n                                }}\n                                style={{ width: \"100%\" }}\n                            >\n                                Reset\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default CreateProject;\n","import React, { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport authService from \"services/auth.service\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\n\r\nconst ForgotPasswordModal = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const onFinish = (data) => {\r\n        authService\r\n            .forgotPassword(data.email)\r\n            .then((data) => {\r\n                if (data.data.status === \"OK\") {\r\n                    toast.success(\"Email has been sent successfully.\");\r\n                    setIsOpen(false);\r\n                }\r\n            })\r\n            .catch((error) => {});\r\n    };\r\n    return (\r\n        <div>\r\n            <>\r\n                <span onClick={() => setIsOpen(!isOpen)}>Forgot password?</span>\r\n                <Modal\r\n                    title=\"Forgot Password\"\r\n                    visible={isOpen}\r\n                    footer={[]}\r\n                    onCancel={() => setIsOpen(false)}\r\n                >\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        onFinish={onFinish}\r\n                        style={{\r\n                            padding: \"100px 16px\",\r\n                            maxWidth: \"500px\",\r\n                            margin: \"auto\",\r\n                        }}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[\r\n                                {\r\n                                    type: \"email\",\r\n                                    message: \"The input is not valid E-mail!\",\r\n                                },\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your E-mail!\",\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                prefix={\r\n                                    <UserOutlined className=\"site-form-item-icon\" />\r\n                                }\r\n                                placeholder=\"Email\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                Reset password\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPasswordModal;\r\n","// import { Button, HelperText, Input, Label } from \"@windmill/react-ui\";\r\nimport ForgotPasswordModal from \"components/ForgotPasswordModal\";\r\nimport { useUser } from \"context/UserContext\";\r\nimport Layout from \"layout/Layout\";\r\nimport React, { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport authService from \"services/auth.service\";\r\nimport { Form, Input, Button, Typography } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nconst Login = () => {\r\n    const { isLoggedIn, setUserState, authData } = useUser();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const onFinish = async (data) => {\r\n        const { email, password } = data;\r\n\r\n        try {\r\n            setIsLoading(true);\r\n            const data = await authService.login(email, password);\r\n            toast.success(\"Login successful 🔓\");\r\n\r\n            setTimeout(() => {\r\n                setUserState(data);\r\n                setRedirectToReferrer(true);\r\n                setIsLoading(false);\r\n            }, 1500);\r\n        } catch (error) {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    if (\r\n        (isLoggedIn || redirectToReferrer) &&\r\n        (authData?.super || authData?.projectId)\r\n    ) {\r\n        navigate(\"/admin\");\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Login\" loading={isLoading}>\r\n            <Form\r\n                name=\"normal_login\"\r\n                onFinish={onFinish}\r\n                style={{\r\n                    padding: \"100px 16px\",\r\n                    maxWidth: \"500px\",\r\n                    margin: \"auto\",\r\n                }}\r\n            >\r\n                <Typography.Title\r\n                    style={{ textAlign: \"center\", marginBottom: \"50px\" }}\r\n                >\r\n                    Manage IMMERSIVE\r\n                </Typography.Title>\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            type: \"email\",\r\n                            message: \"The input is not valid E-mail!\",\r\n                        },\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your E-mail!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input\r\n                        prefix={\r\n                            <UserOutlined className=\"site-form-item-icon\" />\r\n                        }\r\n                        placeholder=\"Email\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your Password!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password\r\n                        prefix={\r\n                            <LockOutlined className=\"site-form-item-icon\" />\r\n                        }\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <a>\r\n                        <ForgotPasswordModal />\r\n                    </a>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{ width: \"100%\" }}\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport projectService from \"services/project.service\";\n\nimport { Button, Layout, PageHeader, Form, Typography } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport ProjectFormFields from \"components/ProjectFormFields\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\nimport copy from \"copy-to-clipboard\";\n\nconst ProjectDetails = (props) => {\n  const [project, setProject] = useState(null);\n\n  const [form] = Form.useForm();\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    projectService.getProject(id).then((response) => {\n      setProject(response.data);\n    });\n  }, [id]);\n\n  const navigate = useNavigate();\n  useLoginCheck();\n\n  const onFinish = async (values) => {\n    const response = await projectService.saveProject(project.id, values);\n    if (response.data) toast.success(\"Saved\");\n  };\n\n  const projectAddress = project?.url\n    ? `https://tour.immersiv.com.au/p/${project.url}`\n    : \"not set yet\";\n  const galleryAddress = project?.url\n    ? `https://tour.immersiv.com.au/gallery?project=${project.url}`\n    : \"not set yet\";\n  const propertiesAddress = project?.url\n    ? `https://tour.immersiv.com.au/api/properties/properties-ue/${project.url}`\n    : \"not set yet\";\n\n  const setFieldsValue = (val) => {\n    if (form) {\n      form.setFieldsValue({\n        ...form.getFieldsValue(),\n        ...val,\n      });\n    }\n  };\n\n  const projectName = Form.useWatch(\"projectName\", form);\n  const clientLogo = Form.useWatch(\"clientLogo\", form);\n  const clientLogoMaxWidth = Form.useWatch(\"clientLogoMaxWidth\", form);\n  const clientLogoMaxHeight = Form.useWatch(\"clientLogoMaxHeight\", form);\n  const projectLogo = Form.useWatch(\"projectLogo\", form);\n  const projectLogoMaxWidth = Form.useWatch(\"projectLogoMaxWidth\", form);\n  const projectLogoMaxHeight = Form.useWatch(\"projectLogoMaxHeight\", form);\n  return (\n    <LayoutHOC loading={!project}>\n      <Layout\n        style={{\n          height: \"100%\",\n          display: \"flex\",\n          flex: 1,\n          background: \"white\",\n        }}\n      >\n        <PageHeader\n          onBack={() => navigate(\"/admin\")}\n          title={`Project - ${project?.name}`}\n          style={{\n            boxShadow: \"1px 1px 10px 1px #ccc\",\n            position: \"fixed\",\n            zIndex: 100,\n            width: \"100%\",\n          }}\n        />\n\n        <Content\n          style={{\n            flex: 1,\n            overflow: \"auto\",\n            padding: \"16px\",\n            paddingTop: \"100px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            margin: \"auto\",\n          }}\n        >\n          {project && (\n            <>\n              <Button\n                onClick={() => navigate(`/p-admin/${id}`)}\n                style={{ margin: \"16px\" }}\n              >\n                See client admin panel\n              </Button>\n              <Button\n                onClick={() =>\n                  navigate(`/admin/projects/${project.id}/properties`)\n                }\n                style={{ margin: \"16px\" }}\n              >\n                Manage properties\n              </Button>\n              <Button\n                onClick={() => navigate(`/admin/projects/${project.id}/media`)}\n                style={{ margin: \"16px\" }}\n              >\n                Manage media\n              </Button>\n              <Button\n                onClick={() => navigate(`/admin/projects/${project.id}/ui`)}\n                style={{ margin: \"16px\" }}\n              >\n                Manage UI\n              </Button>\n              <Typography.Paragraph>\n                {`The project full url is ${projectAddress}`}\n                <Button onClick={() => copy(projectAddress)} type=\"link\">\n                  Copy\n                </Button>\n              </Typography.Paragraph>\n\n              <Typography.Paragraph>\n                {`The project gallery url is ${galleryAddress} `}\n                <Button onClick={() => copy(galleryAddress)} type=\"link\">\n                  Copy\n                </Button>\n              </Typography.Paragraph>\n\n              <Typography.Paragraph>\n                {`The project properties api link ${propertiesAddress} `}\n                <Button onClick={() => copy(propertiesAddress)} type=\"link\">\n                  Copy\n                </Button>\n              </Typography.Paragraph>\n\n              <Form\n                form={form}\n                onFinish={onFinish}\n                style={{\n                  padding: \" 16px\",\n                  maxWidth: \"500px\",\n                  margin: \"auto\",\n                }}\n                initialValues={project}\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n              >\n                <ProjectFormFields setFieldsValue={setFieldsValue} />\n\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                  <Button\n                    onClick={() => {\n                      if (form.current) form.current.resetFields();\n                    }}\n                    style={{ width: \"100%\" }}\n                  >\n                    Reset\n                  </Button>\n                </Form.Item>\n              </Form>\n              <div>\n                <div>Project details preview</div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flex: 1,\n                    alignItems: \"center\",\n                  }}\n                >\n                  <img\n                    src={clientLogo}\n                    alt=\"logo\"\n                    style={{\n                      maxHeight: clientLogoMaxHeight + \"px\",\n                      maxWidth: clientLogoMaxWidth + \"px\",\n                      marginBottom: \"36px\",\n                    }}\n                  />\n                  {projectLogo ? (\n                    <img\n                      src={projectLogo}\n                      alt=\"logo\"\n                      style={{\n                        maxHeight: projectLogoMaxHeight + \"px\",\n                        maxWidth: projectLogoMaxWidth + \"px\",\n                        marginBottom: \"36px\",\n                      }}\n                    />\n                  ) : (\n                    <h6 style={{ textAlign: \"center\" }}>{projectName}</h6>\n                  )}\n                  {/* <p style={{ textAlign: \"center\" }}>\n                                        {description}\n                                    </p> */}\n                </div>\n              </div>\n            </>\n          )}\n        </Content>\n      </Layout>\n    </LayoutHOC>\n  );\n};\n\nexport default ProjectDetails;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\nimport projectService from \"services/project.service\";\n\nimport {\n    Button,\n    Drawer,\n    Dropdown,\n    Layout,\n    List,\n    Menu,\n    PageHeader,\n    Popconfirm,\n} from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport {\n    EyeFilled,\n    EyeInvisibleFilled,\n    MenuOutlined,\n    MoreOutlined,\n    StarFilled,\n} from \"@ant-design/icons\";\nimport { useUser } from \"context/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst Projects = (props) => {\n    const [projects, setProjects] = useState(null);\n    const { logout } = useUser();\n    const navigate = useNavigate();\n\n    const [openDrawer, setOpenDrawer] = useState(false);\n    useEffect(() => {\n        projectService.getProject().then((response) => {\n            setProjects(response.data);\n        });\n    }, []);\n\n    useLoginCheck();\n\n    const deleteProject = async (id) => {\n        const response = await projectService.deleteProject(id);\n        if (response.data) setProjects(response.data);\n    };\n\n    const setFeatured = async (id) => {\n        const response = await projectService.saveProject(id, {\n            featured: true,\n        });\n\n        if (response.data) setProjects(response.data);\n    };\n\n    return (\n        <LayoutHOC loading={!projects}>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => setOpenDrawer(true)}\n                    backIcon={<MenuOutlined />}\n                    title={\"Projects\"}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"800px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Button\n                        onClick={() => navigate(\"/admin/projects/create\")}\n                        style={{ margin: \"16px\" }}\n                    >\n                        Add project\n                    </Button>\n                    {projects && (\n                        <List\n                            itemLayout=\"horizontal\"\n                            dataSource={projects.sort((a, b) =>\n                                a.url > b.url ? 1 : -1\n                            )}\n                            renderItem={(project) => (\n                                <List.Item\n                                    actions={[\n                                        <Dropdown\n                                            overlay={\n                                                <Menu>\n                                                    <Menu.Item\n                                                        key=\"1\"\n                                                        onClick={() =>\n                                                            setFeatured(\n                                                                project.id\n                                                            )\n                                                        }\n                                                    >\n                                                        Set as featured\n                                                    </Menu.Item>\n                                                    <Menu.Divider />\n                                                    <Popconfirm\n                                                        title=\"Are you sure to delete this project?\"\n                                                        onConfirm={() =>\n                                                            deleteProject(\n                                                                project.id\n                                                            )\n                                                        }\n                                                        okText=\"Yes\"\n                                                        cancelText=\"No\"\n                                                    >\n                                                        <Menu.Item\n                                                            key=\"3\"\n                                                            danger\n                                                        >\n                                                            Delete\n                                                        </Menu.Item>\n                                                    </Popconfirm>\n                                                </Menu>\n                                            }\n                                            trigger={[\"click\"]}\n                                        >\n                                            <MoreOutlined\n                                                style={{ fontSize: \"30px\" }}\n                                            />\n                                        </Dropdown>,\n                                    ]}\n                                >\n                                    <List.Item.Meta\n                                        avatar={\n                                            project.featured ? (\n                                                <StarFilled\n                                                    style={{ fontSize: \"24px\" }}\n                                                />\n                                            ) : project.published ? (\n                                                <EyeFilled\n                                                    style={{ fontSize: \"24px\" }}\n                                                />\n                                            ) : (\n                                                <EyeInvisibleFilled\n                                                    style={{ fontSize: \"24px\" }}\n                                                />\n                                            )\n                                        }\n                                        title={project.name}\n                                        description={project.url}\n                                        onClick={() => {\n                                            navigate(\n                                                `/admin/projects/${project.id}`\n                                            );\n                                        }}\n                                    />\n                                </List.Item>\n                            )}\n                        />\n                    )}\n                </Content>\n            </Layout>\n            <Drawer\n                title=\"Menu\"\n                placement=\"left\"\n                onClose={() => setOpenDrawer(false)}\n                visible={openDrawer}\n            >\n                <Menu\n                    mode=\"inline\"\n                    style={{ width: \"100%\" }}\n                    onClick={({ item, key }) => {\n                        setOpenDrawer(false);\n                        switch (key) {\n                            case \"logout\":\n                                logout();\n                                break;\n                            case \"info\":\n                                navigate(\"/admin/contant\");\n                                break;\n                            case \"admins\":\n                                navigate(\"/admin/admins\");\n                                break;\n                            default:\n                                return;\n                        }\n                    }}\n                    activeKey=\"projects\"\n                    selectedKeys={[\"projects\"]}\n                >\n                    <Menu.Item key=\"projects\">Projects</Menu.Item>\n                    <Menu.Item key=\"info\">Constant</Menu.Item>\n                    <Menu.Item key=\"admins\">Admins</Menu.Item>\n                    <Menu.Item key=\"logout\">Logout</Menu.Item>\n                </Menu>\n            </Drawer>\n        </LayoutHOC>\n    );\n};\n\nexport default Projects;\n","import API from \"api/axios.config\";\r\n\r\nclass PropertyService {\r\n    getProperty(projectId, id) {\r\n        return API.get(`/properties/${projectId}/${id ? \"/\" + id : \"\"}`);\r\n    }\r\n    saveProperty(projectId, id, data) {\r\n        return API.put(`/properties/${projectId}/${id}`, data);\r\n    }\r\n    createProperty(projectId, id) {\r\n        return API.post(`/properties/${projectId}`, { id });\r\n    }\r\n    deleteProperty(projectId, ids) {\r\n        return API.post(`/properties/${projectId}/delete`, { ids });\r\n    }\r\n    saveStatus(projectId, id, data) {\r\n        return API.put(`/properties/${projectId}/status/${id}`, data);\r\n    }\r\n}\r\n\r\nexport default new PropertyService();\r\n","import {\n  Button,\n  Form,\n  Input,\n  InputNumber,\n  Select,\n  Table,\n  Typography,\n} from \"antd\";\nimport React, { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport propertyService from \"services/property.service\";\n\nconst { Option } = Select;\n\nconst transferOrientationToObject = (data) => {\n  if (!data.Orientation) return data;\n  const o = {};\n  if (data.Orientation.indexOf(\"N\") !== -1) o.N = true;\n  else if (data.Orientation.indexOf(\"S\") !== -1) o.S = true;\n  if (data.Orientation.indexOf(\"E\") !== -1) o.E = true;\n  else if (data.Orientation.indexOf(\"W\") !== -1) o.W = true;\n  return { ...data, Orientation: o };\n};\n\nconst transferOrientationToString = (data) => {\n  let o = \"\";\n  if (data.Orientation.N) o = o + \"N\";\n  else if (data.Orientation.S) o = o + \"S\";\n  if (data.Orientation.E) o = o + \"E\";\n  else if (data.Orientation.W) o = o + \"W\";\n  return { ...data, Orientation: o };\n};\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  property,\n  index,\n  children,\n  ...restProps\n}) => {\n  let inputNode = <InputNumber />;\n\n  switch (inputType) {\n    case \"number\":\n      inputNode = <InputNumber />;\n      break;\n    case \"orientation\":\n      inputNode = (\n        <Select>\n          <Option value=\"N\">North</Option>\n          <Option value=\"NE\">North-East</Option>\n          <Option value=\"E\">East</Option>\n          <Option value=\"SE\">South-East</Option>\n          <Option value=\"S\">South</Option>\n          <Option value=\"SW\">South-West</Option>\n          <Option value=\"W\">West</Option>\n          <Option value=\"NW\">North-West</Option>\n        </Select>\n      );\n      break;\n    case \"availability\":\n      inputNode = (\n        <Select>\n          <Option value=\"available\">Available</Option>\n          <Option value=\"reserved\">Reserved</Option>\n          <Option value=\"sold\">Sold</Option>\n        </Select>\n      );\n      break;\n    default:\n      inputNode = <Input />;\n  }\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0,\n            width: \"100%\",\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n\nconst capitalize = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\nconst PropertiesTable = (props) => {\n  const { properties, project, setProperties, admin, setEditModalOpen } = props;\n  const [selectedProperties, setSelectedProperties] = useState([]);\n  const [editingKey, setEditingKey] = useState(\"\");\n\n  const [form] = Form.useForm();\n  const isEditing = (property) => property.id === editingKey;\n\n  const edit = (property) => {\n    form.setFieldsValue(property);\n    setEditingKey(property.id);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n  };\n\n  const save = async (key) => {\n    try {\n      const values = await form.validateFields();\n      const response = await propertyService.saveProperty(\n        project.id,\n        key,\n        transferOrientationToObject(values)\n      );\n\n      if (response.data) {\n        toast.success(\"Saved\");\n        setProperties(response.data);\n        setEditingKey(\"\");\n      }\n    } catch (errInfo) {\n      console.log(\"Validate Failed:\", errInfo);\n    }\n  };\n\n  const deleteProperty = async () => {\n    const response = await propertyService.deleteProperty(\n      project.id,\n      selectedProperties\n    );\n    if (response.data) setProperties(response.data);\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"Name\",\n      sorter: (a, b) => (a.Name > b.Name ? 1 : -1),\n      sortDirections: [\"descend\", \"ascend\"],\n      editable: admin,\n      inputType: \"text\",\n      width: 100,\n    },\n    {\n      title: \"Availability\",\n      dataIndex: \"Availability\",\n      sorter: (a, b) => (a.Availability > b.Availability ? 1 : -1),\n      sortDirections: [\"descend\", \"ascend\"],\n      onFilter: (value, property) => property.Availability.indexOf(value) === 0,\n      editable: true,\n      inputType: \"availability\",\n      width: 100,\n      render: (_, property) => capitalize(property.Availability),\n    },\n    {\n      title: \"Surface\",\n      dataIndex: \"Surface\",\n      sorter: (a, b) => a.Surface - b.Surface,\n      sortDirections: [\"descend\", \"ascend\"],\n      editable: admin,\n      inputType: \"number\",\n      width: 100,\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"Price\",\n      sorter: (a, b) => a.Price - b.Price,\n      sortDirections: [\"descend\", \"ascend\"],\n      editable: true,\n      inputType: \"number\",\n      width: 100,\n    },\n    {\n      title: \"Bedrooms\",\n      dataIndex: \"BedroomsCount\",\n      key: \"bedrooms\",\n      sortDirections: [\"descend\", \"ascend\"],\n      editable: admin,\n      inputType: \"number\",\n      width: 100,\n    },\n    {\n      title: \"Bathrooms\",\n      dataIndex: \"BathroomsCount\",\n      sorter: (a, b) => a.BathroomsCount - b.BathroomsCount,\n      sortDirections: [\"descend\", \"ascend\"],\n      editable: admin,\n      inputType: \"number\",\n      width: 100,\n    },\n    ...(project.url.toLowerCase() === \"Imperial_Square\".toLowerCase()\n      ? []\n      : [\n          {\n            title: \"Frontage\",\n            dataIndex: \"Frontage\",\n            sorter: (a, b) => a.Frontage - b.Frontage,\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: admin,\n            inputType: \"number\",\n            width: 100,\n          },\n          {\n            title: \"Depth\",\n            dataIndex: \"Depth\",\n            sorter: (a, b) => a.Depth - b.Depth,\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: admin,\n            inputType: \"number\",\n            width: 100,\n          },\n        ]),\n    {\n      title: \"Orientation\",\n      dataIndex: \"Orientation\",\n\n      sorter: (a, b) =>\n        transferOrientationToString(a).Orientation >\n        transferOrientationToString(b).Orientation\n          ? 1\n          : -1,\n      sortDirections: [\"descend\", \"ascend\"],\n      editable: admin,\n      inputType: \"orientation\",\n      width: 100,\n    },\n    {\n      title: \"Url\",\n      dataIndex: \"Url\",\n      editable: admin,\n      inputType: \"text\",\n      width: 200,\n    },\n    {\n      title: \"FacadeName\",\n      dataIndex: \"FacadeName\",\n      editable: admin,\n      inputType: \"text\",\n      width: 100,\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"actions\",\n      width: 80,\n      render: (_, property) => {\n        const editable = isEditing(property);\n        return editable ? (\n          <span>\n            <Typography.Link\n              onClick={() => save(property.id)}\n              style={{\n                marginRight: 8,\n              }}\n            >\n              Save\n            </Typography.Link>\n\n            <Typography.Link onClick={cancel}>Cancel</Typography.Link>\n          </span>\n        ) : (\n          <span>\n            <Typography.Link\n              disabled={editingKey !== \"\"}\n              onClick={() => edit(property)}\n            >\n              Edit\n            </Typography.Link>\n          </span>\n        );\n      },\n    },\n  ];\n\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return {\n      ...col,\n      onCell: (property) => ({\n        property,\n        inputType: col.inputType,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(property),\n      }),\n    };\n  });\n\n  const onAddProperty = async () => {\n    const response = await propertyService.createProperty(\n      project.id,\n      properties.length ? properties[properties.length - 1].id : \"\"\n    );\n    if (response.data) {\n      toast.success(\"Added\");\n      setProperties(response.data.newProperties);\n      setEditingKey(response.data.newProperty.id);\n      form.setFieldsValue(\n        transferOrientationToString(response.data.newProperty)\n      );\n      document.querySelector(\"div.ant-table-body\").scrollTop = 1000000;\n    }\n  };\n  return (\n    <>\n      <Form form={form} component={false}>\n        <Table\n          components={{\n            body: {\n              cell: EditableCell,\n            },\n          }}\n          size=\"small\"\n          bordered\n          dataSource={properties.map((i) => {\n            const d = transferOrientationToString(i);\n            return { ...d, key: d.id };\n          })}\n          columns={mergedColumns}\n          rowClassName=\"editable-row\"\n          rowSelection={\n            admin\n              ? {\n                  type: \"checkbox\",\n                  onChange: (_, selectedRows) => {\n                    setSelectedProperties(selectedRows.map((i) => i.id));\n                  },\n                }\n              : null\n          }\n          pagination={false}\n          tableLayout=\"fixed\"\n          scroll={{\n            y: \"calc(100vh - 230px)\",\n          }}\n        />\n      </Form>\n      {admin && (\n        <Button\n          onClick={onAddProperty}\n          style={{ margin: \"16px\" }}\n          type=\"primary\"\n        >\n          Add property\n        </Button>\n      )}\n      {!!selectedProperties.length && admin && (\n        <Typography.Link\n          onClick={() => deleteProperty()}\n          type=\"danger\"\n          disabled={editingKey}\n        >\n          Delete\n        </Typography.Link>\n      )}\n    </>\n  );\n};\n\nexport default PropertiesTable;\n","import React, { useEffect } from \"react\";\n\nimport propertyService from \"services/property.service\";\nimport PropertiesTable from \"components/ProjectView/Components/PropertiesTable\";\nimport projectService from \"services/project.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst Properties = (props) => {\n    const { admin, id, project, properties, setProject, setProperties } = props;\n\n    useEffect(() => {\n        propertyService.getProperty(id).then((response) => {\n            setProperties(response.data);\n        });\n\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n\n    useLoginCheck();\n\n    return (\n        properties &&\n        project && (\n            <PropertiesTable\n                properties={properties}\n                setProperties={setProperties}\n                project={project}\n                admin={admin}\n            />\n        )\n    );\n};\n\nexport default Properties;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Properties from \"./Properties\";\nimport LayoutHOC from \"layout/Layout\";\nimport { Layout, PageHeader } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport propertyService from \"services/property.service\";\nimport projectService from \"services/project.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst PropertiesAdmin = (props) => {\n    const { id } = useParams();\n\n    const navigate = useNavigate();\n    const [project, setProject] = useState(null);\n    const [properties, setProperties] = useState(null);\n    useLoginCheck();\n\n    useEffect(() => {\n        propertyService.getProperty(id).then((response) => {\n            setProperties(response.data);\n        });\n\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(`/admin/projects/${id}`)}\n                    title={`Properties of project id: ${id}`}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"1200px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Properties\n                        admin\n                        id={id}\n                        setProject={setProject}\n                        setProperties={setProperties}\n                        project={project}\n                        properties={properties}\n                    />\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default PropertiesAdmin;\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport LayoutHOC from \"layout/Layout\";\nimport {\n    Button,\n    Form,\n    Input,\n    Layout,\n    List,\n    PageHeader,\n    Popconfirm,\n    Select,\n    Space,\n    Typography,\n    Upload,\n} from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport projectService from \"services/project.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\nimport toast from \"react-hot-toast\";\nimport YouTube from \"react-youtube\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport utilsService from \"services/utils.service\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\nimport uploadMedia from \"helpers/uploadMedia\";\n\nconst MediaAdmin = (props) => {\n    const { id } = useParams();\n    const formRef = useRef(null);\n\n    const navigate = useNavigate();\n    const [project, setProject] = useState(null);\n    useLoginCheck();\n\n    useEffect(() => {\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n\n    const onFinish = async (values) => {\n        const response = await projectService.addMedia(id, values);\n        if (response.data) {\n            toast.success(\"Saved\");\n            setProject(response.data);\n            if (formRef.current) formRef.current.resetFields();\n        }\n    };\n    const handleMove = async (mediaId, down) => {\n        const response = await projectService.moveMedia(id, mediaId, down);\n        if (response.data) {\n            toast.success(\"Moved\");\n            setProject(response.data);\n        }\n    };\n    const handleDelete = async (mediaId) => {\n        const response = await projectService.deleteMedia(id, mediaId);\n        if (response.data) {\n            toast.success(\"Deleted\");\n            setProject(response.data);\n        }\n    };\n\n    const customUpload = uploadMedia((values) => {\n        if (formRef.current) {\n            formRef.current.setFieldsValue({\n                ...formRef.current.values,\n                ...values,\n            });\n        }\n    }, formRef?.current?.getFieldValue(\"type\") === \"video\");\n\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(`/admin/projects/${id}`)}\n                    title={`Media of project id: ${id}`}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"1200px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    {project && project.media && (\n                        <div>\n                            <List\n                                itemLayout=\"vertical\"\n                                size=\"large\"\n                                dataSource={project.media}\n                                renderItem={(item, index) => (\n                                    <List.Item\n                                        key={item.id}\n                                        actions={[\n                                            <Button\n                                                size=\"small\"\n                                                key=\"up\"\n                                                onClick={() =>\n                                                    handleMove(item.id, false)\n                                                }\n                                            >\n                                                Move up\n                                            </Button>,\n                                            <Button\n                                                size=\"small\"\n                                                key=\"down\"\n                                                onClick={() =>\n                                                    handleMove(item.id, true)\n                                                }\n                                            >\n                                                Move down\n                                            </Button>,\n                                            <Popconfirm\n                                                title=\"Are you sure to delete this media?\"\n                                                onConfirm={() =>\n                                                    handleDelete(item.id)\n                                                }\n                                                okText=\"Yes\"\n                                                cancelText=\"No\"\n                                                key=\"delete\"\n                                            >\n                                                <Button size=\"small\" danger>\n                                                    Delete\n                                                </Button>\n                                            </Popconfirm>,\n                                        ]}\n                                        extra={\n                                            item.type === \"video\" ? (\n                                                <video\n                                                    id=\"my-player\"\n                                                    class=\"video-js\"\n                                                    controls\n                                                    preload=\"auto\"\n                                                    data-setup=\"{}\"\n                                                >\n                                                    <source\n                                                        src={item.url}\n                                                        type=\"video/mp4\"\n                                                    ></source>\n                                                    <p class=\"vjs-no-js\">\n                                                        To view this video\n                                                        please enable\n                                                        JavaScript, and consider\n                                                        upgrading to a web\n                                                        browser that\n                                                        <a\n                                                            href=\"https://videojs.com/html5-video-support/\"\n                                                            target=\"_blank\"\n                                                            rel=\"noreferrer\"\n                                                        >\n                                                            supports HTML5 video\n                                                        </a>\n                                                    </p>\n                                                </video>\n                                            ) : (\n                                                <img\n                                                    width=\"100%\"\n                                                    style={{\n                                                        maxWidth: \"300px\",\n                                                    }}\n                                                    alt=\"logo\"\n                                                    src={item.url}\n                                                />\n                                            )\n                                        }\n                                    >\n                                        <List.Item.Meta\n                                            description={item.type}\n                                            title={`${index + 1}. ${\n                                                item.name || \"no name\"\n                                            }`}\n                                        />\n                                        {item.url}\n                                    </List.Item>\n                                )}\n                            />\n                            <Form\n                                onFinish={onFinish}\n                                style={{\n                                    padding: \" 16px\",\n                                    maxWidth: \"500px\",\n                                    margin: \"auto\",\n                                    backgroundColor: \"#eee\",\n                                }}\n                                ref={formRef}\n                            >\n                                <Typography.Title level={4}>\n                                    Add new media\n                                </Typography.Title>\n                                <Form.Item\n                                    name=\"type\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Select placeholder=\"Choose type\">\n                                        <Select.Option value=\"photo\">\n                                            Photo\n                                        </Select.Option>\n                                        <Select.Option value=\"plan\">\n                                            Plan\n                                        </Select.Option>\n                                        <Select.Option value=\"video\">\n                                            Video\n                                        </Select.Option>\n                                    </Select>\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"name\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Input placeholder=\"Name\" />\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"url\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Input placeholder=\"Url\" readOnly />\n                                </Form.Item>\n                                <Form.Item name=\"thumbnail\" hidden>\n                                    <Input placeholder=\"Thumbnail\" />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Upload\n                                        accept=\"image/*,video/*\"\n                                        listType=\"picture\"\n                                        maxCount={1}\n                                        customRequest={customUpload}\n                                    >\n                                        <Button icon={<UploadOutlined />}>\n                                            Upload (Max: 1)\n                                        </Button>\n                                    </Upload>\n                                </Form.Item>\n\n                                <Form.Item>\n                                    <Button\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        style={{ width: \"100%\" }}\n                                    >\n                                        Add media\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    )}\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default MediaAdmin;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { Drawer, Layout, Menu, PageHeader } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport { useUser } from \"context/UserContext\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Properties from \"./Properties\";\nimport projectService from \"services/project.service\";\nimport propertyService from \"services/property.service\";\n\nconst PropertiesClient = (props) => {\n    const { id } = useParams();\n    const { logout, isLoggedIn, authData } = useUser();\n    const navigate = useNavigate();\n    const [project, setProject] = useState(null);\n    const [properties, setProperties] = useState(null);\n\n    const [openDrawer, setOpenDrawer] = useState(false);\n\n    useEffect(() => {\n        propertyService.getProperty(id).then((response) => {\n            setProperties(response.data);\n        });\n\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (\n            !isLoggedIn ||\n            (!authData?.super &&\n                id.toString() !== authData?.projectId.toString())\n        ) {\n            logout();\n            navigate(\"/login\");\n            return null;\n        }\n    }, [isLoggedIn, authData?.super, authData?.projectId]);\n\n    return (\n        <LayoutHOC loading={!properties || !project}>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => setOpenDrawer(true)}\n                    backIcon={<MenuOutlined />}\n                    title={\"Appartments\"}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"1200px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Properties\n                        id={id}\n                        setProject={setProject}\n                        setProperties={setProperties}\n                        project={project}\n                        properties={properties}\n                    />\n                </Content>\n            </Layout>\n            <Drawer\n                title=\"Menu\"\n                placement=\"left\"\n                onClose={() => setOpenDrawer(false)}\n                visible={openDrawer}\n            >\n                <Menu\n                    mode=\"inline\"\n                    style={{ width: \"100%\" }}\n                    onClick={({ item, key }) => {\n                        setOpenDrawer(false);\n                        switch (key) {\n                            case \"logout\":\n                                logout();\n                                break;\n                            case \"visit\":\n                                navigate(`/p/${project.url}`);\n                                break;\n                            case \"analytics\":\n                                navigate(`/p-admin/${project.id}/analytics`);\n                                break;\n                            default:\n                                return;\n                        }\n                    }}\n                    activeKey=\"properties\"\n                    selectedKeys={[\"properties\"]}\n                >\n                    <Menu.Item key=\"properties\">Properties</Menu.Item>\n                    <Menu.Item key=\"analytics\">Analytics</Menu.Item>\n                    <Menu.Item key=\"visit\">Visit project</Menu.Item>\n                    <Menu.Item key=\"logout\">Logout</Menu.Item>\n                </Menu>\n            </Drawer>\n        </LayoutHOC>\n    );\n};\n\nexport default PropertiesClient;\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport LayoutHOC from \"layout/Layout\";\nimport { Button, Checkbox, Form, Input, Layout, PageHeader } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport projectService from \"services/project.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\nimport toast from \"react-hot-toast\";\nimport \"video.js/dist/video-js.css\";\nimport { AppUI } from \"components/ProjectView/Components/ProjectUI/AppUI\";\nimport { ChromePicker } from \"react-color\";\nimport CodeMirror from \"@uiw/react-codemirror\";\n\nconst UIAdmin = (props) => {\n  const { id } = useParams();\n  const [uiData, setUiData] = useState({});\n  const [loaded, setLoaded] = useState(false);\n\n  const navigate = useNavigate();\n  const [project, setProject] = useState(null);\n  useLoginCheck();\n\n  useEffect(() => {\n    projectService.getProject(id).then((response) => {\n      setProject(response.data);\n      setLoaded(true);\n    });\n  }, []);\n\n  const onFinish = async () => {\n    const response = await projectService.saveProject(id, { uiData });\n    if (response.data) {\n      toast.success(\"Saved\");\n      setProject(response.data);\n    }\n  };\n\n  useEffect(() => {\n    setUiData({ ...(project?.uiData || {}), ...uiData });\n  }, [project?.uiData]);\n\n  const [hideHidden, setHideHidden] = useState(false);\n  const [hideControls, setHideControls] = useState(false);\n\n  return (\n    <LayoutHOC>\n      <Layout\n        style={{\n          height: \"100%\",\n          display: \"flex\",\n          flex: 1,\n          background: \"white\",\n        }}\n      >\n        <PageHeader\n          onBack={() => navigate(`/admin/projects/${id}`)}\n          title={`UI of project id: ${id}`}\n          style={{\n            boxShadow: \"1px 1px 10px 1px #ccc\",\n            position: \"fixed\",\n            zIndex: 100,\n            width: \"100%\",\n          }}\n        />\n\n        <Content\n          style={{\n            flex: 1,\n            overflow: \"auto\",\n            padding: \"16px\",\n            paddingTop: \"100px\",\n            paddingBottom: \"100px\",\n            maxWidth: \"1200px\",\n            width: \"100%\",\n            margin: \"auto\",\n          }}\n        >\n          {loaded && (\n            <Form\n              labelCol={{ span: 8 }}\n              wrapperCol={{ span: 16 }}\n              onFinish={onFinish}\n              onValuesChange={(values) => {\n                setUiData((prevState) => ({ ...prevState, ...values }));\n              }}\n              initialValues={{\n                background: uiData?.background?.hex,\n                onlyInterior: uiData?.onlyInterior,\n                rooms: uiData?.rooms || \"\",\n              }}\n            >\n              <Form.Item\n                label=\"Only interior\"\n                name=\"onlyInterior\"\n                valuePropName=\"checked\"\n              >\n                <Checkbox />\n              </Form.Item>\n              <Form.Item label=\"Hide hidden elements\">\n                <Checkbox onChange={(e) => setHideHidden(e.target.checked)} />\n              </Form.Item>\n              <Form.Item label=\"Hide controls\">\n                <Checkbox onChange={(e) => setHideControls(e.target.checked)} />\n              </Form.Item>\n              <Form.Item\n                label=\"Background\"\n                name=\"background\"\n                valuePropName=\"color\"\n              >\n                <ChromePicker disableAlpha />\n              </Form.Item>\n              <Form.Item label=\"Text\" name=\"textColor\" valuePropName=\"color\">\n                <ChromePicker disableAlpha />\n              </Form.Item>\n              <Form.Item\n                label=\"Buttons text\"\n                name=\"buttonColor\"\n                valuePropName=\"color\"\n              >\n                <ChromePicker disableAlpha />\n              </Form.Item>\n              <Form.Item\n                label=\"Buttons hover text\"\n                name=\"buttonHoverColor\"\n                valuePropName=\"color\"\n              >\n                <ChromePicker disableAlpha />\n              </Form.Item>\n              <Form.Item label=\"Rooms\" name=\"rooms\">\n                <CodeMirror height=\"200px\" />\n              </Form.Item>\n\n              <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Save\n                </Button>\n              </Form.Item>\n            </Form>\n          )}\n          <AppUI\n            project={project}\n            admin\n            uiData={uiData}\n            setUiData={setUiData}\n            hideHidden={hideHidden}\n            hideControls={hideControls}\n          />\n        </Content>\n      </Layout>\n    </LayoutHOC>\n  );\n};\n\nexport default UIAdmin;\n","import history from \"helpers/history\";\nimport Layout from \"layout/Layout\";\nimport Admins from \"pages/Admins\";\nimport AnalyticClient from \"pages/AnalyticClient\";\nimport Constants from \"pages/Constants\";\nimport CreateProject from \"pages/CreateProject\";\nimport Login from \"pages/Login\";\nimport ProjectDetails from \"pages/ProjectDetails\";\nimport Projects from \"pages/Projects\";\nimport PropertiesAdmin from \"pages/PropertiesAdmin\";\nimport MediaAdmin from \"pages/MediaAdmin\";\nimport PropertiesClient from \"pages/PropertiesClient\";\nimport { lazy, Suspense } from \"react\";\nimport { Toaster } from \"react-hot-toast\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport ProjectA from \"pages/ProjectA\";\nimport UIAdmin from \"pages/UIAdmin\";\n\nconst Home = lazy(() => import(\"pages/Home\"));\nconst Project = lazy(() => import(\"pages/Project\"));\n\nconst ResetPassword = lazy(() => import(\"pages/ResetPassword\"));\n\nfunction App() {\n  return (\n    <BrowserRouter history={history}>\n      <Suspense fallback={<Layout>{/* <Spinner size={100} /> */}</Layout>}>\n        <>\n          <Toaster position=\"top-right\" />\n          <Routes>\n            <Route exact path={\"/\"} element={<Home />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route exact path=\"/admin\" element={<Projects />}></Route>\n            <Route\n              exact\n              path=\"/admin/projects/:id\"\n              element={<ProjectDetails />}\n            ></Route>\n            <Route\n              exact\n              path=\"/admin/projects/create\"\n              element={<CreateProject />}\n            ></Route>\n            <Route\n              exact\n              path=\"/admin/projects/:id/properties\"\n              element={<PropertiesAdmin />}\n            ></Route>\n            <Route\n              exact\n              path=\"/admin/projects/:id/media\"\n              element={<MediaAdmin />}\n            ></Route>\n            <Route\n              exact\n              path=\"/admin/projects/:id/ui\"\n              element={<UIAdmin />}\n            ></Route>\n            <Route exact path=\"/admin/contant\" element={<Constants />}></Route>\n            <Route exact path=\"/admin/admins\" element={<Admins />}></Route>\n\n            <Route path=\"/reset-password\" element={<ResetPassword />}></Route>\n            <Route exact path=\"/p/:id\" element={<Project />}></Route>\n            <Route exact path=\"/pa\" element={<ProjectA />}></Route>\n            <Route\n              exact\n              path=\"/p-admin/:id\"\n              element={<PropertiesClient />}\n            ></Route>\n\n            <Route\n              exact\n              path=\"/p-admin/:id/analytics\"\n              element={<AnalyticClient />}\n            ></Route>\n\n            <Route path=\"*\" element={<h1>404 Error Found</h1>}></Route>\n          </Routes>\n        </>\n      </Suspense>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { UserProvider } from \"context/UserContext\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <HelmetProvider>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </HelmetProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import API from \"api/axios.config\";\r\n\r\nclass ProjectService {\r\n  getProject(id) {\r\n    return API.get(`/projects${id ? \"/\" + id : \"\"}`);\r\n  }\r\n\r\n  getProjectByUrl(id) {\r\n    return API.get(`/projects/url/${id}`);\r\n  }\r\n\r\n  getFeaturedProject() {\r\n    return API.get(`/projects/url/__featured__`);\r\n  }\r\n  saveProject(id, data) {\r\n    return API.put(`/projects/${id}`, data);\r\n  }\r\n  createProject(data) {\r\n    return API.post(`/projects`, data);\r\n  }\r\n  deleteProject(id) {\r\n    return API.delete(`/projects/${id}`);\r\n  }\r\n\r\n  addMedia(id, data) {\r\n    return API.post(`/projects/${id}/media`, data);\r\n  }\r\n  deleteMedia(id, mediaId) {\r\n    return API.delete(`/projects/${id}/media/${mediaId}`);\r\n  }\r\n  moveMedia(id, mediaId, down) {\r\n    return API.put(`/projects/${id}/media/${mediaId}`, null, {\r\n      params: { down: down ? \"true\" : \"false\" },\r\n    });\r\n  }\r\n}\r\n\r\nexport default new ProjectService();\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst Layout = ({ children, title, loading, description, isProject }) => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{title || \"Home\"} | IMMERSIV </title>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={\r\n                        description ||\r\n                        \"IMMERSIV is a digital interactive sales experience for unbuilt environments\"\r\n                    }\r\n                />\r\n            </Helmet>\r\n\r\n            {loading ? null : (\r\n                <div style={{ flex: 1, display: isProject ? \"flex\" : \"block\" }}>\r\n                    {children}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}