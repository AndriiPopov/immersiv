{"version":3,"sources":["api/axios.config.js","services/auth.service.js","helpers/WithAxios.js","context/UserContext.jsx","helpers/history.js","layout/Layout.jsx","components/Spinner.jsx","components/ForgotPasswordModal.jsx","pages/Login.jsx","routes/protected.route.jsx","App.js","reportWebVitals.js","index.js"],"names":["API","axios","create","baseURL","withCredentials","interceptors","request","use","req","token","JSON","parse","localStorage","getItem","headers","error","Promise","reject","AuthService","email","password","post","data","removeItem","password2","username","get","WithAxios","children","useUser","setIsLoggedIn","setUserData","setAuthData","isLoggedIn","useMemo","response","a","originalRequest","config","status","url","resolve","history","push","_retry","res","setItem","stringify","UserContext","createContext","UserProvider","useState","authData","useEffect","Provider","value","setUserState","setUserInfo","logout","authService","context","useContext","undefined","Error","createBrowserHistory","Layout","title","loading","description","isProject","name","content","size","style","flex","display","Spinner","css","className","color","ForgotPasswordModal","isOpen","setIsOpen","msg","setMsg","isSending","setIsSending","useForm","handleSubmit","register","errors","onSubmitReset","forgotPassword","then","toast","success","catch","message","onClick","onClose","onSubmit","valid","type","inputMode","ref","required","pattern","disabled","Login","setError","isLoading","setIsLoading","redirectToReferrer","setRedirectToReferrer","login","setTimeout","to","placeholder","ProtectedRoute","rest","render","location","pathname","state","from","Home","lazy","Project","Admin","ResetPassword","App","fallback","position","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fe821173.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL =\r\n    process.env.NODE_ENV === \"production\"\r\n        ? \"https://immersiv.herokuapp.com/api\"\r\n        : \"http://localhost:5000/api\";\r\n\r\nconst API = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n});\r\n\r\nAPI.interceptors.request.use(\r\n    function (req) {\r\n        const token = JSON.parse(localStorage.getItem(\"token\"));\r\n        if (token) req.headers[\"auth-token\"] = token;\r\n        return req;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default API;\r\n","import API from \"api/axios.config\";\r\n\r\nclass AuthService {\r\n  async login(email, password) {\r\n    const { data } = await API.post(\"/auth/login\", {\r\n      email,\r\n      password,\r\n    });\r\n    return data;\r\n  }\r\n\r\n  async googleLogin(token) {\r\n    const { data } = await API.post(\"/auth/google\", {\r\n      token,\r\n    });\r\n    return data;\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('expiresAt')\r\n  }\r\n\r\n  forgotPassword(email) {\r\n    return API.post(\"/auth/forgot-password\", {\r\n      email,\r\n    });\r\n  }\r\n\r\n  checkToken(token, email) {\r\n    return API.post(\"auth/check-token\", {\r\n      token,\r\n      email,\r\n    });\r\n  }\r\n\r\n  resetPassword(token, email, password, password2) {\r\n    return API.post(\"auth/reset-password\", {\r\n      token,\r\n      email,\r\n      password,\r\n      password2,\r\n    });\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return API.post(\"auth/signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return API.get(\"/users/profile\");\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { useMemo } from \"react\";\nimport API from \"api/axios.config\";\nimport { useUser } from \"context/UserContext\";\nimport history from \"helpers/history\";\n\nconst WithAxios = ({ children }) => {\n  const { setIsLoggedIn, setUserData, setAuthData, isLoggedIn } = useUser();\n\n  useMemo(() => {\n    if (isLoggedIn) {\n      API.interceptors.response.use(\n        (response) => response,\n        async (error) => {\n          const originalRequest = error.config;\n          if (\n            error.response.status === 401 &&\n            originalRequest.url === \"/auth/refresh-token\"\n          ) {\n            return new Promise((resolve, reject) => {\n              setIsLoggedIn(false);\n              setAuthData(null);\n              setUserData(null);\n              history.push(\"/login\");\n              reject(error);\n            });\n          }\n\n          if (error.response.status === 401 && !originalRequest._retry) {\n            try {\n              originalRequest._retry = true;\n              const res = await API.post(\"/auth/refresh-token\");\n              localStorage.setItem(\"token\", JSON.stringify(res.data.token));\n              return API(originalRequest);\n            } catch (error) {\n              localStorage.removeItem(\"token\");\n              setIsLoggedIn(false);\n              setAuthData(null);\n              setUserData(null);\n              history.push(\"/login\");\n            }\n          }\n          return Promise.reject(error);\n        }\n      );\n    }\n  }, [isLoggedIn, setAuthData, setIsLoggedIn, setUserData]);\n\n  return children;\n};\n\nexport default WithAxios;\n","import WithAxios from \"helpers/WithAxios\";\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport authService from \"services/auth.service\";\r\n\r\nconst UserContext = createContext();\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [authData, setAuthData] = useState({\r\n        token: \"\",\r\n    });\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            setIsLoggedIn(true);\r\n            setAuthData(JSON.parse(localStorage.getItem(\"token\")));\r\n        }\r\n    }, []);\r\n\r\n    const setUserInfo = (data) => {\r\n        const { token } = data;\r\n        setIsLoggedIn(true);\r\n\r\n        setAuthData({\r\n            token,\r\n        });\r\n        localStorage.setItem(\"token\", JSON.stringify(token));\r\n    };\r\n\r\n    const logout = () => {\r\n        setAuthData(null);\r\n        setIsLoggedIn(false);\r\n        authService.logout();\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                setUserState: (data) => setUserInfo(data),\r\n                logout,\r\n                isLoggedIn,\r\n                setIsLoggedIn,\r\n                authData,\r\n                setAuthData,\r\n            }}\r\n        >\r\n            <WithAxios>{children}</WithAxios>\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nconst useUser = () => {\r\n    const context = useContext(UserContext);\r\n\r\n    if (context === undefined) {\r\n        throw new Error(\"useUser must be used within UserProvider\");\r\n    }\r\n    return context;\r\n};\r\n\r\nexport { UserProvider, useUser };\r\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import Spinner from \"components/Spinner\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst Layout = ({ children, title, loading, description, isProject }) => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{title || \"Home\"} | IMMERSIV </title>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={\r\n                        description ||\r\n                        \"Ecommerce store built with React, Node, Express and Postgres\"\r\n                    }\r\n                />\r\n\r\n                {/* <meta property=\"og:locale\" content=\"en_US\" />\r\n                <meta property=\"og:type\" content=\"website\" />\r\n                <meta property=\"og:title\" content=\"PERN Store\" />\r\n                <meta\r\n                    property=\"og:description\"\r\n                    content=\"Ecommerce store built with React, Node, Express and Postgres\"\r\n                />\r\n                <meta\r\n                    property=\"og:url\"\r\n                    content=\"https://pern-store.netlify.app/\"\r\n                />\r\n                <meta property=\"og:site_name\" content=\"PERN Store\" />\r\n                <meta\r\n                    property=\"og:image\"\r\n                    content=\"android-chrome-512x512.png\"\r\n                />\r\n                <meta\r\n                    property=\"og:image:secure_url\"\r\n                    content=\"android-chrome-512x512.png\"\r\n                />\r\n                <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n                <meta name=\"twitter:site\" content=\"@_odunsi_\" />\r\n                <meta name=\"twitter:creator\" content=\"@_odunsi_\" />\r\n                <meta\r\n                    name=\"twitter:description\"\r\n                    content=\"Ecommerce store built with React, Node, Express and Postgres\"\r\n                />\r\n                <meta name=\"twitter:title\" content=\"PERN Store\" />\r\n                <meta\r\n                    name=\"twitter:image\"\r\n                    content=\"android-chrome-512x512.png\"\r\n                /> */}\r\n            </Helmet>\r\n\r\n            {loading ? (\r\n                <>\r\n                    <Spinner size={100} loading />\r\n                </>\r\n            ) : (\r\n                <div style={{ flex: 1, display: isProject ? \"flex\" : \"block\" }}>\r\n                    {children}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst Spinner = ({ css, size, loading }) => {\r\n  return (\r\n    <div className=\"absolute transform -translate-x-2/4 -translate-y-2/4 left-2/4 top-2/4\">\r\n      <ClipLoader css={css} size={size} color={\"#123abc\"} loading={loading} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import {\r\n    Backdrop,\r\n    Button,\r\n    HelperText,\r\n    Input,\r\n    Label,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalHeader,\r\n} from \"@windmill/react-ui\";\r\nimport React, { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport authService from \"services/auth.service\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst ForgotPasswordModal = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [msg, setMsg] = useState(\"\");\r\n    const [isSending, setIsSending] = useState(false);\r\n    const { handleSubmit, register, errors } = useForm();\r\n\r\n    const toggleModal = () => {\r\n        setMsg(\"\");\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    const onSubmitReset = (data) => {\r\n        setMsg(\"\");\r\n        setIsSending(true);\r\n        authService\r\n            .forgotPassword(data.email)\r\n            .then((data) => {\r\n                if (data.data.status === \"OK\") {\r\n                    setIsSending(false);\r\n                    toast.success(\"Email has been sent successfully.\");\r\n                    setIsOpen(false);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setIsSending(false);\r\n                setMsg(error.response.data.message);\r\n            });\r\n    };\r\n    return (\r\n        <div>\r\n            <>\r\n                {isOpen && <Backdrop />}\r\n                <span\r\n                    onClick={() => setIsOpen(!isOpen)}\r\n                    className=\"mb-1 text-sm text-purple-700 cursor-pointer\"\r\n                >\r\n                    Forgot password?\r\n                </span>\r\n                <Modal isOpen={isOpen} onClose={toggleModal}>\r\n                    <form onSubmit={handleSubmit(onSubmitReset)}>\r\n                        <ModalHeader>Forgot Password</ModalHeader>\r\n                        <ModalBody>\r\n                            <Label>\r\n                                <span className=\"font-semibold\">Email</span>\r\n                                <Input\r\n                                    name=\"email\"\r\n                                    className=\"mt-1 border py-2 pl-2\"\r\n                                    valid\r\n                                    type=\"email\"\r\n                                    inputMode=\"email\"\r\n                                    ref={register({\r\n                                        required: \"Email required\",\r\n                                        pattern: {\r\n                                            // eslint-disable-next-line no-useless-escape\r\n                                            value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n                                            message: \"Email not valid\",\r\n                                        },\r\n                                    })}\r\n                                />\r\n                            </Label>\r\n                            {errors.email && errors.email.type === \"required\" && (\r\n                                <HelperText className=\"mt-2\" valid={false}>\r\n                                    {errors.email.message}\r\n                                </HelperText>\r\n                            )}\r\n                            {errors.email && errors.email.type === \"pattern\" && (\r\n                                <HelperText className=\"mt-2\" valid={false}>\r\n                                    {errors.email.message}\r\n                                </HelperText>\r\n                            )}\r\n                            {msg && (\r\n                                <HelperText className=\"mt-2\" valid={false}>\r\n                                    {msg}\r\n                                </HelperText>\r\n                            )}\r\n                            <HelperText className=\"mt-2\" valid={false}>\r\n                                Don't forget to check your spam folder!\r\n                            </HelperText>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button\r\n                                onClick={handleSubmit(onSubmitReset)}\r\n                                disabled={isSending}\r\n                                className=\"w-full sm:w-auto\"\r\n                            >\r\n                                {isSending ? (\r\n                                    <PulseLoader size={10} color={\"#0a138b\"} />\r\n                                ) : (\r\n                                    \"Send email\"\r\n                                )}\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </form>\r\n                </Modal>\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPasswordModal;\r\n","import { Button, HelperText, Input, Label } from \"@windmill/react-ui\";\r\nimport ForgotPasswordModal from \"components/ForgotPasswordModal\";\r\nimport { useUser } from \"context/UserContext\";\r\nimport Layout from \"layout/Layout\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport toast from \"react-hot-toast\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport authService from \"services/auth.service\";\r\n\r\nconst Login = () => {\r\n    const { isLoggedIn, setUserState } = useUser();\r\n    const [error, setError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = async (data) => {\r\n        const { email, password } = data;\r\n\r\n        try {\r\n            setError(\"\");\r\n            setIsLoading(true);\r\n            const data = await authService.login(email, password);\r\n            toast.success(\"Login successful 🔓\");\r\n\r\n            setTimeout(() => {\r\n                setUserState(data);\r\n                setRedirectToReferrer(true);\r\n                setIsLoading(false);\r\n            }, 1500);\r\n        } catch (error) {\r\n            setIsLoading(false);\r\n            setError(error.response?.data.message);\r\n        }\r\n    };\r\n\r\n    if (redirectToReferrer) {\r\n        return <Redirect to=\"/admin\" />;\r\n    }\r\n    if (isLoggedIn) {\r\n        return <Redirect to=\"/admin\" />;\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Login\">\r\n            <div className=\"flex items-center justify-center m-auto mt-20\">\r\n                <form\r\n                    className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 flex flex-col w-full md:w-1/2\"\r\n                    onSubmit={handleSubmit(onSubmit)}\r\n                >\r\n                    <h1 className=\"text-center text-4xl my-4\">\r\n                        Manage projects\r\n                    </h1>\r\n                    <div className=\"\">\r\n                        <Label className=\"block text-grey-darker text-sm font-bold mb-2\">\r\n                            <span>Email</span>\r\n                        </Label>\r\n                        <Input\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            ref={register({\r\n                                required: true,\r\n                                // eslint-disable-next-line no-useless-escape\r\n                                pattern: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n                            })}\r\n                            placeholder=\"Enter a valid email\"\r\n                        />\r\n                    </div>\r\n                    {errors.email && errors.email.type === \"required\" && (\r\n                        <HelperText className=\"mt-1 italic\" valid={false}>\r\n                            Email required\r\n                        </HelperText>\r\n                    )}\r\n                    {errors.email && errors.email.type === \"pattern\" && (\r\n                        <HelperText className=\"mt-1 italic\" valid={false}>\r\n                            Invalid email\r\n                        </HelperText>\r\n                    )}\r\n                    <div className=\"mt-4\">\r\n                        <Label className=\"block text-grey-darker text-sm font-bold mb-2\">\r\n                            <span>Password</span>\r\n                        </Label>\r\n                        <input\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            ref={register({ required: true })}\r\n                        />\r\n                    </div>\r\n                    {errors.password && errors.password.type === \"required\" && (\r\n                        <HelperText className=\"mt-1 italic\" valid={false}>\r\n                            Password required\r\n                        </HelperText>\r\n                    )}\r\n\r\n                    {error && (\r\n                        <HelperText className=\"mt-1 italic\" valid={false}>\r\n                            {error}\r\n                        </HelperText>\r\n                    )}\r\n                    <div className=\"mt-4\">\r\n                        <ForgotPasswordModal />\r\n                    </div>\r\n                    <Button type=\"submit\" disabled={isLoading}>\r\n                        {isLoading ? (\r\n                            <PulseLoader\r\n                                color={\"#0a138b\"}\r\n                                size={10}\r\n                                loading={isLoading}\r\n                            />\r\n                        ) : (\r\n                            \"Login\"\r\n                        )}\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import { useUser } from \"context/UserContext\";\r\nimport React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport const ProtectedRoute = ({ children, ...rest }) => {\r\n  const { isLoggedIn} = useUser()\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) => {\r\n        return isLoggedIn ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import Spinner from \"components/Spinner\";\nimport history from \"helpers/history\";\nimport Layout from \"layout/Layout\";\nimport Login from \"pages/Login\";\nimport { lazy, Suspense } from \"react\";\nimport { Toaster } from \"react-hot-toast\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport { ProtectedRoute } from \"routes/protected.route\";\n\nconst Home = lazy(() => import(\"pages/Home\"));\nconst Project = lazy(() => import(\"pages/Project\"));\nconst Admin = lazy(() => import(\"pages/Admin\"));\nconst ResetPassword = lazy(() => import(\"pages/ResetPassword\"));\n// const Preview = lazy(() => import(\"pages/Preview\"));\n\nfunction App() {\n    return (\n        <Router history={history}>\n            <Suspense\n                fallback={\n                    <Layout>\n                        <Spinner size={100} />\n                    </Layout>\n                }\n            >\n                <>\n                    <Toaster position=\"top-right\" />\n                    <Switch>\n                        <Route exact path={\"/\"}>\n                            <Home />\n                        </Route>\n                        <Route path=\"/login\">\n                            <Login />\n                        </Route>\n                        <ProtectedRoute exact path=\"/admin\">\n                            <Admin />\n                        </ProtectedRoute>\n                        <Route path=\"/reset-password\">\n                            <ResetPassword />\n                        </Route>\n                        <Route exact path=\"/:id/\">\n                            <Project />\n                        </Route>\n                        {/* \n                        \n                        <Route exact path=\"/preview/:id/\">\n                            <Preview />\n                        </Route> */}\n                        <Route path=\"*\">\n                            <h1>404 Error Found</h1>\n                        </Route>\n                    </Switch>\n                </>\n            </Suspense>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { UserProvider } from \"context/UserContext\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./tailwind.output.css\";\n\nReactDOM.render(\n    <>\n        <HelmetProvider>\n            <UserProvider>\n                <App />\n            </UserProvider>\n        </HelmetProvider>\n    </>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}