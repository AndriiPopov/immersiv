{"version":3,"sources":["services/auth.service.js","services/constant.service.js","components/ProjectView/Components/ProjectUI/AppUI/descriptors.js","components/ProjectView/Components/ProjectUI/Bottom/ApartmentContols/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/ButtonUI/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/FilterControls/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/Gallery/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/LocationControls/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/SunControls/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/UIButtons/index.jsx","components/ProjectView/Components/ProjectUI/AppUI/index.jsx","pages/ProjectA.jsx","api/axios.config.js","helpers/history.js","helpers/WithAxios.js","context/UserContext.jsx","services/admin.service.js","hooks/useLoginCheck.js","pages/Admins.jsx","services/ga.service.js","components/DashboardItem/DataItems/ChartItem/ChartItem.js","pages/AnalyticClient.jsx","pages/Constants.jsx","services/utils.service.js","helpers/uploadMedia.js","components/ProjectFormFields.jsx","pages/CreateProject.jsx","components/ForgotPasswordModal.jsx","pages/Login.jsx","pages/ProjectDetails.jsx","pages/Projects.jsx","services/property.service.js","components/ProjectView/Components/PropertiesTable.jsx","pages/Properties.jsx","pages/PropertiesAdmin.jsx","pages/MediaAdmin.jsx","pages/PropertiesClient.jsx","App.js","reportWebVitals.js","index.js","layout/Layout.jsx","services/project.service.js"],"names":["AuthService","email","password","a","API","post","data","token","localStorage","removeItem","password2","username","get","ConstantService","put","getTimeDescriptor","value","Change_Attribute_Event","Attribute_Key","Attribute_Value","Container","styled","div","open","Inner","Inner2","Top","Details","NameContainer","Name","Price","Availability","InfoContainer","Frontage","Depth","Stats","StatContainer","StatText","Bottom","ButtonContainer","ButtonText","Stat","icon","children","PlayCircleOutlined","style","fontSize","Button","onClick","ApartmentControls","props","isVisible","activeUI","includes","emitUIInteraction","EyeOutlined","TDTour","VTour","FloorPlan","isActive","ButtonUI","title","onUnclick","visible","filter","v","length","tailLayout","wrapperCol","offset","span","SelectMulti","options","propValue","onChange","CheckableTag","checked","color","map","label","i","FilterControls","Form","useForm","form","getPopupContainer","triggerNode","parentNode","layout","name","type","min","max","step","defaultValue","Item","margin","range","draggableTrack","tooltipVisible","tooltipPlacement","htmlType","resetFields","setActiveUI","Gallery","project","useState","tab","setTab","slide","setSlide","dimensionsW","setDimensionsW","ref","useRef","useEffect","getContainerSize","current","width","clientWidth","height","clientHeight","window","addEventListener","media","images","index","original","url","thumbnail","description","originalClass","thumbnailClass","renderItem","k","controls","preload","autoPlay","muted","src","class","href","target","rel","renderThumbInner","position","id","left","right","top","bottom","handleTabClick","newTab","className","undefined","items","showBullets","showFullscreenButton","showPlayButton","thumbnailPosition","onSlide","startIndex","LocationControls","level","table","TR","tr","TD0","td","TD1","TD2","SunControls","tooltip","formatter","UIButtons","HomeOutlined","PictureOutlined","PushpinOutlined","Nearby","SearchOutlined","Materials","Teleport","ShopOutlined","Location","ClockCircleOutlined","ButtonsContainer","AppUI","propsC","zIndex","QuestionCircleOutlined","ProjectA","setVideoInitialized","sizeContainerRef","containerRef","videoRef","webrtcClient","setWebrtcClient","webrtcClientInit","responseCallback","message","console","log","videoInitialized","args","address","arcwareAddress","packageId","arcwarePackageId","settings","autoplay","video","audio","sizeContainer","container","playOverlay","loader","applicationResponse","videoInitializeCallback","WebRTCClient","flex","newUI","axios","create","baseURL","withCredentials","interceptors","request","use","req","getItem","headers","error","Promise","reject","createBrowserHistory","WithAxios","useUser","isInitiated","logout","response","originalRequest","config","status","resolve","history","push","_retry","res","setItem","UserContext","createContext","UserProvider","authData","setAuthData","isLoggedIn","setIsLoggedIn","setIsInitiated","getTokenData","decoded","jwt_decode","Provider","setUserState","setUserInfo","authService","context","useContext","Error","delete","useLoginCheck","navigate","useNavigate","super","projectId","Admins","formRef","admins","setAdmins","editModalOpen","setEditModalOpen","adminService","getAdmin","then","onFinish","values","createAdmin","toast","success","deleteAdmin","Layout","loading","display","background","onBack","boxShadow","overflow","padding","paddingTop","maxWidth","onCancel","footer","rules","required","placeholder","itemLayout","dataSource","sort","b","admin","actions","overlay","onConfirm","okText","cancelText","danger","trigger","MoreOutlined","borderBottom","paddingLeft","Meta","locked","metrics","dimensions","period","start","finish","ChartItem","column","seconds","isDate","dataRefined","humanizeString","columnHeaders","replace","rows","moment","format","parseInt","chartType","legend","chartArea","allowHtml","AnalyticClient","useParams","setProject","dateData","setDateData","cityData","setCityData","deviceData","setDeviceData","sourceData","setSourceData","subtract","setPeriod","toString","projectService","getProject","getMetricData","gaService","getGA","catch","err","RangePicker","size","m","allowClear","textAlign","flexDirection","flexWrap","alignItems","justifyContent","xKey","valKey","Constants","constants","setConstants","constantService","getConstant","setFieldsValue","saveConstant","initialValues","isVideo","isLogo","params","uploadMedia","cb","action","file","filename","onError","onProgress","onSuccess","utilsService","signUrl","signedRequest","s3res","Logo","customUploadClientLogo","image","setImage","setTimeout","maxHeight","LoadingOutlined","marginTop","customRequest","showUploadList","maxCount","getValueFromEvent","ProjectFormFields","extra","valuePropName","hidden","CreateProject","createProject","labelCol","ForgotPasswordModal","isOpen","setIsOpen","forgotPassword","prefix","UserOutlined","Login","isLoading","setIsLoading","redirectToReferrer","setRedirectToReferrer","login","Title","marginBottom","Password","LockOutlined","ProjectDetails","saveProject","projectAddress","galleryAddress","propertiesAddress","projectName","useWatch","clientLogo","clientLogoMaxWidth","clientLogoMaxHeight","projectLogo","projectLogoMaxWidth","projectLogoMaxHeight","Paragraph","copy","val","getFieldsValue","alt","Projects","projects","setProjects","openDrawer","setOpenDrawer","deleteProject","setFeatured","featured","backIcon","MenuOutlined","Divider","avatar","StarFilled","published","EyeFilled","EyeInvisibleFilled","placement","onClose","mode","item","key","activeKey","selectedKeys","ids","Option","Select","transferOrientationToObject","Orientation","o","indexOf","N","S","E","W","transferOrientationToString","EditableCell","editing","dataIndex","inputType","property","restProps","inputNode","PropertiesTable","properties","setProperties","selectedProperties","setSelectedProperties","editingKey","setEditingKey","isEditing","cancel","save","validateFields","propertyService","saveProperty","deleteProperty","mergedColumns","sorter","sortDirections","editable","onFilter","render","_","str","charAt","toUpperCase","slice","Surface","BathroomsCount","toLowerCase","Link","marginRight","disabled","edit","col","onCell","onAddProperty","createProperty","newProperties","newProperty","document","querySelector","scrollTop","component","components","body","cell","bordered","d","columns","rowClassName","rowSelection","selectedRows","pagination","tableLayout","scroll","y","Properties","getProperty","PropertiesAdmin","MediaAdmin","addMedia","handleMove","mediaId","down","moveMedia","handleDelete","deleteMedia","customUpload","getFieldValue","backgroundColor","readOnly","accept","listType","UploadOutlined","PropertiesClient","Home","lazy","Project","ResetPassword","App","fallback","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","isProject","content","ProjectService"],"mappings":"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","file":"static/js/main.f1ee173e.chunk.js","sourcesContent":["import API from \"api/axios.config\";\r\n\r\nclass AuthService {\r\n    async login(email, password) {\r\n        const { data } = await API.post(\"/auth/login\", {\r\n            email,\r\n            password,\r\n        });\r\n        return data;\r\n    }\r\n\r\n    async googleLogin(token) {\r\n        const { data } = await API.post(\"/auth/google\", {\r\n            token,\r\n        });\r\n        return data;\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"expiresAt\");\r\n    }\r\n\r\n    forgotPassword(email) {\r\n        return API.post(\"/auth/forgot-password\", {\r\n            email,\r\n        });\r\n    }\r\n\r\n    checkToken(token, email) {\r\n        return API.post(\"auth/check-token\", {\r\n            token,\r\n            email,\r\n        });\r\n    }\r\n\r\n    resetPassword(token, email, password, password2) {\r\n        return API.post(\"auth/reset-password\", {\r\n            token,\r\n            email,\r\n            password,\r\n            password2,\r\n        });\r\n    }\r\n\r\n    register(username, email, password) {\r\n        return API.post(\"auth/signup\", {\r\n            username,\r\n            email,\r\n            password,\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return API.get(\"/users/profile\");\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n","import API from \"api/axios.config\";\r\n\r\nclass ConstantService {\r\n    getConstant() {\r\n        return API.get(`/constant`);\r\n    }\r\n    saveConstant(data) {\r\n        return API.put(`/constant`, data);\r\n    }\r\n}\r\n\r\nexport default new ConstantService();\r\n","const getTimeDescriptor = (value) => ({\n  Change_Attribute_Event: true,\n  Attribute_Key: \"Time\",\n  Attribute_Value: value,\n});\n\nconst getHomeDescriptor = () => ({\n  Change_Attribute_Event: true,\n  Attribute_Key: \"Home\",\n  Attribute_Value: true,\n});\n\nconst getNearbyDescriptor = () => ({\n  Change_Attribute_Event: true,\n  Attribute_Key: \"Nearby\",\n  Attribute_Value: true,\n  Nearby: true,\n});\n\nconst getMaterialsDescriptor = () => ({\n  Change_Attribute_Event: true,\n  Attribute_Key: \"Materials\",\n  Attribute_Value: true,\n  Materials: true,\n});\n\nconst getTeleportDescriptor = () => ({\n  Change_Attribute_Event: true,\n  Attribute_Key: \"Teleport\",\n  Attribute_Value: true,\n  Teleport: true,\n});\n\nconst getLocationDescriptor = () => ({\n  Change_Attribute_Event: true,\n  Attribute_Key: \"Location\",\n  Attribute_Value: true,\n  Location: true,\n});\n\nconst getTDTourDescriptor = () => ({\n  Change_Attribute_Event: true,\n  Attribute_Key: \"TDTour\",\n  Attribute_Value: true,\n  TDTour: true,\n});\n\nconst getVTourDescriptor = () => ({\n  Change_Attribute_Event: true,\n  Attribute_Key: \"VTour\",\n  Attribute_Value: true,\n  VTour: true,\n});\n\nconst getFloorPlanDescriptor = () => ({\n  Change_Attribute_Event: true,\n  Attribute_Key: \"FloorPlan\",\n  Attribute_Value: true,\n  FloorPlan: true,\n});\n\nexport {\n  getTimeDescriptor,\n  getHomeDescriptor,\n  getLocationDescriptor,\n  getMaterialsDescriptor,\n  getNearbyDescriptor,\n  getTeleportDescriptor,\n  getFloorPlanDescriptor,\n  getTDTourDescriptor,\n  getVTourDescriptor,\n};\n","import { EyeOutlined, PlayCircleOutlined } from \"@ant-design/icons\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  getFloorPlanDescriptor,\n  getHomeDescriptor,\n  getTDTourDescriptor,\n  getVTourDescriptor,\n} from \"../../AppUI/descriptors\";\n\nconst Container = styled.div`\n  bottom: 60px;\n  left: 0px;\n  right: 0px;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow-x: auto;\n  white-space: nowrap;\n  justify-content: end;\n  align-items: center;\n`;\n\nconst Inner2 = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow-x: auto;\n  white-space: nowrap;\n  justify-content: end;\n  width: 100%;\n  max-width: 600px;\n`;\n\nconst Top = styled.div`\n  background-color: black;\n  border-radius: 5px;\n  color: white !important;\n  padding: 15px 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Details = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\n\nconst NameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 200px;\n`;\n\nconst Name = styled.div`\n  font-size: 40px;\n`;\n\nconst Price = styled.div`\n  font-size: 26px;\n`;\n\nconst Availability = styled.div`\n  font-size: 16px;\n`;\n\nconst InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Frontage = styled.div`\n  line-height: 40px;\n`;\n\nconst Depth = styled.div``;\n\nconst Stats = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  margin-top: 20px;\n`;\n\nconst StatContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0 10px;\n`;\n\nconst StatText = styled.div`\n  margin-left: 10px;\n`;\n\nconst Bottom = styled.div`\n  background-color: black;\n  border-radius: 5px;\n  color: white;\n  padding: 15px 20px;\n  display: flex;\n  margin-top: 5px;\n  justify-content: center;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 5px;\n  margin: 0 10px;\n`;\n\nconst ButtonText = styled.div`\n  margin-top: 5px;\n`;\n\nconst Stat = ({ icon, children }) => (\n  <StatContainer>\n    <PlayCircleOutlined style={{ fontSize: \"30px\" }} />\n    <StatText>{children}</StatText>\n  </StatContainer>\n);\n\nconst Button = ({ icon, children, onClick }) => (\n  <ButtonContainer onClick={onClick}>\n    <PlayCircleOutlined style={{ fontSize: \"30px\" }} />\n    <ButtonText>{children}</ButtonText>\n  </ButtonContainer>\n);\n\nconst ApartmentControls = (props) => {\n  const isVisible = props.activeUI?.includes(\"apartment\");\n  const { emitUIInteraction } = props;\n  return (\n    <Container open={isVisible}>\n      <Inner>\n        <Inner2>\n          <Top>\n            <Details>\n              <NameContainer>\n                <Name>Name</Name>\n                <Price>Price</Price>\n                <Availability>Available</Availability>\n              </NameContainer>\n              <InfoContainer>\n                <Frontage>Lot frontage: 10m2</Frontage>\n                <Depth>Lot depth: 10m2</Depth>\n              </InfoContainer>\n            </Details>\n            <Stats>\n              <Stat icon={<EyeOutlined />}>4 bed</Stat>\n              <Stat icon={<EyeOutlined />}>2 bath</Stat>\n              <Stat icon={<EyeOutlined />}>180 m2</Stat>\n            </Stats>\n          </Top>\n          <Bottom>\n            <Button\n              icon={<EyeOutlined />}\n              onClick={() => emitUIInteraction(getTDTourDescriptor())}\n            >\n              3D Tour\n            </Button>\n            <Button\n              icon={<EyeOutlined />}\n              onClick={() => emitUIInteraction(getVTourDescriptor())}\n            >\n              Virtual tour\n            </Button>\n            <Button\n              icon={<EyeOutlined />}\n              onClick={() => emitUIInteraction(getFloorPlanDescriptor())}\n            >\n              Floor plan\n            </Button>\n          </Bottom>\n        </Inner2>\n      </Inner>\n    </Container>\n  );\n};\n\nexport { ApartmentControls };\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Button = styled.div`\n  color: ${(props) => (props.isActive ? \"lightblue\" : \"white\")};\n  cursor: pointer;\n  padding: 0px 5px;\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  user-select: none;\n  > p {\n    font-size: 13px;\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n\nconst ButtonUI = ({\n  activeUI,\n  value,\n  title,\n  icon,\n  onUnclick,\n  onClick,\n  visible,\n}) => {\n  const isActive = activeUI?.includes(value || title);\n  return activeUI?.filter((v) => visible.includes(v)).length ? (\n    <Button onClick={isActive ? onUnclick : onClick} isActive={isActive}>\n      {icon}\n      {title && <p>{title}</p>}\n    </Button>\n  ) : null;\n};\n\nexport { ButtonUI };\n","import { Button, ConfigProvider, Form, Slider, Tag } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  top: 20px;\n  bottom: 60px;\n  left: 0;\n  right: 0;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  background-color: rgba(0, 0, 0, 0.8);\n  width: 100%;\n  padding: 0px 30px 20px;\n  max-height: 100%;\n  max-width: 600px;\n  overflow: auto;\n`;\n\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst SelectMulti = ({ options, value: propValue, onChange }) => {\n  return (\n    <>\n      <Tag.CheckableTag\n        onClick={() => onChange([])}\n        checked={!propValue?.length}\n        style={{ color: \"white\" }}\n      >\n        All\n      </Tag.CheckableTag>\n      {options.map(({ value, label }) => (\n        <Tag.CheckableTag\n          key={value}\n          onClick={() => {\n            if (propValue?.includes(value))\n              onChange(propValue.filter((i) => i !== value));\n            else onChange([...(propValue || []), value]);\n          }}\n          checked={propValue?.includes(value)}\n          style={{ color: \"white\" }}\n        >\n          {label || value}\n        </Tag.CheckableTag>\n      ))}\n    </>\n  );\n};\nconst FilterControls = (props) => {\n  const isVisible = props.activeUI?.includes(\"filter\");\n  const [form] = Form.useForm();\n\n  const items = [\n    {\n      name: \"budget\",\n      label: \"Budget\",\n      type: \"range\",\n      min: 0,\n      max: 100,\n      step: 1,\n    },\n    {\n      name: \"size\",\n      label: \"Size\",\n      type: \"range\",\n      min: 0,\n      max: 100,\n      step: 1,\n    },\n    {\n      name: \"bedrooms\",\n      label: \"Bedrooms\",\n      type: \"range\",\n      min: 0,\n      max: 5,\n      step: 0.5,\n    },\n    {\n      name: \"bathrooms\",\n      label: \"Bathrooms\",\n      type: \"range\",\n      min: 0,\n      max: 3,\n      step: 0.5,\n    },\n    {\n      name: \"availability\",\n      label: \"Availability\",\n      type: \"selectMulti\",\n      options: [\n        { value: \"Available\" },\n        { value: \"Reserved\" },\n        { value: \"Sold\" },\n      ],\n    },\n    {\n      name: \"orientation\",\n      label: \"Orientation\",\n      type: \"selectMulti\",\n      options: [\n        { value: \"N\" },\n        { value: \"NE\" },\n        { value: \"E\" },\n        { value: \"SE\" },\n        { value: \"S\" },\n        { value: \"SW\" },\n        { value: \"W\" },\n        { value: \"NW\" },\n      ],\n    },\n    {\n      name: \"depth\",\n      label: \"Depth\",\n      type: \"range\",\n      min: 0,\n      max: 100,\n      step: 0.5,\n    },\n    {\n      name: \"frontage\",\n      label: \"Frontage\",\n      type: \"range\",\n      min: 0,\n      max: 100,\n      step: 0.5,\n    },\n  ];\n\n  return (\n    <Container open={isVisible}>\n      <Inner>\n        <ConfigProvider\n          getPopupContainer={(triggerNode) => triggerNode.parentNode}\n        >\n          <Form layout=\"vertical\" form={form}>\n            {items.map(\n              ({\n                name,\n                label,\n                type,\n                defaultValue,\n                min,\n                max,\n                step,\n                options,\n              }) => {\n                return (\n                  <Form.Item\n                    name={name}\n                    label={<label style={{ color: \"white\" }}>{label}</label>}\n                    style={{ margin: \"50px 0\" }}\n                  >\n                    {!isVisible ? null : type === \"range\" ? (\n                      <Slider\n                        defaultValue={defaultValue || [min, max]}\n                        min={min}\n                        max={max}\n                        step={step}\n                        range={{ draggableTrack: true }}\n                        tooltipVisible={true}\n                        tooltipPlacement=\"bottom\"\n                      />\n                    ) : (\n                      <SelectMulti\n                        options={options}\n                        defaultValue={defaultValue}\n                      />\n                    )}\n                  </Form.Item>\n                );\n              }\n            )}\n            {isVisible && (\n              <Form.Item {...tailLayout}>\n                <Button\n                  htmlType=\"button\"\n                  style={{ margin: \"0 8px\" }}\n                  type=\"link\"\n                  onClick={() => form.resetFields()}\n                >\n                  Reset\n                </Button>\n                <Button type=\"primary\" onClick={() => props.setActiveUI([])}>\n                  Apply\n                </Button>\n              </Form.Item>\n            )}\n          </Form>\n        </ConfigProvider>\n      </Inner>\n    </Container>\n  );\n};\n\nexport { FilterControls };\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport ImageGallery from \"react-image-gallery\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  top: 20px;\n  bottom: 60px;\n  left: 20px;\n  right: 20px;\n  padding: 10px;\n  position: absolute;\n  background-color: rgba(0, 0, 0, 0.8);\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst Gallery = ({ project, activeUI }) => {\n  const [tab, setTab] = useState(\"\");\n  const [slide, setSlide] = useState(0);\n  const [dimensionsW, setDimensionsW] = useState({});\n  const ref = useRef();\n\n  useEffect(() => {\n    setSlide(0);\n  }, [tab]);\n\n  const getContainerSize = () => {\n    if (ref.current)\n      setDimensionsW({\n        width: ref.current.clientWidth,\n        height: ref.current.clientHeight,\n      });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", getContainerSize);\n    getContainerSize();\n  }, []);\n  if (!project) return null;\n  const { media } = project;\n\n  const images =\n    media\n      ?.filter((i) => (tab ? tab === i.type : true))\n      .map((i, index) => {\n        if (i.type !== \"video\") {\n          return {\n            ...i,\n            original: i.url,\n            thumbnail: i.thumbnail,\n            description: i.name,\n            originalClass: \"featured-slide\",\n            thumbnailClass: \"featured-thumb\",\n          };\n        } else {\n          return {\n            ...i,\n            index,\n            thumbnail: i.url,\n            renderItem: (k) => {\n              return slide === k.index ? (\n                <video\n                  // id=\"my-player\"\n                  // class=\"video-js\"\n                  controls\n                  preload=\"auto\"\n                  autoPlay\n                  muted\n                  // data-setup=\"{}\"\n                  style={{ width: \"100%\", height: \"100%\" }}\n                >\n                  <source src={i.url} type=\"video/mp4\"></source>\n                  <p class=\"vjs-no-js\">\n                    To view this video please enable JavaScript, and consider\n                    upgrading to a web browser that\n                    <a\n                      href=\"https://videojs.com/html5-video-support/\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      supports HTML5 video\n                    </a>\n                  </p>\n                </video>\n              ) : null;\n            },\n            renderThumbInner: (k) => (\n              <div style={{ position: \"relative\" }}>\n                <video\n                  id=\"my-player\"\n                  class=\"video-js\"\n                  controls\n                  data-setup=\"{}\"\n                  style={{ width: \"100%\", height: \"100%\" }}\n                >\n                  <source src={i.url} type=\"video/mp4\"></source>\n                  <p class=\"vjs-no-js\">\n                    To view this video please enable JavaScript, and consider\n                    upgrading to a web browser that\n                    <a\n                      href=\"https://videojs.com/html5-video-support/\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      supports HTML5 video\n                    </a>\n                  </p>\n                </video>\n                <div\n                  style={{\n                    position: \"absolute\",\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                  }}\n                />\n              </div>\n            ),\n          };\n        }\n      })\n      .filter((i) => i) || [];\n\n  const handleTabClick = (newTab) => {\n    setTab(newTab === tab ? \"\" : newTab);\n  };\n\n  return (\n    <Container ref={ref} open={activeUI.includes(\"gallery\")}>\n      <Inner>\n        <div className=\"buttons\">\n          <div\n            onClick={() => handleTabClick(\"photo\")}\n            className={tab === \"photo\" ? \"active\" : undefined}\n          >\n            <img src=\"/gallery/photo.png\" />\n          </div>\n          <div\n            onClick={() => handleTabClick(\"plan\")}\n            className={tab === \"plan\" ? \"active\" : undefined}\n          >\n            <img src=\"/gallery/plan.png\" />\n          </div>\n          <div\n            onClick={() => handleTabClick(\"video\")}\n            className={tab === \"video\" ? \"active\" : undefined}\n          >\n            <img src=\"/gallery/video.png\" />\n          </div>\n        </div>\n        <ImageGallery\n          items={images}\n          showBullets={false}\n          showFullscreenButton={false}\n          showPlayButton={false}\n          // showNav={false}\n          thumbnailPosition={\n            dimensionsW.height > dimensionsW.width ? \"bottom\" : \"right\"\n          }\n          onSlide={setSlide}\n          startIndex={slide}\n        />\n      </Inner>\n    </Container>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  bottom: 60px;\n  left: 0px;\n  right: 0px;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  flex: 1;\n  overflow-x: auto;\n`;\n\nconst Item = styled.div`\n  background-color: rgba(0, 0, 0, 0.8);\n  border-radius: 5px;\n  color: white;\n  margin: 0 6px;\n  padding: 5px 10px;\n  white-space: nowrap;\n`;\n\nconst LocationControls = (props) => {\n  const isVisible = props.activeUI?.includes(\"location\");\n  return (\n    <Container open={isVisible}>\n      <Inner>\n        {[\"Level 1\", \"Level 2\", \"Level 3\", \"Level 4\", \"Level 5\"].map(\n          (level) => (\n            <Item>{level}</Item>\n          )\n        )}\n      </Inner>\n    </Container>\n  );\n};\n\nexport { LocationControls };\n","import { Slider } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { getTimeDescriptor } from \"../../AppUI/descriptors\";\n\nconst Container = styled.div`\n  top: 20px;\n  bottom: 60px;\n  left: 0;\n  right: 0;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.table`\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0 3px;\n  color: white;\n  max-width: 300px;\n`;\n\nconst TR = styled.tr`\n  background-color: rgba(0, 0, 0, 0.8);\n  margin: 5px 0;\n  border-radius: 5px;\n  td {\n    padding: 5px;\n  }\n  td:first-child {\n    border-top-left-radius: 5px;\n  }\n  td:last-child {\n    border-top-right-radius: 5px;\n  }\n\n  td:first-child {\n    border-bottom-left-radius: 5px;\n  }\n  td:last-child {\n    border-bottom-right-radius: 5px;\n  }\n`;\n\nconst TD0 = styled.td`\n  text-align: right;\n`;\n\nconst TD1 = styled.td`\n  width: 100%;\n`;\n\nconst TD2 = styled.td`\n  text-align: left;\n`;\n\nconst SunControls = ({ emitUIInteraction, activeUI }) => {\n  const isVisible = activeUI?.includes(\"sun\");\n  return (\n    <Container open={isVisible}>\n      <Inner>\n        <tbody>\n          <TR>\n            <TD0>00:00</TD0>\n            <TD1>\n              <Slider\n                onChange={(v) => {\n                  emitUIInteraction(getTimeDescriptor(v));\n                }}\n                min={0}\n                max={23}\n                step={1}\n                tooltip={{ formatter: (v) => `${v}:00` }}\n              />\n            </TD1>\n            <TD2>23:00</TD2>\n          </TR>\n          <TR>\n            <TD0>S</TD0>\n            <TD1>\n              <Slider tooltip={{ open: false }} />\n            </TD1>\n            <TD2>N</TD2>\n          </TR>\n        </tbody>\n      </Inner>\n    </Container>\n  );\n};\n\nexport { SunControls };\n","import React from \"react\";\nimport { ButtonUI } from \"../ButtonUI\";\nimport {\n  ClockCircleOutlined,\n  HomeOutlined,\n  PictureOutlined,\n  PushpinOutlined,\n  SearchOutlined,\n  ShopOutlined,\n} from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport {\n  getHomeDescriptor,\n  getLocationDescriptor,\n  getMaterialsDescriptor,\n  getNearbyDescriptor,\n  getTeleportDescriptor,\n} from \"../../AppUI/descriptors\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  height: 100%;\n  position: relative;\n  > * {\n    margin: 0px 16px;\n  }\n`;\n\nconst UIButtons = (props) => {\n  const { activeUI, setActiveUI, emitUIInteraction } = props;\n\n  return (\n    <>\n      <Container>\n        <ButtonUI\n          {...props}\n          title=\"home\"\n          icon={<HomeOutlined />}\n          onClick={() => {\n            setActiveUI([\"exterior\"]);\n            emitUIInteraction(getHomeDescriptor());\n          }}\n          visible={[\"exterior\"]}\n        />\n        <ButtonUI\n          {...props}\n          title=\"gallery\"\n          icon={<PictureOutlined />}\n          onClick={() => setActiveUI([activeUI[0], \"gallery\"])}\n          onUnclick={() => setActiveUI([activeUI[0]])}\n          visible={[\"exterior\", \"interior\"]}\n        />\n        <ButtonUI\n          {...props}\n          title=\"nearby\"\n          icon={<PushpinOutlined />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"nearby\"]);\n            emitUIInteraction(getNearbyDescriptor());\n          }}\n          onUnclick={() => setActiveUI([activeUI[0]])}\n          visible={[\"exterior\"]}\n        />\n        <ButtonUI\n          {...props}\n          title=\"filter\"\n          icon={<SearchOutlined />}\n          onClick={() => setActiveUI([activeUI[0], \"filter\"])}\n          onUnclick={() => setActiveUI([activeUI[0]])}\n          visible={[\"exterior\"]}\n        />\n        <ButtonUI\n          {...props}\n          title=\"materials\"\n          icon={<SearchOutlined />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"materials\"]);\n            emitUIInteraction(getMaterialsDescriptor());\n          }}\n          onUnclick={() => setActiveUI([activeUI[0]])}\n          visible={[\"interior\"]}\n        />\n        <ButtonUI\n          {...props}\n          title=\"teleport\"\n          icon={<SearchOutlined />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"teleport\"]);\n            emitUIInteraction(getTeleportDescriptor());\n          }}\n          onUnclick={() => setActiveUI([activeUI[0]])}\n          visible={[\"interior\"]}\n        />\n        <ButtonUI\n          {...props}\n          title=\"info\"\n          icon={<SearchOutlined />}\n          onClick={() => setActiveUI([activeUI[0], \"info\"])}\n          onUnclick={() => setActiveUI([activeUI[0]])}\n          visible={[\"interior\"]}\n        />\n        <ButtonUI\n          {...props}\n          title=\"location\"\n          icon={<ShopOutlined />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"location\"]);\n            emitUIInteraction(getLocationDescriptor());\n          }}\n          onUnclick={() => setActiveUI([activeUI[0]])}\n          visible={[\"exterior\", \"interior\"]}\n        />\n        <ButtonUI\n          {...props}\n          title=\"sun\"\n          icon={<ClockCircleOutlined />}\n          onClick={() => setActiveUI([activeUI[0], \"sun\"])}\n          onUnclick={() => setActiveUI([activeUI[0]])}\n          visible={[\"exterior\", \"interior\"]}\n        />\n        <ButtonUI\n          {...props}\n          title=\"interior\"\n          icon={<ClockCircleOutlined />}\n          onClick={() => setActiveUI([\"interior\"])}\n          onUnclick={() => setActiveUI([\"exterior\"])}\n          visible={[\"exterior\", \"interior\"]}\n        />\n        <ButtonUI\n          {...props}\n          title=\"apartment\"\n          icon={<ClockCircleOutlined />}\n          onClick={() => setActiveUI([\"exterior\", \"apartment\"])}\n          onUnclick={() => setActiveUI([\"exterior\"])}\n          visible={[\"exterior\"]}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport { UIButtons };\n","import { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ApartmentControls } from \"../Bottom/ApartmentContols\";\nimport { ButtonUI } from \"../Bottom/ButtonUI\";\nimport { FilterControls } from \"../Bottom/FilterControls\";\nimport Gallery from \"../Bottom/Gallery\";\nimport { LocationControls } from \"../Bottom/LocationControls\";\nimport { SunControls } from \"../Bottom/SunControls\";\nimport { UIButtons } from \"../Bottom/UIButtons\";\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 50px;\n  display: flex;\n  overflow-x: auto;\n`;\n\nconst ButtonsContainer = styled.div`\n  background: black;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`;\n\nconst InfoContainer = styled.div`\n  background: black;\n  margin-left: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0px 16px;\n`;\n\nconst AppUI = (props) => {\n  const [activeUI, setActiveUI] = useState([\"exterior\"]);\n  const propsC = { ...props, activeUI, setActiveUI };\n  return (\n    <div style={{ zIndex: 1 }}>\n      <Container>\n        <ButtonsContainer>\n          <UIButtons {...propsC} />\n        </ButtonsContainer>\n        <InfoContainer>\n          <ButtonUI\n            icon={<QuestionCircleOutlined />}\n            visible={[\"exterior\", \"interior\"]}\n            activeUI={activeUI}\n          />\n        </InfoContainer>\n      </Container>\n      <FilterControls {...propsC} />\n      <Gallery {...propsC} />\n      <SunControls {...propsC} />\n      <LocationControls {...propsC} />\n      <ApartmentControls {...propsC} />\n    </div>\n  );\n};\n\nexport { AppUI };\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { WebRTCClient } from \"@arcware/webrtc-plugin\";\nimport { AppUI } from \"components/ProjectView/Components/ProjectUI/AppUI\";\nimport { getTimeDescriptor } from \"components/ProjectView/Components/ProjectUI/AppUI/descriptors\";\n\nconst ProjectA = (props) => {\n  const { project, setVideoInitialized } = props;\n\n  const sizeContainerRef = useRef(null);\n  const containerRef = useRef(null);\n  const videoRef = useRef(null);\n  const [webrtcClient, setWebrtcClient] = useState();\n  const webrtcClientInit = useRef();\n\n  const responseCallback = (message) => {\n    console.log(message);\n  };\n\n  const videoInitialized = () => {\n    if (webrtcClient) {\n      webrtcClient.emitUIInteraction(getTimeDescriptor(10));\n    }\n    setVideoInitialized(true);\n  };\n\n  useEffect(() => {\n    const args = {\n      address:\n        props.project.arcwareAddress ||\n        \"wss://signalling-client.ragnarok.arcware.cloud/\",\n      packageId:\n        props.project.arcwarePackageId ||\n        \"ff41fd0c-cac9-4e4c-abe5-3ada402f57cc\",\n      settings: {},\n      autoplay: { video: true, audio: true },\n      sizeContainer: sizeContainerRef.current,\n      container: containerRef.current,\n      videoRef: videoRef.current,\n      playOverlay: false,\n      loader: () => {},\n      applicationResponse: responseCallback,\n      videoInitializeCallback: videoInitialized,\n    };\n\n    // double load protection\n    if (!webrtcClientInit.current) {\n      webrtcClientInit.current = true;\n      setWebrtcClient(new WebRTCClient(args));\n    }\n  }, []);\n\n  return (\n    <>\n      <div ref={sizeContainerRef} style={{ flex: 1 }}>\n        <div ref={containerRef} style={{ zIndex: 1 }}>\n          <video ref={videoRef} />\n          {/* <Responses responses={responses} /> */}\n        </div>\n      </div>\n      {webrtcClient != null && project?.newUI && (\n        <AppUI\n          emitUIInteraction={webrtcClient.emitUIInteraction}\n          project={project}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ProjectA;\n","import axios from \"axios\";\r\n\r\nconst baseURL =\r\n    process.env.NODE_ENV === \"production\"\r\n        ? \"https://tour.immersiv.com.au/api\"\r\n        : \"http://localhost:5000/api\";\r\n\r\nconst API = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n});\r\n\r\nAPI.interceptors.request.use(\r\n    function (req) {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) req.headers[\"auth-token\"] = token;\r\n        return req;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default API;\r\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import { useEffect } from \"react\";\nimport API from \"api/axios.config\";\nimport { useUser } from \"context/UserContext\";\nimport history from \"helpers/history\";\n\nconst WithAxios = ({ children }) => {\n    const { isInitiated, logout } = useUser();\n\n    useEffect(() => {\n        API.interceptors.response.use(\n            (response) => response,\n            async (error) => {\n                const originalRequest = error.config;\n                if (\n                    error.response.status === 401 &&\n                    originalRequest.url === \"/auth/refresh-token\"\n                ) {\n                    return new Promise((resolve, reject) => {\n                        logout();\n                        history.push(\"/login\");\n                        reject(error);\n                    });\n                }\n\n                if (error.response.status === 401 && !originalRequest._retry) {\n                    try {\n                        originalRequest._retry = true;\n                        const res = await API.post(\"/auth/refresh-token\");\n                        localStorage.setItem(\"token\", res.data.token);\n                        return API(originalRequest);\n                    } catch (error) {\n                        logout();\n                        history.push(\"/login\");\n                    }\n                }\n                return Promise.reject(error);\n            }\n        );\n    }, []);\n\n    return isInitiated ? children : null;\n};\n\nexport default WithAxios;\n","import WithAxios from \"helpers/WithAxios\";\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport authService from \"services/auth.service\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst UserContext = createContext();\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [authData, setAuthData] = useState({\r\n        token: \"\",\r\n    });\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [isInitiated, setIsInitiated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            setIsLoggedIn(true);\r\n            setAuthData(() => getTokenData(localStorage.getItem(\"token\")));\r\n        }\r\n        setIsInitiated(true);\r\n    }, []);\r\n\r\n    const getTokenData = (token) => {\r\n        if (token) {\r\n            const decoded = jwt_decode(token);\r\n            return {\r\n                ...decoded,\r\n                token,\r\n            };\r\n        } else\r\n            return {\r\n                token: \"\",\r\n            };\r\n    };\r\n\r\n    const setUserInfo = (data) => {\r\n        const { token } = data;\r\n\r\n        setIsLoggedIn(true);\r\n\r\n        setAuthData(() => getTokenData(token));\r\n        localStorage.setItem(\"token\", token);\r\n    };\r\n\r\n    const logout = () => {\r\n        setAuthData(null);\r\n        setIsLoggedIn(false);\r\n\r\n        authService.logout();\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                setUserState: (data) => setUserInfo(data),\r\n                logout,\r\n                isInitiated,\r\n                isLoggedIn,\r\n                setIsLoggedIn,\r\n                authData,\r\n                setAuthData,\r\n            }}\r\n        >\r\n            <WithAxios>{children}</WithAxios>\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nconst useUser = () => {\r\n    const context = useContext(UserContext);\r\n\r\n    if (context === undefined) {\r\n        throw new Error(\"useUser must be used within UserProvider\");\r\n    }\r\n    return context;\r\n};\r\n\r\nexport { UserProvider, useUser };\r\n","import API from \"api/axios.config\";\r\n\r\nclass AdminService {\r\n    getAdmin() {\r\n        return API.get(`/admins`);\r\n    }\r\n\r\n    createAdmin(data) {\r\n        return API.post(`/admins`, data);\r\n    }\r\n\r\n    deleteAdmin(id) {\r\n        return API.delete(`/admins/${id}`);\r\n    }\r\n}\r\n\r\nexport default new AdminService();\r\n","import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUser } from \"context/UserContext\";\n\nconst useLoginCheck = () => {\n    const navigate = useNavigate();\n    const { isLoggedIn, authData, logout, isInitiated } = useUser();\n    useEffect(() => {\n        if (isInitiated) {\n            if (!isLoggedIn) {\n                logout();\n                navigate(\"/login\");\n                return null;\n            }\n\n            if (!authData?.super) {\n                if (authData?.projectId) {\n                    navigate(`/p-admin/${authData.projectId}`);\n                    return null;\n                } else {\n                    logout();\n                    navigate(\"/login\");\n                    return null;\n                }\n            }\n        }\n    }, [isLoggedIn, authData?.super, authData?.projectId, isInitiated]);\n};\n\nexport default useLoginCheck;\n","import LayoutHOC from \"layout/Layout\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport {\r\n    Button,\r\n    Dropdown,\r\n    Form,\r\n    Input,\r\n    Layout,\r\n    List,\r\n    Menu,\r\n    Modal,\r\n    PageHeader,\r\n    Popconfirm,\r\n} from \"antd\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\nimport { MoreOutlined } from \"@ant-design/icons\";\r\nimport { useUser } from \"context/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport toast from \"react-hot-toast\";\r\nimport adminService from \"services/admin.service\";\r\nimport useLoginCheck from \"hooks/useLoginCheck\";\r\n\r\nconst Admins = (props) => {\r\n    const formRef = useRef(null);\r\n    const [admins, setAdmins] = useState(null);\r\n    const [editModalOpen, setEditModalOpen] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        adminService.getAdmin().then((response) => {\r\n            setAdmins(response.data);\r\n        });\r\n    }, []);\r\n\r\n    useLoginCheck();\r\n\r\n    const onFinish = async (values) => {\r\n        const response = await adminService.createAdmin(values);\r\n        if (response.data) {\r\n            toast.success(\"Saved\");\r\n            setAdmins(response.data);\r\n            setEditModalOpen(null);\r\n            if (formRef.current) formRef.current.resetFields();\r\n        }\r\n    };\r\n\r\n    const deleteAdmin = async (id) => {\r\n        const response = await adminService.deleteAdmin(id);\r\n        if (response.data) setAdmins(response.data);\r\n    };\r\n\r\n    return (\r\n        <LayoutHOC loading={!admins}>\r\n            <Layout\r\n                style={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flex: 1,\r\n                    background: \"white\",\r\n                }}\r\n            >\r\n                <PageHeader\r\n                    onBack={() => navigate(`/admin`)}\r\n                    title={`Admins`}\r\n                    style={{\r\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\r\n                        position: \"fixed\",\r\n                        zIndex: 100,\r\n                        width: \"100%\",\r\n                    }}\r\n                />\r\n\r\n                <Content\r\n                    style={{\r\n                        flex: 1,\r\n                        overflow: \"auto\",\r\n                        padding: \"16px\",\r\n                        paddingTop: \"100px\",\r\n                        maxWidth: \"800px\",\r\n                        width: \"100%\",\r\n                        margin: \"auto\",\r\n                    }}\r\n                >\r\n                    <Button\r\n                        onClick={() => setEditModalOpen({})}\r\n                        style={{ margin: \"16px\" }}\r\n                    >\r\n                        Add admin\r\n                    </Button>\r\n                    <Modal\r\n                        visible={!!editModalOpen}\r\n                        onCancel={() => setEditModalOpen(null)}\r\n                        footer={null}\r\n                    >\r\n                        <Form\r\n                            onFinish={onFinish}\r\n                            style={{\r\n                                padding: \" 16px\",\r\n                                maxWidth: \"500px\",\r\n                                margin: \"auto\",\r\n                            }}\r\n                            ref={formRef}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"email\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please add name!\",\r\n                                        type: \"email\",\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input placeholder=\"Email\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    htmlType=\"submit\"\r\n                                    style={{ width: \"100%\" }}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                    {admins && (\r\n                        <List\r\n                            itemLayout=\"horizontal\"\r\n                            dataSource={admins.sort((a, b) =>\r\n                                a.name > b.name ? 1 : -1\r\n                            )}\r\n                            renderItem={(admin) => (\r\n                                <List.Item\r\n                                    actions={[\r\n                                        <Dropdown\r\n                                            overlay={\r\n                                                <Menu>\r\n                                                    <Popconfirm\r\n                                                        title=\"Are you sure to delete this admin?\"\r\n                                                        onConfirm={() =>\r\n                                                            deleteAdmin(\r\n                                                                admin.email\r\n                                                            )\r\n                                                        }\r\n                                                        okText=\"Yes\"\r\n                                                        cancelText=\"No\"\r\n                                                    >\r\n                                                        <Menu.Item\r\n                                                            key=\"3\"\r\n                                                            danger\r\n                                                        >\r\n                                                            Delete\r\n                                                        </Menu.Item>\r\n                                                    </Popconfirm>\r\n                                                </Menu>\r\n                                            }\r\n                                            trigger={[\"click\"]}\r\n                                        >\r\n                                            <MoreOutlined\r\n                                                style={{ fontSize: \"30px\" }}\r\n                                            />\r\n                                        </Dropdown>,\r\n                                    ]}\r\n                                    style={{\r\n                                        borderBottom: \"3px solid #ccc\",\r\n                                        paddingLeft: \"16px\",\r\n                                    }}\r\n                                >\r\n                                    <List.Item.Meta\r\n                                        title={admin.email}\r\n                                        description={\r\n                                            admin.locked\r\n                                                ? \"Locked\"\r\n                                                : \"Not locked\"\r\n                                        }\r\n                                    />\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                    )}\r\n                </Content>\r\n            </Layout>\r\n        </LayoutHOC>\r\n    );\r\n};\r\n\r\nexport default Admins;\r\n","import API from \"api/axios.config\";\r\n\r\nclass GAService {\r\n    getGA(projectId, metrics, dimensions, period) {\r\n        return API.post(`/ga/${projectId}`, {\r\n            metrics,\r\n            dimensions,\r\n            start: period[0],\r\n            finish: period[1],\r\n        });\r\n    }\r\n\r\n    getAccessToken() {\r\n        return API.get(`/ga/access-token`);\r\n    }\r\n}\r\n\r\nexport default new GAService();\r\n","import React from \"react\";\n\nimport { Chart } from \"react-google-charts\";\nimport moment from \"moment\";\nimport humanizeString from \"string-humanize\";\n\nexport const ChartItem = (props) => {\n    const {\n        data,\n        title,\n        column,\n        seconds,\n        type = \"LineChart\",\n        isDate = true,\n    } = props;\n\n    const dataRefined = data\n        ? [\n              [\n                  humanizeString(data.columnHeaders[0].name.replace(\"ga:\", \"\")),\n                  humanizeString(\n                      data.columnHeaders[column].name.replace(\"ga:\", \"\")\n                  ),\n              ],\n              ...data.rows\n                  .map((i) => [\n                      isDate ? moment(i[0], \"YYYYMMDD\").format(\"D MMM\") : i[0],\n                      parseInt(i[column]) / (seconds ? 60 : 1),\n                  ])\n                  .sort((a, b) => (isDate ? 0 : b[1] - a[1])),\n          ]\n        : [];\n    return (\n        <div style={{ maxWidth: \"400px\", margin: \"20px\", width: \"100%\" }}>\n            <Chart\n                chartType={type}\n                width=\"100%\"\n                height=\"400px\"\n                data={dataRefined}\n                options={{\n                    title,\n                    legend: {\n                        position: \"none\",\n                    },\n                    chartArea: { width: \"85%\", height: \"80%\" },\n                    allowHtml: true,\n                    width: \"100%\",\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ChartItem;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { DatePicker, Layout, PageHeader } from \"antd\";\n\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport projectService from \"services/project.service\";\nimport moment from \"moment\";\nimport gaService from \"services/ga.service\";\nimport toast from \"react-hot-toast\";\nimport { ChartItem } from \"components/DashboardItem/DataItems\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\nimport { useUser } from \"context/UserContext\";\n\nconst AnalyticClient = (props) => {\n    const { id } = useParams();\n\n    const [project, setProject] = useState(null);\n    const [dateData, setDateData] = useState(null);\n    const [cityData, setCityData] = useState(null);\n    const [deviceData, setDeviceData] = useState(null);\n    const [sourceData, setSourceData] = useState(null);\n    const [period, setPeriod] = useState([\n        moment().subtract(7, \"day\").format(),\n        moment().format(),\n    ]);\n    const navigate = useNavigate();\n    const { logout, isLoggedIn, authData } = useUser();\n\n    useEffect(() => {\n        if (\n            !isLoggedIn ||\n            (!authData?.super &&\n                id.toString() !== authData?.projectId.toString())\n        ) {\n            logout();\n            navigate(\"/login\");\n            return null;\n        }\n    }, [isLoggedIn, authData?.super, authData?.projectId]);\n\n    useEffect(() => {\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (period.length === 2 && project?.id) {\n            setDateData(null);\n            setCityData(null);\n            setDeviceData(null);\n            setSourceData(null);\n            getMetricData();\n        }\n    }, [period[0], period[1], project?.id]);\n\n    const getMetricData = () => {\n        gaService\n            .getGA(\n                project.id,\n                \"ga:users,ga:newUsers,ga:pageviews,ga:sessions,ga:sessionDuration\",\n                \"ga:date\",\n                period\n            )\n            .then((res) => {\n                setDateData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Users analytics data not loaded\");\n            });\n\n        gaService\n            .getGA(project.id, \"ga:users\", \"ga:city\", period)\n            .then((res) => {\n                setCityData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Location analytics data not loaded\");\n            });\n\n        gaService\n            .getGA(project.id, \"ga:users\", \"ga:deviceCategory\", period)\n            .then((res) => {\n                setDeviceData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Device analytics data not loaded\");\n            });\n\n        gaService\n            .getGA(project.id, \"ga:users\", \"ga:source\", period)\n            .then((res) => {\n                setSourceData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Source analytics data not loaded\");\n            });\n    };\n\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(`/p-admin/${id}`)}\n                    title={\n                        <>\n                            Analytics\n                            <br />\n                            <DatePicker.RangePicker\n                                size=\"large\"\n                                defaultValue={[\n                                    moment().subtract(7, \"day\"),\n                                    moment(),\n                                ]}\n                                onChange={(m) =>\n                                    setPeriod([m[0].format(), m[1].format()])\n                                }\n                                allowClear={false}\n                            />\n                        </>\n                    }\n                    style={{ borderBottom: \"1px #ccc solid\" }}\n                />\n                {project && (\n                    <Content\n                        style={{\n                            flex: 1,\n                            overflow: \"auto\",\n                            paddingTop: \"100px\",\n                            padding: \"16px\",\n\n                            width: \"100%\",\n                            margin: \"auto\",\n                        }}\n                    >\n                        <div\n                            style={{\n                                textAlign: \"center\",\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                flexWrap: \"wrap\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                            }}\n                        >\n                            <ChartItem\n                                data={dateData}\n                                title=\"Users\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={1}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"New users\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={2}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"Page views\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={3}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"Sessions\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={4}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"Session duration (minutes)\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={5}\n                                seconds\n                            />\n                            <ChartItem\n                                data={deviceData}\n                                title=\"Device type\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                type=\"PieChart\"\n                                column={1}\n                                seconds\n                                isDate={false}\n                            />\n                            <ChartItem\n                                data={sourceData}\n                                title=\"Source\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                type=\"BarChart\"\n                                column={1}\n                                isDate={false}\n                            />\n                            <ChartItem\n                                data={cityData}\n                                title=\"Source\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                type=\"Table\"\n                                column={1}\n                                isDate={false}\n                            />\n                        </div>\n                    </Content>\n                )}\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default AnalyticClient;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { Button, Layout, PageHeader, Form, Input } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport constantService from \"services/constant.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst Constants = (props) => {\n    const [constants, setConstants] = useState(null);\n    const formRef = useRef(null);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        constantService\n            .getConstant()\n            .then((response) => {\n                if (response.data) {\n                    setConstants(response.data);\n                    formRef.current &&\n                        formRef.current.setFieldsValue(response.data);\n                } else setConstants({});\n            })\n            .catch(() => {\n                setConstants({});\n            });\n    }, []);\n\n    useLoginCheck();\n    const onFinish = async (values) => {\n        const response = await constantService.saveConstant(values);\n        if (response.data) {\n            setConstants(response.data);\n            toast.success(\"Saved\");\n        }\n    };\n\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(\"/admin\")}\n                    title=\"Constants\"\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"800px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Form\n                        ref={formRef}\n                        name=\"normal_login\"\n                        onFinish={onFinish}\n                        style={{\n                            padding: \" 16px\",\n                            maxWidth: \"500px\",\n                            margin: \"auto\",\n                        }}\n                        initialValues={constants}\n                    >\n                        <Form.Item name=\"email\">\n                            <Input placeholder=\"Email\" />\n                        </Form.Item>\n\n                        <Form.Item name=\"phone\">\n                            <Input placeholder=\"Phone\" />\n                        </Form.Item>\n\n                        <Form.Item name=\"call\">\n                            <Input placeholder=\"Phone in international format\" />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                style={{ width: \"100%\" }}\n                            >\n                                Save\n                            </Button>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button\n                                onClick={() => {\n                                    if (formRef.current)\n                                        formRef.current.resetFields();\n                                }}\n                                style={{ width: \"100%\" }}\n                            >\n                                Reset\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default Constants;\n","import API from \"api/axios.config\";\r\n\r\nclass ProjectService {\r\n    signUrl(isVideo, isLogo) {\r\n        return API.get(\"/utils/sign-s3\", {\r\n            params: { isVideo: !!isVideo, isLogo: !!isLogo },\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ProjectService();\r\n","import axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport utilsService from \"services/utils.service\";\n\nconst uploadMedia =\n    (cb, isVideo, isLogo) =>\n    async ({\n        action,\n        data,\n        file,\n        filename,\n        headers,\n        onError,\n        onProgress,\n        onSuccess,\n        withCredentials,\n    }) => {\n        try {\n            const res = await utilsService.signUrl(isVideo, isLogo);\n\n            axios\n                .put(res.data.signedRequest, file, {})\n                .then((s3res) => {\n                    cb({ url: res.data.url, thumbnail: res.data.thumbnail });\n                    onSuccess(res.data.thumbnail);\n                })\n                .catch((err) => {\n                    console.log(err.message);\n                    onError();\n                });\n        } catch (error) {\n            onError();\n            toast.error(error.message);\n        }\n    };\n\nexport default uploadMedia;\n","import { LoadingOutlined } from \"@ant-design/icons\";\nimport { Button, Checkbox, Form, Image, Input, Switch, Upload } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport uploadMedia from \"helpers/uploadMedia\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Logo = (props) => {\n  const customUploadClientLogo = uploadMedia(\n    (values) => {\n      props.setFieldsValue({ [props.id]: values.url });\n    },\n    props.isVideo,\n    true\n  );\n  const [image, setImage] = useState(\"\");\n  useEffect(() => {\n    setTimeout(() => setImage(props[props.id]), 5000);\n  }, [props[props.id]]);\n  return (\n    <>\n      {image === props[props.id] ? (\n        props.isVideo ? (\n          <video\n            id=\"my-player\"\n            class=\"video-js\"\n            controls\n            preload=\"auto\"\n            data-setup=\"{}\"\n          >\n            <source src={image} type=\"video/mp4\"></source>\n            <p class=\"vjs-no-js\">\n              To view this video please enable JavaScript, and consider\n              upgrading to a web browser that\n              <a\n                href=\"https://videojs.com/html5-video-support/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                supports HTML5 video\n              </a>\n            </p>\n          </video>\n        ) : (\n          <Image src={image} style={{ maxHeight: \"50px\" }} />\n        )\n      ) : (\n        <LoadingOutlined />\n      )}\n      <div style={{ marginTop: \"10px\" }}>\n        <Upload\n          customRequest={customUploadClientLogo}\n          showUploadList={false}\n          maxCount={1}\n          getValueFromEvent={() => {}}\n        >\n          <Button>Change</Button>\n        </Upload>\n      </div>\n    </>\n  );\n};\n\nconst ProjectFormFields = ({ setFieldsValue }) => {\n  return (\n    <>\n      <Form.Item\n        name=\"name\"\n        label=\"Name\"\n        rules={[\n          {\n            required: true,\n            message: \"Please set name!\",\n          },\n        ]}\n      >\n        <Input placeholder=\"Name\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"url\"\n        label=\"Url\"\n        rules={[\n          {\n            required: true,\n            message: \"Please add url!\",\n          },\n        ]}\n        extra=\"This is only what should appear at the end of url, for example 'best-hotel', 'sky_mall'... Do not put https://tour.immersiv.com.au/ here!\"\n      >\n        <Input placeholder=\"Url\" />\n      </Form.Item>\n\n      <Form.Item label=\"New UI\" name=\"newUI\" valuePropName=\"checked\">\n        <Checkbox />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Arcware project\"\n        name=\"isArcware\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n\n      <Form.Item name=\"arcwareAddress\" label=\"Arcware address\">\n        <Input placeholder=\"Arcware address\" />\n      </Form.Item>\n\n      <Form.Item name=\"arcwarePackageId\" label=\"Arcware project id\">\n        <Input placeholder=\"Arcware project id\" />\n      </Form.Item>\n\n      <Form.Item name=\"projectId\" label=\"Project id\" hidden>\n        <Input placeholder=\"Project id\" />\n      </Form.Item>\n\n      <Form.Item name=\"modelId\" label=\"Model id\" hidden>\n        <Input placeholder=\"Model id\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Custom background\"\n        name=\"backgroundOn\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n      <Form.Item\n        label=\"Background video\"\n        name=\"backgroundTypeVideo\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n      <Form.Item\n        label=\"Background video\"\n        valuePropName=\"backgroundVideo\"\n        name=\"backgroundVideo\"\n      >\n        <Logo setFieldsValue={setFieldsValue} isVideo />\n      </Form.Item>\n      <Form.Item\n        label=\"Background image\"\n        valuePropName=\"backgroundImage\"\n        name=\"backgroundImage\"\n      >\n        <Logo setFieldsValue={setFieldsValue} />\n      </Form.Item>\n\n      <Form.Item name=\"adminEmail\" label=\"Client login\">\n        <Input placeholder=\"Admin email\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"adminPassword\"\n        label=\"Client password\"\n        rules={[\n          {\n            min: 6,\n            message: \"Must have length at least 6!\",\n          },\n        ]}\n      >\n        <Input placeholder=\"Admin password\" />\n      </Form.Item>\n\n      <Form.Item name=\"analytic\" label=\"Analytics property\">\n        <Input placeholder=\"Google analytics property id\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"mobileNativeEvents\"\n        label=\"Mobile native events\"\n        valuePropName=\"checked\"\n      >\n        <Switch>Mobile native events</Switch>\n      </Form.Item>\n      <Form.Item\n        name=\"desktopNativeEvents\"\n        label=\"Desktop native events\"\n        valuePropName=\"checked\"\n      >\n        <Switch />\n      </Form.Item>\n\n      <Form.Item name=\"published\" valuePropName=\"checked\" label=\"Published\">\n        <Checkbox />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Project details on\"\n        name=\"projectDetailsOn\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n      <Form.Item label=\"Project details duration\" name=\"projectDetailsDuraton\">\n        <Input type=\"number\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Client logo\"\n        valuePropName=\"clientLogo\"\n        name=\"clientLogo\"\n      >\n        <Logo setFieldsValue={setFieldsValue} />\n      </Form.Item>\n      <Form.Item label=\"Client logo max width\" name=\"clientLogoMaxWidth\">\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item label=\"Client logo max height\" name=\"clientLogoMaxHeight\">\n        <Input type=\"number\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Project logo\"\n        valuePropName=\"projectLogo\"\n        name=\"projectLogo\"\n      >\n        <Logo setFieldsValue={setFieldsValue} />\n      </Form.Item>\n      <Form.Item label=\"Project logo max width\" name=\"projectLogoMaxWidth\">\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item label=\"Project logo max height\" name=\"projectLogoMaxHeight\">\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item\n        name=\"projectName\"\n        label=\"Project name\"\n        extra=\"This text will appear on the screen where the project is being loaded if there is no logo\"\n      >\n        <Input placeholder=\"projectName\" />\n      </Form.Item>\n      <Form.Item\n        name=\"description\"\n        label=\"Description\"\n        extra=\"This text will appear on the screen where the project is being loaded\"\n      >\n        <TextArea placeholder=\"Description\" rows={4} />\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\n          Save\n        </Button>\n      </Form.Item>\n    </>\n  );\n};\n\nexport default ProjectFormFields;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useRef } from \"react\";\nimport projectService from \"services/project.service\";\n\nimport { Button, Layout, PageHeader, Form } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport ProjectFormFields from \"components/ProjectFormFields\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst CreateProject = (props) => {\n    const formRef = useRef(null);\n\n    const navigate = useNavigate();\n\n    useLoginCheck();\n\n    const onFinish = async (values) => {\n        const response = await projectService.createProject(values);\n        if (response.data) {\n            toast.success(\"Saved\");\n            navigate(\"/admin\");\n        }\n    };\n\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(\"/admin\")}\n                    title=\"Create project\"\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"800px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Form\n                        ref={formRef}\n                        name=\"normal_login\"\n                        onFinish={onFinish}\n                        style={{\n                            padding: \" 16px\",\n                            maxWidth: \"500px\",\n                            margin: \"auto\",\n                        }}\n                        labelCol={{ span: 8 }}\n                        wrapperCol={{ span: 16 }}\n                    >\n                        <ProjectFormFields />\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                            <Button\n                                onClick={() => {\n                                    if (formRef.current)\n                                        formRef.current.resetFields();\n                                }}\n                                style={{ width: \"100%\" }}\n                            >\n                                Reset\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default CreateProject;\n","import React, { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport authService from \"services/auth.service\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\n\r\nconst ForgotPasswordModal = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const onFinish = (data) => {\r\n        authService\r\n            .forgotPassword(data.email)\r\n            .then((data) => {\r\n                if (data.data.status === \"OK\") {\r\n                    toast.success(\"Email has been sent successfully.\");\r\n                    setIsOpen(false);\r\n                }\r\n            })\r\n            .catch((error) => {});\r\n    };\r\n    return (\r\n        <div>\r\n            <>\r\n                <span onClick={() => setIsOpen(!isOpen)}>Forgot password?</span>\r\n                <Modal\r\n                    title=\"Forgot Password\"\r\n                    visible={isOpen}\r\n                    footer={[]}\r\n                    onCancel={() => setIsOpen(false)}\r\n                >\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        onFinish={onFinish}\r\n                        style={{\r\n                            padding: \"100px 16px\",\r\n                            maxWidth: \"500px\",\r\n                            margin: \"auto\",\r\n                        }}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[\r\n                                {\r\n                                    type: \"email\",\r\n                                    message: \"The input is not valid E-mail!\",\r\n                                },\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your E-mail!\",\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                prefix={\r\n                                    <UserOutlined className=\"site-form-item-icon\" />\r\n                                }\r\n                                placeholder=\"Email\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                Reset password\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPasswordModal;\r\n","// import { Button, HelperText, Input, Label } from \"@windmill/react-ui\";\r\nimport ForgotPasswordModal from \"components/ForgotPasswordModal\";\r\nimport { useUser } from \"context/UserContext\";\r\nimport Layout from \"layout/Layout\";\r\nimport React, { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport authService from \"services/auth.service\";\r\nimport { Form, Input, Button, Typography } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nconst Login = () => {\r\n    const { isLoggedIn, setUserState, authData } = useUser();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const onFinish = async (data) => {\r\n        const { email, password } = data;\r\n\r\n        try {\r\n            setIsLoading(true);\r\n            const data = await authService.login(email, password);\r\n            toast.success(\"Login successful 🔓\");\r\n\r\n            setTimeout(() => {\r\n                setUserState(data);\r\n                setRedirectToReferrer(true);\r\n                setIsLoading(false);\r\n            }, 1500);\r\n        } catch (error) {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    if (\r\n        (isLoggedIn || redirectToReferrer) &&\r\n        (authData?.super || authData?.projectId)\r\n    ) {\r\n        navigate(\"/admin\");\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Login\" loading={isLoading}>\r\n            <Form\r\n                name=\"normal_login\"\r\n                onFinish={onFinish}\r\n                style={{\r\n                    padding: \"100px 16px\",\r\n                    maxWidth: \"500px\",\r\n                    margin: \"auto\",\r\n                }}\r\n            >\r\n                <Typography.Title\r\n                    style={{ textAlign: \"center\", marginBottom: \"50px\" }}\r\n                >\r\n                    Manage IMMERSIVE\r\n                </Typography.Title>\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            type: \"email\",\r\n                            message: \"The input is not valid E-mail!\",\r\n                        },\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your E-mail!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input\r\n                        prefix={\r\n                            <UserOutlined className=\"site-form-item-icon\" />\r\n                        }\r\n                        placeholder=\"Email\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your Password!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password\r\n                        prefix={\r\n                            <LockOutlined className=\"site-form-item-icon\" />\r\n                        }\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <a>\r\n                        <ForgotPasswordModal />\r\n                    </a>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{ width: \"100%\" }}\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport projectService from \"services/project.service\";\n\nimport { Button, Layout, PageHeader, Form, Typography } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport ProjectFormFields from \"components/ProjectFormFields\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\nimport copy from \"copy-to-clipboard\";\n\nconst ProjectDetails = (props) => {\n    const [project, setProject] = useState(null);\n\n    const [form] = Form.useForm();\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, [id]);\n\n    const navigate = useNavigate();\n    useLoginCheck();\n\n    const onFinish = async (values) => {\n        const response = await projectService.saveProject(project.id, values);\n        if (response.data) toast.success(\"Saved\");\n    };\n\n    const projectAddress = project?.url\n        ? `https://tour.immersiv.com.au/p/${project.url}`\n        : \"not set yet\";\n    const galleryAddress = project?.url\n        ? `https://tour.immersiv.com.au/gallery?project=${project.url}`\n        : \"not set yet\";\n    const propertiesAddress = project?.url\n        ? `https://tour.immersiv.com.au/api/properties/properties-ue/${project.url}`\n        : \"not set yet\";\n\n    const setFieldsValue = (val) => {\n        if (form) {\n            form.setFieldsValue({\n                ...form.getFieldsValue(),\n                ...val,\n            });\n        }\n    };\n\n    const description = Form.useWatch(\"description\", form);\n    const projectName = Form.useWatch(\"projectName\", form);\n    const clientLogo = Form.useWatch(\"clientLogo\", form);\n    const clientLogoMaxWidth = Form.useWatch(\"clientLogoMaxWidth\", form);\n    const clientLogoMaxHeight = Form.useWatch(\"clientLogoMaxHeight\", form);\n    const projectLogo = Form.useWatch(\"projectLogo\", form);\n    const projectLogoMaxWidth = Form.useWatch(\"projectLogoMaxWidth\", form);\n    const projectLogoMaxHeight = Form.useWatch(\"projectLogoMaxHeight\", form);\n    return (\n        <LayoutHOC loading={!project}>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(\"/admin\")}\n                    title={`Project - ${project?.name}`}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"800px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    {project && (\n                        <>\n                            <Button\n                                onClick={() => navigate(`/p-admin/${id}`)}\n                                style={{ margin: \"16px\" }}\n                            >\n                                See client admin panel\n                            </Button>\n                            <Button\n                                onClick={() =>\n                                    navigate(\n                                        `/admin/projects/${project.id}/properties`\n                                    )\n                                }\n                                style={{ margin: \"16px\" }}\n                            >\n                                Manage properties\n                            </Button>\n                            <Button\n                                onClick={() =>\n                                    navigate(\n                                        `/admin/projects/${project.id}/media`\n                                    )\n                                }\n                                style={{ margin: \"16px\" }}\n                            >\n                                Manage media\n                            </Button>\n                            <Typography.Paragraph>\n                                {`The project full url is ${projectAddress}`}\n                                <Button\n                                    onClick={() => copy(projectAddress)}\n                                    type=\"link\"\n                                >\n                                    Copy\n                                </Button>\n                            </Typography.Paragraph>\n\n                            <Typography.Paragraph>\n                                {`The project gallery url is ${galleryAddress}`}{\" \"}\n                                <Button\n                                    onClick={() => copy(galleryAddress)}\n                                    type=\"link\"\n                                >\n                                    Copy\n                                </Button>\n                            </Typography.Paragraph>\n\n                            <Typography.Paragraph>\n                                {`The project properties api link ${propertiesAddress}`}{\" \"}\n                                <Button\n                                    onClick={() => copy(propertiesAddress)}\n                                    type=\"link\"\n                                >\n                                    Copy\n                                </Button>\n                            </Typography.Paragraph>\n\n                            <Form\n                                form={form}\n                                onFinish={onFinish}\n                                style={{\n                                    padding: \" 16px\",\n                                    maxWidth: \"500px\",\n                                    margin: \"auto\",\n                                }}\n                                initialValues={project}\n                                labelCol={{ span: 8 }}\n                                wrapperCol={{ span: 16 }}\n                            >\n                                <ProjectFormFields\n                                    setFieldsValue={setFieldsValue}\n                                />\n\n                                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                                    <Button\n                                        onClick={() => {\n                                            if (form.current)\n                                                form.current.resetFields();\n                                        }}\n                                        style={{ width: \"100%\" }}\n                                    >\n                                        Reset\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                            <div>\n                                <div>Project details preview</div>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        flexDirection: \"column\",\n                                        flex: 1,\n                                        alignItems: \"center\",\n                                    }}\n                                >\n                                    <img\n                                        src={clientLogo}\n                                        alt=\"logo\"\n                                        style={{\n                                            maxHeight:\n                                                clientLogoMaxHeight + \"px\",\n                                            maxWidth: clientLogoMaxWidth + \"px\",\n                                            marginBottom: \"36px\",\n                                        }}\n                                    />\n                                    {projectLogo ? (\n                                        <img\n                                            src={projectLogo}\n                                            alt=\"logo\"\n                                            style={{\n                                                maxHeight:\n                                                    projectLogoMaxHeight + \"px\",\n                                                maxWidth:\n                                                    projectLogoMaxWidth + \"px\",\n                                                marginBottom: \"36px\",\n                                            }}\n                                        />\n                                    ) : (\n                                        <h6 style={{ textAlign: \"center\" }}>\n                                            {projectName}\n                                        </h6>\n                                    )}\n                                    {/* <p style={{ textAlign: \"center\" }}>\n                                        {description}\n                                    </p> */}\n                                </div>\n                            </div>\n                        </>\n                    )}\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default ProjectDetails;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\nimport projectService from \"services/project.service\";\n\nimport {\n    Button,\n    Drawer,\n    Dropdown,\n    Layout,\n    List,\n    Menu,\n    PageHeader,\n    Popconfirm,\n} from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport {\n    EyeFilled,\n    EyeInvisibleFilled,\n    MenuOutlined,\n    MoreOutlined,\n    StarFilled,\n} from \"@ant-design/icons\";\nimport { useUser } from \"context/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst Projects = (props) => {\n    const [projects, setProjects] = useState(null);\n    const { logout } = useUser();\n    const navigate = useNavigate();\n\n    const [openDrawer, setOpenDrawer] = useState(false);\n    useEffect(() => {\n        projectService.getProject().then((response) => {\n            setProjects(response.data);\n        });\n    }, []);\n\n    useLoginCheck();\n\n    const deleteProject = async (id) => {\n        const response = await projectService.deleteProject(id);\n        if (response.data) setProjects(response.data);\n    };\n\n    const setFeatured = async (id) => {\n        const response = await projectService.saveProject(id, {\n            featured: true,\n        });\n\n        if (response.data) setProjects(response.data);\n    };\n\n    return (\n        <LayoutHOC loading={!projects}>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => setOpenDrawer(true)}\n                    backIcon={<MenuOutlined />}\n                    title={\"Projects\"}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"800px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Button\n                        onClick={() => navigate(\"/admin/projects/create\")}\n                        style={{ margin: \"16px\" }}\n                    >\n                        Add project\n                    </Button>\n                    {projects && (\n                        <List\n                            itemLayout=\"horizontal\"\n                            dataSource={projects.sort((a, b) =>\n                                a.url > b.url ? 1 : -1\n                            )}\n                            renderItem={(project) => (\n                                <List.Item\n                                    actions={[\n                                        <Dropdown\n                                            overlay={\n                                                <Menu>\n                                                    <Menu.Item\n                                                        key=\"1\"\n                                                        onClick={() =>\n                                                            setFeatured(\n                                                                project.id\n                                                            )\n                                                        }\n                                                    >\n                                                        Set as featured\n                                                    </Menu.Item>\n                                                    <Menu.Divider />\n                                                    <Popconfirm\n                                                        title=\"Are you sure to delete this project?\"\n                                                        onConfirm={() =>\n                                                            deleteProject(\n                                                                project.id\n                                                            )\n                                                        }\n                                                        okText=\"Yes\"\n                                                        cancelText=\"No\"\n                                                    >\n                                                        <Menu.Item\n                                                            key=\"3\"\n                                                            danger\n                                                        >\n                                                            Delete\n                                                        </Menu.Item>\n                                                    </Popconfirm>\n                                                </Menu>\n                                            }\n                                            trigger={[\"click\"]}\n                                        >\n                                            <MoreOutlined\n                                                style={{ fontSize: \"30px\" }}\n                                            />\n                                        </Dropdown>,\n                                    ]}\n                                >\n                                    <List.Item.Meta\n                                        avatar={\n                                            project.featured ? (\n                                                <StarFilled\n                                                    style={{ fontSize: \"24px\" }}\n                                                />\n                                            ) : project.published ? (\n                                                <EyeFilled\n                                                    style={{ fontSize: \"24px\" }}\n                                                />\n                                            ) : (\n                                                <EyeInvisibleFilled\n                                                    style={{ fontSize: \"24px\" }}\n                                                />\n                                            )\n                                        }\n                                        title={project.name}\n                                        description={project.url}\n                                        onClick={() => {\n                                            navigate(\n                                                `/admin/projects/${project.id}`\n                                            );\n                                        }}\n                                    />\n                                </List.Item>\n                            )}\n                        />\n                    )}\n                </Content>\n            </Layout>\n            <Drawer\n                title=\"Menu\"\n                placement=\"left\"\n                onClose={() => setOpenDrawer(false)}\n                visible={openDrawer}\n            >\n                <Menu\n                    mode=\"inline\"\n                    style={{ width: \"100%\" }}\n                    onClick={({ item, key }) => {\n                        setOpenDrawer(false);\n                        switch (key) {\n                            case \"logout\":\n                                logout();\n                                break;\n                            case \"info\":\n                                navigate(\"/admin/contant\");\n                                break;\n                            case \"admins\":\n                                navigate(\"/admin/admins\");\n                                break;\n                            default:\n                                return;\n                        }\n                    }}\n                    activeKey=\"projects\"\n                    selectedKeys={[\"projects\"]}\n                >\n                    <Menu.Item key=\"projects\">Projects</Menu.Item>\n                    <Menu.Item key=\"info\">Constant</Menu.Item>\n                    <Menu.Item key=\"admins\">Admins</Menu.Item>\n                    <Menu.Item key=\"logout\">Logout</Menu.Item>\n                </Menu>\n            </Drawer>\n        </LayoutHOC>\n    );\n};\n\nexport default Projects;\n","import API from \"api/axios.config\";\r\n\r\nclass PropertyService {\r\n    getProperty(projectId, id) {\r\n        return API.get(`/properties/${projectId}/${id ? \"/\" + id : \"\"}`);\r\n    }\r\n    saveProperty(projectId, id, data) {\r\n        return API.put(`/properties/${projectId}/${id}`, data);\r\n    }\r\n    createProperty(projectId, id) {\r\n        return API.post(`/properties/${projectId}`, { id });\r\n    }\r\n    deleteProperty(projectId, ids) {\r\n        return API.post(`/properties/${projectId}/delete`, { ids });\r\n    }\r\n    saveStatus(projectId, id, data) {\r\n        return API.put(`/properties/${projectId}/status/${id}`, data);\r\n    }\r\n}\r\n\r\nexport default new PropertyService();\r\n","import {\n    Button,\n    Form,\n    Input,\n    InputNumber,\n    Popconfirm,\n    Select,\n    Table,\n    Typography,\n} from \"antd\";\nimport React, { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport propertyService from \"services/property.service\";\n\nconst { Option } = Select;\n\nconst transferOrientationToObject = (data) => {\n    if (!data.Orientation) return data;\n    const o = {};\n    if (data.Orientation.indexOf(\"N\") !== -1) o.N = true;\n    else if (data.Orientation.indexOf(\"S\") !== -1) o.S = true;\n    if (data.Orientation.indexOf(\"E\") !== -1) o.E = true;\n    else if (data.Orientation.indexOf(\"W\") !== -1) o.W = true;\n    return { ...data, Orientation: o };\n};\n\nconst transferOrientationToString = (data) => {\n    let o = \"\";\n    if (data.Orientation.N) o = o + \"N\";\n    else if (data.Orientation.S) o = o + \"S\";\n    if (data.Orientation.E) o = o + \"E\";\n    else if (data.Orientation.W) o = o + \"W\";\n    return { ...data, Orientation: o };\n};\n\nconst EditableCell = ({\n    editing,\n    dataIndex,\n    title,\n    inputType,\n    property,\n    index,\n    children,\n    ...restProps\n}) => {\n    let inputNode = <InputNumber />;\n\n    switch (inputType) {\n        case \"number\":\n            inputNode = <InputNumber />;\n            break;\n        case \"orientation\":\n            inputNode = (\n                <Select>\n                    <Option value=\"N\">North</Option>\n                    <Option value=\"NE\">North-East</Option>\n                    <Option value=\"E\">East</Option>\n                    <Option value=\"SE\">South-East</Option>\n                    <Option value=\"S\">South</Option>\n                    <Option value=\"SW\">South-West</Option>\n                    <Option value=\"W\">West</Option>\n                    <Option value=\"NW\">North-West</Option>\n                </Select>\n            );\n            break;\n        case \"availability\":\n            inputNode = (\n                <Select>\n                    <Option value=\"available\">Available</Option>\n                    <Option value=\"reserved\">Reserved</Option>\n                    <Option value=\"sold\">Sold</Option>\n                </Select>\n            );\n            break;\n        default:\n            inputNode = <Input />;\n    }\n    return (\n        <td {...restProps}>\n            {editing ? (\n                <Form.Item\n                    name={dataIndex}\n                    style={{\n                        margin: 0,\n                        width: \"100%\",\n                    }}\n                    rules={[\n                        {\n                            required: true,\n                            message: `Please Input ${title}!`,\n                        },\n                    ]}\n                >\n                    {inputNode}\n                </Form.Item>\n            ) : (\n                children\n            )}\n        </td>\n    );\n};\n\nconst capitalize = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\nconst PropertiesTable = (props) => {\n    const { properties, project, setProperties, admin, setEditModalOpen } =\n        props;\n    const [selectedProperties, setSelectedProperties] = useState([]);\n    const [editingKey, setEditingKey] = useState(\"\");\n\n    const [form] = Form.useForm();\n    const isEditing = (property) => property.id === editingKey;\n\n    const edit = (property) => {\n        form.setFieldsValue(property);\n        setEditingKey(property.id);\n    };\n\n    const cancel = () => {\n        setEditingKey(\"\");\n    };\n\n    const save = async (key) => {\n        try {\n            const values = await form.validateFields();\n            const response = await propertyService.saveProperty(\n                project.id,\n                key,\n                transferOrientationToObject(values)\n            );\n\n            if (response.data) {\n                toast.success(\"Saved\");\n                setProperties(response.data);\n                setEditingKey(\"\");\n            }\n        } catch (errInfo) {\n            console.log(\"Validate Failed:\", errInfo);\n        }\n    };\n\n    const deleteProperty = async () => {\n        const response = await propertyService.deleteProperty(\n            project.id,\n            selectedProperties\n        );\n        if (response.data) setProperties(response.data);\n    };\n\n    const columns = [\n        {\n            title: \"Name\",\n            dataIndex: \"Name\",\n            sorter: (a, b) => (a.Name > b.Name ? 1 : -1),\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: admin,\n            inputType: \"text\",\n            width: 100,\n        },\n        {\n            title: \"Availability\",\n            dataIndex: \"Availability\",\n            sorter: (a, b) => (a.Availability > b.Availability ? 1 : -1),\n            sortDirections: [\"descend\", \"ascend\"],\n            onFilter: (value, property) =>\n                property.Availability.indexOf(value) === 0,\n            editable: true,\n            inputType: \"availability\",\n            width: 100,\n            render: (_, property) => capitalize(property.Availability),\n        },\n        {\n            title: \"Surface\",\n            dataIndex: \"Surface\",\n            sorter: (a, b) => a.Surface - b.Surface,\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: admin,\n            inputType: \"number\",\n            width: 100,\n        },\n        {\n            title: \"Price\",\n            dataIndex: \"Price\",\n            sorter: (a, b) => a.Price - b.Price,\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: true,\n            inputType: \"number\",\n            width: 100,\n        },\n        {\n            title: \"Bedrooms\",\n            dataIndex: \"BedroomsCount\",\n            key: \"bedrooms\",\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: admin,\n            inputType: \"number\",\n            width: 100,\n        },\n        {\n            title: \"Bathrooms\",\n            dataIndex: \"BathroomsCount\",\n            sorter: (a, b) => a.BathroomsCount - b.BathroomsCount,\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: admin,\n            inputType: \"number\",\n            width: 100,\n        },\n        ...(project.url.toLowerCase() === \"Imperial_Square\".toLowerCase()\n            ? []\n            : [\n                  {\n                      title: \"Frontage\",\n                      dataIndex: \"Frontage\",\n                      sorter: (a, b) => a.Frontage - b.Frontage,\n                      sortDirections: [\"descend\", \"ascend\"],\n                      editable: admin,\n                      inputType: \"number\",\n                      width: 100,\n                  },\n                  {\n                      title: \"Depth\",\n                      dataIndex: \"Depth\",\n                      sorter: (a, b) => a.Depth - b.Depth,\n                      sortDirections: [\"descend\", \"ascend\"],\n                      editable: admin,\n                      inputType: \"number\",\n                      width: 100,\n                  },\n              ]),\n        {\n            title: \"Orientation\",\n            dataIndex: \"Orientation\",\n\n            sorter: (a, b) =>\n                transferOrientationToString(a).Orientation >\n                transferOrientationToString(b).Orientation\n                    ? 1\n                    : -1,\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: admin,\n            inputType: \"orientation\",\n            width: 100,\n        },\n        {\n            title: \"Actions\",\n            dataIndex: \"actions\",\n            width: 80,\n            render: (_, property) => {\n                const editable = isEditing(property);\n                return editable ? (\n                    <span>\n                        <Typography.Link\n                            onClick={() => save(property.id)}\n                            style={{\n                                marginRight: 8,\n                            }}\n                        >\n                            Save\n                        </Typography.Link>\n\n                        <Typography.Link onClick={cancel}>\n                            Cancel\n                        </Typography.Link>\n                    </span>\n                ) : (\n                    <span>\n                        <Typography.Link\n                            disabled={editingKey !== \"\"}\n                            onClick={() => edit(property)}\n                        >\n                            Edit\n                        </Typography.Link>\n                    </span>\n                );\n            },\n        },\n    ];\n\n    const mergedColumns = columns.map((col) => {\n        if (!col.editable) {\n            return col;\n        }\n\n        return {\n            ...col,\n            onCell: (property) => ({\n                property,\n                inputType: col.inputType,\n                dataIndex: col.dataIndex,\n                title: col.title,\n                editing: isEditing(property),\n            }),\n        };\n    });\n\n    const onAddProperty = async () => {\n        const response = await propertyService.createProperty(\n            project.id,\n            properties.length ? properties[properties.length - 1].id : \"\"\n        );\n        if (response.data) {\n            toast.success(\"Added\");\n            setProperties(response.data.newProperties);\n            setEditingKey(response.data.newProperty.id);\n            form.setFieldsValue(\n                transferOrientationToString(response.data.newProperty)\n            );\n            document.querySelector(\"div.ant-table-body\").scrollTop = 1000000;\n        }\n    };\n    return (\n        <>\n            <Form form={form} component={false}>\n                <Table\n                    components={{\n                        body: {\n                            cell: EditableCell,\n                        },\n                    }}\n                    size=\"small\"\n                    bordered\n                    dataSource={properties.map((i) => {\n                        const d = transferOrientationToString(i);\n                        return { ...d, key: d.id };\n                    })}\n                    columns={mergedColumns}\n                    rowClassName=\"editable-row\"\n                    rowSelection={\n                        admin\n                            ? {\n                                  type: \"checkbox\",\n                                  onChange: (_, selectedRows) => {\n                                      setSelectedProperties(\n                                          selectedRows.map((i) => i.id)\n                                      );\n                                  },\n                              }\n                            : null\n                    }\n                    pagination={false}\n                    tableLayout=\"fixed\"\n                    scroll={{\n                        y: \"calc(100vh - 230px)\",\n                    }}\n                />\n            </Form>\n            {admin && (\n                <Button\n                    onClick={onAddProperty}\n                    style={{ margin: \"16px\" }}\n                    type=\"primary\"\n                >\n                    Add property\n                </Button>\n            )}\n            {!!selectedProperties.length && admin && (\n                <Typography.Link\n                    onClick={() => deleteProperty()}\n                    type=\"danger\"\n                    disabled={editingKey}\n                >\n                    Delete\n                </Typography.Link>\n            )}\n        </>\n    );\n};\n\nexport default PropertiesTable;\n","import React, { useEffect } from \"react\";\n\nimport propertyService from \"services/property.service\";\nimport PropertiesTable from \"components/ProjectView/Components/PropertiesTable\";\nimport projectService from \"services/project.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst Properties = (props) => {\n    const { admin, id, project, properties, setProject, setProperties } = props;\n\n    useEffect(() => {\n        propertyService.getProperty(id).then((response) => {\n            setProperties(response.data);\n        });\n\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n\n    useLoginCheck();\n\n    return (\n        properties &&\n        project && (\n            <PropertiesTable\n                properties={properties}\n                setProperties={setProperties}\n                project={project}\n                admin={admin}\n            />\n        )\n    );\n};\n\nexport default Properties;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Properties from \"./Properties\";\nimport LayoutHOC from \"layout/Layout\";\nimport { Layout, PageHeader } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport propertyService from \"services/property.service\";\nimport projectService from \"services/project.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst PropertiesAdmin = (props) => {\n    const { id } = useParams();\n\n    const navigate = useNavigate();\n    const [project, setProject] = useState(null);\n    const [properties, setProperties] = useState(null);\n    useLoginCheck();\n\n    useEffect(() => {\n        propertyService.getProperty(id).then((response) => {\n            setProperties(response.data);\n        });\n\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(`/admin/projects/${id}`)}\n                    title={`Properties of project id: ${id}`}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"1200px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Properties\n                        admin\n                        id={id}\n                        setProject={setProject}\n                        setProperties={setProperties}\n                        project={project}\n                        properties={properties}\n                    />\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default PropertiesAdmin;\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport LayoutHOC from \"layout/Layout\";\nimport {\n    Button,\n    Form,\n    Input,\n    Layout,\n    List,\n    PageHeader,\n    Popconfirm,\n    Select,\n    Space,\n    Typography,\n    Upload,\n} from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport projectService from \"services/project.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\nimport toast from \"react-hot-toast\";\nimport YouTube from \"react-youtube\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport utilsService from \"services/utils.service\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\nimport uploadMedia from \"helpers/uploadMedia\";\n\nconst MediaAdmin = (props) => {\n    const { id } = useParams();\n    const formRef = useRef(null);\n\n    const navigate = useNavigate();\n    const [project, setProject] = useState(null);\n    useLoginCheck();\n\n    useEffect(() => {\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n\n    const onFinish = async (values) => {\n        const response = await projectService.addMedia(id, values);\n        if (response.data) {\n            toast.success(\"Saved\");\n            setProject(response.data);\n            if (formRef.current) formRef.current.resetFields();\n        }\n    };\n    const handleMove = async (mediaId, down) => {\n        const response = await projectService.moveMedia(id, mediaId, down);\n        if (response.data) {\n            toast.success(\"Moved\");\n            setProject(response.data);\n        }\n    };\n    const handleDelete = async (mediaId) => {\n        const response = await projectService.deleteMedia(id, mediaId);\n        if (response.data) {\n            toast.success(\"Deleted\");\n            setProject(response.data);\n        }\n    };\n\n    const customUpload = uploadMedia((values) => {\n        if (formRef.current) {\n            formRef.current.setFieldsValue({\n                ...formRef.current.values,\n                ...values,\n            });\n        }\n    }, formRef?.current?.getFieldValue(\"type\") === \"video\");\n\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(`/admin/projects/${id}`)}\n                    title={`Media of project id: ${id}`}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"1200px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    {project && project.media && (\n                        <div>\n                            <List\n                                itemLayout=\"vertical\"\n                                size=\"large\"\n                                dataSource={project.media}\n                                renderItem={(item, index) => (\n                                    <List.Item\n                                        key={item.id}\n                                        actions={[\n                                            <Button\n                                                size=\"small\"\n                                                key=\"up\"\n                                                onClick={() =>\n                                                    handleMove(item.id, false)\n                                                }\n                                            >\n                                                Move up\n                                            </Button>,\n                                            <Button\n                                                size=\"small\"\n                                                key=\"down\"\n                                                onClick={() =>\n                                                    handleMove(item.id, true)\n                                                }\n                                            >\n                                                Move down\n                                            </Button>,\n                                            <Popconfirm\n                                                title=\"Are you sure to delete this media?\"\n                                                onConfirm={() =>\n                                                    handleDelete(item.id)\n                                                }\n                                                okText=\"Yes\"\n                                                cancelText=\"No\"\n                                                key=\"delete\"\n                                            >\n                                                <Button size=\"small\" danger>\n                                                    Delete\n                                                </Button>\n                                            </Popconfirm>,\n                                        ]}\n                                        extra={\n                                            item.type === \"video\" ? (\n                                                <video\n                                                    id=\"my-player\"\n                                                    class=\"video-js\"\n                                                    controls\n                                                    preload=\"auto\"\n                                                    data-setup=\"{}\"\n                                                >\n                                                    <source\n                                                        src={item.url}\n                                                        type=\"video/mp4\"\n                                                    ></source>\n                                                    <p class=\"vjs-no-js\">\n                                                        To view this video\n                                                        please enable\n                                                        JavaScript, and consider\n                                                        upgrading to a web\n                                                        browser that\n                                                        <a\n                                                            href=\"https://videojs.com/html5-video-support/\"\n                                                            target=\"_blank\"\n                                                            rel=\"noreferrer\"\n                                                        >\n                                                            supports HTML5 video\n                                                        </a>\n                                                    </p>\n                                                </video>\n                                            ) : (\n                                                <img\n                                                    width=\"100%\"\n                                                    style={{\n                                                        maxWidth: \"300px\",\n                                                    }}\n                                                    alt=\"logo\"\n                                                    src={item.url}\n                                                />\n                                            )\n                                        }\n                                    >\n                                        <List.Item.Meta\n                                            description={item.type}\n                                            title={`${index + 1}. ${\n                                                item.name || \"no name\"\n                                            }`}\n                                        />\n                                        {item.url}\n                                    </List.Item>\n                                )}\n                            />\n                            <Form\n                                onFinish={onFinish}\n                                style={{\n                                    padding: \" 16px\",\n                                    maxWidth: \"500px\",\n                                    margin: \"auto\",\n                                    backgroundColor: \"#eee\",\n                                }}\n                                ref={formRef}\n                            >\n                                <Typography.Title level={4}>\n                                    Add new media\n                                </Typography.Title>\n                                <Form.Item\n                                    name=\"type\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Select placeholder=\"Choose type\">\n                                        <Select.Option value=\"photo\">\n                                            Photo\n                                        </Select.Option>\n                                        <Select.Option value=\"plan\">\n                                            Plan\n                                        </Select.Option>\n                                        <Select.Option value=\"video\">\n                                            Video\n                                        </Select.Option>\n                                    </Select>\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"name\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Input placeholder=\"Name\" />\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"url\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Input placeholder=\"Url\" readOnly />\n                                </Form.Item>\n                                <Form.Item name=\"thumbnail\" hidden>\n                                    <Input placeholder=\"Thumbnail\" />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Upload\n                                        accept=\"image/*,video/*\"\n                                        listType=\"picture\"\n                                        maxCount={1}\n                                        customRequest={customUpload}\n                                    >\n                                        <Button icon={<UploadOutlined />}>\n                                            Upload (Max: 1)\n                                        </Button>\n                                    </Upload>\n                                </Form.Item>\n\n                                <Form.Item>\n                                    <Button\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        style={{ width: \"100%\" }}\n                                    >\n                                        Add media\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    )}\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default MediaAdmin;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { Drawer, Layout, Menu, PageHeader } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport { useUser } from \"context/UserContext\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Properties from \"./Properties\";\nimport projectService from \"services/project.service\";\nimport propertyService from \"services/property.service\";\n\nconst PropertiesClient = (props) => {\n    const { id } = useParams();\n    const { logout, isLoggedIn, authData } = useUser();\n    const navigate = useNavigate();\n    const [project, setProject] = useState(null);\n    const [properties, setProperties] = useState(null);\n\n    const [openDrawer, setOpenDrawer] = useState(false);\n\n    useEffect(() => {\n        propertyService.getProperty(id).then((response) => {\n            setProperties(response.data);\n        });\n\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (\n            !isLoggedIn ||\n            (!authData?.super &&\n                id.toString() !== authData?.projectId.toString())\n        ) {\n            logout();\n            navigate(\"/login\");\n            return null;\n        }\n    }, [isLoggedIn, authData?.super, authData?.projectId]);\n\n    return (\n        <LayoutHOC loading={!properties || !project}>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => setOpenDrawer(true)}\n                    backIcon={<MenuOutlined />}\n                    title={\"Appartments\"}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"1200px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Properties\n                        id={id}\n                        setProject={setProject}\n                        setProperties={setProperties}\n                        project={project}\n                        properties={properties}\n                    />\n                </Content>\n            </Layout>\n            <Drawer\n                title=\"Menu\"\n                placement=\"left\"\n                onClose={() => setOpenDrawer(false)}\n                visible={openDrawer}\n            >\n                <Menu\n                    mode=\"inline\"\n                    style={{ width: \"100%\" }}\n                    onClick={({ item, key }) => {\n                        setOpenDrawer(false);\n                        switch (key) {\n                            case \"logout\":\n                                logout();\n                                break;\n                            case \"visit\":\n                                navigate(`/p/${project.url}`);\n                                break;\n                            case \"analytics\":\n                                navigate(`/p-admin/${project.id}/analytics`);\n                                break;\n                            default:\n                                return;\n                        }\n                    }}\n                    activeKey=\"properties\"\n                    selectedKeys={[\"properties\"]}\n                >\n                    <Menu.Item key=\"properties\">Properties</Menu.Item>\n                    <Menu.Item key=\"analytics\">Analytics</Menu.Item>\n                    <Menu.Item key=\"visit\">Visit project</Menu.Item>\n                    <Menu.Item key=\"logout\">Logout</Menu.Item>\n                </Menu>\n            </Drawer>\n        </LayoutHOC>\n    );\n};\n\nexport default PropertiesClient;\n","import history from \"helpers/history\";\nimport Layout from \"layout/Layout\";\nimport Admins from \"pages/Admins\";\nimport AnalyticClient from \"pages/AnalyticClient\";\nimport Constants from \"pages/Constants\";\nimport CreateProject from \"pages/CreateProject\";\nimport Login from \"pages/Login\";\nimport ProjectDetails from \"pages/ProjectDetails\";\nimport Projects from \"pages/Projects\";\nimport PropertiesAdmin from \"pages/PropertiesAdmin\";\nimport MediaAdmin from \"pages/MediaAdmin\";\nimport PropertiesClient from \"pages/PropertiesClient\";\nimport { lazy, Suspense } from \"react\";\nimport { Toaster } from \"react-hot-toast\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport ProjectA from \"pages/ProjectA\";\n\nconst Home = lazy(() => import(\"pages/Home\"));\nconst Project = lazy(() => import(\"pages/Project\"));\n\nconst ResetPassword = lazy(() => import(\"pages/ResetPassword\"));\n// const Preview = lazy(() => import(\"pages/Preview\"));\n\nfunction App() {\n    return (\n        <BrowserRouter history={history}>\n            <Suspense\n                fallback={<Layout>{/* <Spinner size={100} /> */}</Layout>}\n            >\n                <>\n                    <Toaster position=\"top-right\" />\n                    <Routes>\n                        <Route exact path={\"/\"} element={<Home />} />\n                        <Route path=\"/login\" element={<Login />} />\n                        <Route\n                            exact\n                            path=\"/admin\"\n                            element={<Projects />}\n                        ></Route>\n                        <Route\n                            exact\n                            path=\"/admin/projects/:id\"\n                            element={<ProjectDetails />}\n                        ></Route>\n                        <Route\n                            exact\n                            path=\"/admin/projects/create\"\n                            element={<CreateProject />}\n                        ></Route>\n                        <Route\n                            exact\n                            path=\"/admin/projects/:id/properties\"\n                            element={<PropertiesAdmin />}\n                        ></Route>\n                        <Route\n                            exact\n                            path=\"/admin/projects/:id/media\"\n                            element={<MediaAdmin />}\n                        ></Route>\n                        <Route\n                            exact\n                            path=\"/admin/contant\"\n                            element={<Constants />}\n                        ></Route>\n                        <Route\n                            exact\n                            path=\"/admin/admins\"\n                            element={<Admins />}\n                        ></Route>\n\n                        <Route\n                            path=\"/reset-password\"\n                            element={<ResetPassword />}\n                        ></Route>\n                        <Route\n                            exact\n                            path=\"/p/:id\"\n                            element={<Project />}\n                        ></Route>\n                        <Route exact path=\"/pa\" element={<ProjectA />}></Route>\n                        <Route\n                            exact\n                            path=\"/p-admin/:id\"\n                            element={<PropertiesClient />}\n                        ></Route>\n\n                        <Route\n                            exact\n                            path=\"/p-admin/:id/analytics\"\n                            element={<AnalyticClient />}\n                        ></Route>\n\n                        <Route\n                            path=\"*\"\n                            element={<h1>404 Error Found</h1>}\n                        ></Route>\n                    </Routes>\n                </>\n            </Suspense>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { UserProvider } from \"context/UserContext\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <HelmetProvider>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </HelmetProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst Layout = ({ children, title, loading, description, isProject }) => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{title || \"Home\"} | IMMERSIV </title>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={\r\n                        description ||\r\n                        \"IMMERSIV is a digital interactive sales experience for unbuilt environments\"\r\n                    }\r\n                />\r\n            </Helmet>\r\n\r\n            {loading ? null : (\r\n                <div style={{ flex: 1, display: isProject ? \"flex\" : \"block\" }}>\r\n                    {children}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import API from \"api/axios.config\";\r\n\r\nclass ProjectService {\r\n    getProject(id) {\r\n        return API.get(`/projects${id ? \"/\" + id : \"\"}`);\r\n    }\r\n\r\n    getProjectByUrl(id) {\r\n        return API.get(`/projects/url/${id}`);\r\n    }\r\n\r\n    getFeaturedProject() {\r\n        return API.get(`/projects/url/__featured__`);\r\n    }\r\n    saveProject(id, data) {\r\n        return API.put(`/projects/${id}`, data);\r\n    }\r\n    createProject(data) {\r\n        return API.post(`/projects`, data);\r\n    }\r\n    deleteProject(id) {\r\n        return API.delete(`/projects/${id}`);\r\n    }\r\n\r\n    addMedia(id, data) {\r\n        return API.post(`/projects/${id}/media`, data);\r\n    }\r\n    deleteMedia(id, mediaId) {\r\n        return API.delete(`/projects/${id}/media/${mediaId}`);\r\n    }\r\n    moveMedia(id, mediaId, down) {\r\n        return API.put(`/projects/${id}/media/${mediaId}`, null, {\r\n            params: { down: down ? \"true\" : \"false\" },\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ProjectService();\r\n"],"sourceRoot":""}