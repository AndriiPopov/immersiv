{"version":3,"sources":["components/ProjectView/Components/EmbededView/EmbededView.module.css","components/ProjectView/Layout/Contacts.module.css","components/ProjectView/Layout/ProjectView.module.css","components/ProjectView/Components/Loading/Loading.module.css","components/ProjectView/Layout/Button.jsx","components/ProjectView/Components/LoadingView/LoadingView.jsx","components/ProjectView/Components/EmbededView/EmbededView.jsx","components/ProjectView/Log.js","components/ProjectView/Components/StreamView/StreamView.jsx","components/ProjectView/Layout/PoweredLogo.jsx","components/ProjectView/Components/Loading/Loading.jsx","components/ProjectView/Layout/ProjectView.jsx","pages/Project.jsx","components/ProjectView/Layout/Button.module.css"],"names":["module","exports","Button","props","className","styles","wrap","href","link","name","PhoneFilled","button","MailFilled","LoadingView","StreamerStatus","Connected","Completed","setLoaded","NotSupported","content","LaunchRequestStatus","status","LaunchStatusType","Unavailable","Error","Failed","viewBox","fillRule","d","style","position","left","top","transform","textAlign","EmbeddedView","videoRef","useRef","handle","useFullScreenHandle","isIPhone","System","Browser","os","window","navigator","userAgent","includes","flex","fullscreen","Status","WarningThreshold","ExitThreshold","WarningCallback","exit","ExitCallback","location","reload","VideoRef","Emitter","InputEmitter","Stream","VideoStream","UseNativeTouchEvents","UsePointerLock","PointerLockRelease","onClick","enter","right","backgroundColor","borderColor","color","visibility","active","type","ExpandOutlined","LoggerProvider","getLogger","audio","Audio","autoplay","volume","platform","PlatformNext","initialize","endpoint","StreamView","project","useState","modelDefinitionUnavailable","setModelDefinitionUnavailable","UndefinedModelDefinition","modelDefinition","setModelDefinition","availableModels","setAvailableModels","launchRequestError","setLaunchRequestError","streamerOptions","DefaultStreamerOptions","useLaunchRequest","launchRequest","queueLaunchRequest","useStreamer","streamerStatus","emitter","videoStream","audioStream","loading","setLoading","useEffect","disconnect","srcObject","launch","a","load","LaunchType","useAsyncEffect","projectId","logger","info","useAnonymousCredentials","connect","agent","id","iceServers","serviceCredentials","forceRelay","ForceRelay","getModels","models","debug","error","length","selectedModels","filter","model","modelId","Version","version","setStatus","display","height","overflow","alignItems","justifyContent","Disconnected","Withdrawn","useNativeTouchEvents","isMobileAgent","StreamViewWrapper","IsBrowserSupported","PoweredLogo","invisible","src","alt","width","statusMessage","unknown","text","value","accepted","queued","requested","ready","serviced","cancelled","modelerror","unavailable","Loading","loaded","logo","center","video","autoPlay","loop","muted","objectFit","percent","marginBottom","trailColor","strokeColor","format","undefined","strokeWidth","paddingBottom","ProjectView","constant","useWindowSize","isMobile","flex1","viewWrap","viewInner","mLogo","mCenter","call","email","bottomWrap","bottomCenter","bottomCenterLeft","bottomCenterCenter","bottomCenterRight","contactWrap","contactIconWrap","contactIcon","contactText","phone","size","Project","projectData","setProjectData","setConstant","featured","useParams","projectService","getFeaturedProject","then","response","data","getProjectByUrl","constantService","getConstant","Layout","isProject"],"mappings":"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","file":"static/js/1.b5327e34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullscreen\":\"EmbededView_fullscreen__1m664\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Contacts_wrap__2WEXY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"ProjectView_wrap__iK_7o\",\"top\":\"ProjectView_top__2Rfxf\",\"center\":\"ProjectView_center__1yFTm\",\"viewWrap\":\"ProjectView_viewWrap__culxl\",\"viewInner\":\"ProjectView_viewInner__2j2X3\",\"bottomWrap\":\"ProjectView_bottomWrap__1TInE\",\"bottomCenter\":\"ProjectView_bottomCenter__2gorA\",\"bottomCenterLeft\":\"ProjectView_bottomCenterLeft__3-Zo4\",\"bottomCenterCenter\":\"ProjectView_bottomCenterCenter__3cPu7\",\"bottomCenterRight\":\"ProjectView_bottomCenterRight__g8Eh3\",\"contactWrap\":\"ProjectView_contactWrap__1svCq\",\"contactIconWrap\":\"ProjectView_contactIconWrap__3eQaN\",\"contactIcon\":\"ProjectView_contactIcon__3IXlv\",\"contactText\":\"ProjectView_contactText__7tRgI\",\"mLogo\":\"ProjectView_mLogo__JLCj5\",\"mCenter\":\"ProjectView_mCenter__1LiMo\",\"flex1\":\"ProjectView_flex1__1gebJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Loading_wrap__FOxXe\",\"logo\":\"Loading_logo___Qs_r\",\"center\":\"Loading_center__1Nf3i\",\"video\":\"Loading_video__OXbDo\"};","import React from \"react\";\n\nimport styles from \"./Button.module.css\";\nimport { MailFilled, PhoneFilled } from \"@ant-design/icons\";\n\nexport const Button = (props) => {\n    return (\n        <a className={styles.wrap} href={props.link}>\n            {props.name === \"phone\" ? (\n                <PhoneFilled className={styles.button}></PhoneFilled>\n            ) : (\n                <MailFilled className={styles.button}></MailFilled>\n            )}\n        </a>\n    );\n};\n","import React from \"react\";\nimport { LaunchStatusType, StreamerStatus } from \"@pureweb/platform-sdk\";\n\nexport const LoadingView = (props) => {\n    if (\n        props.StreamerStatus === StreamerStatus.Connected ||\n        props.StreamerStatus === StreamerStatus.Completed\n    ) {\n        props.setLoaded(true);\n        return <div />;\n    }\n\n    let content;\n\n    if (props.StreamerStatus === StreamerStatus.NotSupported) {\n        props.setLoaded(true);\n        content = (\n            <div>\n                <h3>\n                    Your browser does not support the necessary WebRTC\n                    capabilities.\n                </h3>\n            </div>\n        );\n    }\n    if (\n        props.LaunchRequestStatus.status === LaunchStatusType.Unavailable ||\n        props.LaunchRequestStatus.status === LaunchStatusType.Error ||\n        props.StreamerStatus === StreamerStatus.Failed\n    ) {\n        props.setLoaded(true);\n        content = (\n            <div>\n                <h3>The experience is presently unavailable.</h3>\n                <h3>Please refresh to request a new session.</h3>\n            </div>\n        );\n    } else {\n        content = (\n            <div>\n                <svg className=\"logo\" viewBox=\"410.5 265.5 90.12054 104.02344\">\n                    <g fillRule=\"nonzero\">\n                        <path d=\"M 495.4032 310.1983 L 484.1122 336.6803 C 483.9952 336.9373 483.8712 337.1633 483.7452 337.3853 L 459.3812 304.5723 L 477.0682 270.8543 C 478.1542 271.7123 478.9182 272.8703 479.6262 273.9833 L 480.0632 274.6613 L 495.0372 299.2173 C 495.9882 300.8173 496.5252 302.6543 496.5952 304.5553 C 496.6622 306.4163 496.2812 308.3503 495.4032 310.1983 M 448.9282 347.3083 C 448.5962 350.9113 448.2602 354.5423 447.7532 358.1613 C 447.2272 361.2263 446.4642 363.1463 445.4102 364.2293 C 444.4962 365.1683 443.2082 365.5153 441.5212 365.5073 L 434.7122 365.5073 C 431.3752 365.3863 430.9012 363.7163 429.4212 358.4833 C 429.1172 357.4093 428.7792 356.2143 428.4382 355.0733 C 428.3492 354.9843 419.5002 325.7033 417.1802 318.0873 L 437.5242 340.7223 C 438.4982 341.7353 439.5882 342.6203 440.7782 343.2493 C 441.9062 343.8473 443.1252 344.2143 444.4232 344.2493 L 449.2172 344.2233 C 449.1232 345.2093 449.0262 346.2453 448.9282 347.3083 M 475.7822 340.0613 C 475.7812 340.0613 475.7802 340.0623 475.7782 340.0623 C 475.7772 340.0623 475.7762 340.0613 475.7742 340.0613 L 444.5222 340.2333 C 443.8962 340.2143 443.2662 340.0153 442.6522 339.6903 C 441.8882 339.2863 441.1522 338.6853 440.4682 337.9813 L 416.1402 310.9083 C 415.7802 310.5073 415.4802 310.1443 415.2322 309.7873 L 455.7092 306.3673 L 480.4472 339.6853 C 479.2762 339.9463 477.7772 340.0643 475.7822 340.0613 M 430.4182 282.5003 C 431.9252 280.3873 433.5952 278.7143 435.5382 277.4503 C 437.4782 276.1883 439.7352 275.3073 442.4212 274.7693 L 471.2542 269.7603 C 471.9712 269.6263 472.6072 269.5813 473.2012 269.5833 L 456.0442 302.2923 C 456.0402 302.2933 456.0382 302.2953 456.0352 302.2963 L 414.7762 305.7823 C 414.9612 305.1193 415.2262 304.4623 415.6132 303.8563 L 430.4182 282.5003 M 498.4782 297.1393 C 494.8552 289.8933 487.6422 278.9223 483.0092 271.8113 C 480.7722 268.3063 478.2572 264.3733 470.5452 265.8003 L 441.6342 270.8183 C 438.4552 271.4533 435.7392 272.5253 433.3502 274.0793 C 430.9652 275.6313 428.9412 277.6463 427.1432 280.1703 C 422.2182 287.3093 417.2882 294.6593 412.2272 301.6833 C 411.5152 302.7953 411.0152 304.0283 410.7322 305.2793 C 410.5422 306.1473 410.5022 307.0243 410.5322 307.8933 C 410.5272 307.9843 410.4932 308.0683 410.5012 308.1613 C 410.5022 308.1823 410.5152 308.1983 410.5172 308.2183 C 410.5192 308.2443 410.5082 308.2683 410.5112 308.2943 C 410.5252 308.4063 410.5592 308.4853 410.5762 308.5923 C 410.5942 308.7653 410.5812 308.9443 410.6092 309.1163 C 411.0622 311.8913 412.0262 315.0063 412.9092 317.8673 L 424.5782 356.2233 C 424.9802 357.5693 425.2792 358.6233 425.5472 359.5703 C 427.6332 366.9413 428.3002 369.2943 434.5702 369.5223 L 441.5212 369.5233 C 444.2902 369.5343 446.5132 368.8593 448.2922 367.0323 C 449.9312 365.3483 451.0502 362.7473 451.7222 358.8383 L 451.7302 358.7753 C 452.2332 355.1963 452.5822 351.4193 452.9282 347.6713 C 453.0292 346.5673 453.1382 345.4223 453.2582 344.2013 L 475.7902 344.0773 C 475.7912 344.0773 475.7912 344.0763 475.7912 344.0763 C 479.2552 344.0813 481.6612 343.7543 483.4982 342.9103 C 485.5602 341.9623 486.8052 340.4913 487.7962 338.2863 L 499.0572 311.8803 C 500.2042 309.4543 500.7002 306.8953 500.6102 304.4133 C 500.5162 301.8253 499.7812 299.3223 498.4782 297.1393\" />\n                    </g>\n                </svg>\n                <h3>Please wait, your session is loading.</h3>\n            </div>\n        );\n    }\n    return (\n        <div\n            style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n            }}\n        >\n            <div style={{ textAlign: \"center\" }}>{content}</div>\n        </div>\n    );\n};\n","import { IdleTimeout, VideoStream, System } from \"@pureweb/platform-sdk-react\";\nimport React, { useRef } from \"react\";\nimport { LoadingView } from \"../LoadingView/LoadingView\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\n\nimport { StreamerStatus } from \"@pureweb/platform-sdk\";\nimport styles from \"./EmbededView.module.css\";\nimport { Button } from \"antd\";\nimport { ExpandOutlined } from \"@ant-design/icons\";\n\nexport const EmbeddedView = (props) => {\n    const videoRef = useRef(null);\n    const handle = useFullScreenHandle();\n    // Fullscreen API presently supported on iPad, but not iPhone or iPod\n    const isIPhone =\n        System.Browser().os === \"iOS\" &&\n        !window.navigator.userAgent.includes(\"iPad\");\n\n    // useEffect(() => {\n    //     const updateVideoScale = () => {\n    //         const box = videoRef.current;\n    //         if (box) {\n    //             const width = box.offsetWidth;\n    //             const height = box?.offsetHeight;\n    //             const presetRatio = 16 / 9;\n    //             const actualRatio = width / height;\n    //             if (actualRatio > presetRatio) {\n    //                 box.style.transform = `scale(${\n    //                     actualRatio / presetRatio\n    //                 }, 1)`;\n    //             } else {\n    //                 box.style.transform = `scale(1, ${\n    //                     presetRatio / actualRatio\n    //                 })`;\n    //             }\n    //         }\n    //     };\n\n    //     updateVideoScale();\n\n    //     window.addEventListener(\"resize\", updateVideoScale);\n    //     return () => window.removeEventListener(\"resize\", updateVideoScale);\n    // }, []);\n    return (\n        <div style={{ flex: 1, position: \"relative\" }}>\n            <FullScreen handle={handle} className={styles.fullscreen}>\n                <IdleTimeout\n                    Status={props.StreamerStatus}\n                    WarningThreshold={300}\n                    ExitThreshold={120}\n                    WarningCallback={handle.exit}\n                    ExitCallback={() => window.location.reload()} // TODO: How to 'close' a contribution?\n                />\n\n                <LoadingView\n                    LaunchRequestStatus={props.LaunchRequestStatus}\n                    StreamerStatus={props.StreamerStatus}\n                    setLoaded={props.setLoaded}\n                />\n                <VideoStream\n                    VideoRef={videoRef}\n                    Emitter={props.InputEmitter}\n                    Stream={props.VideoStream}\n                    UseNativeTouchEvents={props.UseNativeTouchEvents}\n                    UsePointerLock={props.UsePointerLock}\n                    PointerLockRelease={props.PointerLockRelease}\n                />\n\n                <Button\n                    onClick={handle.enter}\n                    style={{\n                        position: \"absolute\",\n                        top: 10,\n                        right: 10,\n                        backgroundColor: \"rgba(0,0,0,0.4)\",\n                        borderColor: \"#777777\",\n                        color: \"white\",\n                        visibility:\n                            isIPhone ||\n                            handle.active ||\n                            props.StreamerStatus !== StreamerStatus.Connected\n                                ? \"hidden\"\n                                : \"visible\",\n                    }}\n                    type=\"default\"\n                >\n                    <ExpandOutlined />\n                </Button>\n            </FullScreen>\n        </div>\n    );\n};\n","import { LoggerProvider } from \"@pureweb/platform-sdk\";\nexport default LoggerProvider.getLogger(\"client\");\n","import {\n    ModelDefinition,\n    PlatformNext,\n    UndefinedModelDefinition,\n    DefaultStreamerOptions,\n    StreamerStatus,\n} from \"@pureweb/platform-sdk\";\n\nimport {\n    useStreamer,\n    useLaunchRequest,\n    System,\n} from \"@pureweb/platform-sdk-react\";\n\nimport React, { useEffect, useState } from \"react\";\nimport useAsyncEffect from \"use-async-effect\";\nimport \"./StreamView.css\";\n\nimport { EmbeddedView } from \"../EmbededView/EmbededView\";\n\nimport logger from \"../../Log\";\nimport { isMobile as isMobileAgent } from \"react-device-detect\";\n\nconst audio = new Audio();\naudio.autoplay = true;\naudio.volume = 0.5;\n\n// Initialize platform reference\nconst platform = new PlatformNext();\nplatform.initialize({\n    endpoint: \"https://api.pureweb.io\",\n});\n\nconst StreamView = (props) => {\n    const { project } = props;\n\n    const [modelDefinitionUnavailable, setModelDefinitionUnavailable] =\n        useState(false);\n    const [modelDefinition, setModelDefinition] = useState(\n        new UndefinedModelDefinition()\n    );\n    const [availableModels, setAvailableModels] = useState();\n    const [launchRequestError, setLaunchRequestError] = useState();\n    const streamerOptions = DefaultStreamerOptions;\n\n    const [status, launchRequest, queueLaunchRequest] = useLaunchRequest(\n        platform,\n        modelDefinition,\n        {}\n    );\n    const [streamerStatus, emitter, videoStream, audioStream] = useStreamer(\n        platform,\n        launchRequest,\n        streamerOptions\n    );\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (streamerStatus === StreamerStatus.Failed) {\n            platform.disconnect();\n        }\n    }, [streamerStatus]);\n\n    if (audioStream) {\n        audio.srcObject = audioStream;\n    }\n\n    const launch = async () => {\n        setLoading(true);\n        audio.load();\n\n        if (project.LaunchType !== \"local\") {\n            try {\n                await queueLaunchRequest();\n            } catch (err) {\n                setLaunchRequestError(err);\n            }\n        }\n    };\n    useAsyncEffect(async () => {\n        if (project.projectId) {\n            logger.info(\"Initializing available models: \" + project.projectId);\n            try {\n                await platform.useAnonymousCredentials(project.projectId);\n                await platform.connect();\n                logger.info(\"Agent Connected: \" + platform.agent.id);\n                streamerOptions.iceServers =\n                    platform.agent.serviceCredentials.iceServers;\n                streamerOptions.forceRelay = project.ForceRelay;\n                const models = await platform.getModels();\n                setAvailableModels(models);\n                logger.debug(\"Available models\", models);\n            } catch (err) {\n                logger.error(err);\n            }\n        }\n    }, [project]);\n    useEffect(() => {\n        if (availableModels?.length) {\n            const selectedModels = availableModels.filter(function (\n                model: ModelDefinition\n            ): boolean {\n                if (project.modelId === model.id) {\n                    // If there is a version specified and we encounter it\n                    if (project.Version && project.Version === model.version) {\n                        return true;\n                    }\n                    // If there is no version specified and we find the primary version\n                    if (!project.Version && model.active) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n            if (selectedModels?.length) {\n                setModelDefinition(selectedModels[0]);\n            } else {\n                setModelDefinitionUnavailable(true);\n            }\n        }\n    }, [availableModels]);\n\n    useEffect(() => {\n        if (modelDefinition.type === 0) return;\n\n        launch();\n    }, [modelDefinition]);\n\n    // Log status messages\n    useEffect(() => {\n        logger.info(\"Status\", status, streamerStatus);\n        props.setStatus(status);\n    }, [status, streamerStatus]);\n    // Notify user of missing or errors in configuration\n    if (!project.modelId || !project.projectId) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <p>\n                    Your client has one or more configuration errors. Please\n                    consult the{\" \"}\n                    <a href=\"https://www.npmjs.com/package/@pureweb/cra-template-pureweb-client\">\n                        {\" \"}\n                        README{\" \"}\n                    </a>{\" \"}\n                    for details on how to configure the client template.\n                </p>\n            </div>\n        );\n    }\n\n    if (modelDefinitionUnavailable) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <span>The model that you have requested does not exist</span>\n            </div>\n        );\n    }\n\n    if (launchRequestError) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <span>\n                    {process.env.NODE_ENV === \"development\"\n                        ? `There was an error with the launch request: ${launchRequestError}`\n                        : \"It appears the requested model is currently not online as per your set schedule. Please contact support if it should be available.\"}\n                </span>\n            </div>\n        );\n    }\n\n    // Begin connection\n    if (streamerStatus === StreamerStatus.Disconnected) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <h2>Disconnected from stream</h2>\n            </div>\n        );\n    }\n\n    if (streamerStatus === StreamerStatus.Failed) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <h2>Failure during stream</h2>\n                <h2>Please refresh to request a new session</h2>\n            </div>\n        );\n    }\n\n    if (streamerStatus === StreamerStatus.Withdrawn) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <h2>Streamer contribution withdrawn</h2>\n            </div>\n        );\n    }\n\n    if (loading) {\n        const useNativeTouchEvents =\n            !!project[\n                isMobileAgent ? \"mobileNativeEvents\" : \"desktopNativeEvents\"\n            ];\n        return (\n            <EmbeddedView\n                VideoStream={videoStream}\n                StreamerStatus={streamerStatus}\n                LaunchRequestStatus={status}\n                InputEmitter={emitter}\n                UseNativeTouchEvents={useNativeTouchEvents}\n                UsePointerLock={project.UsePointerLock}\n                PointerLockRelease={project.PointerLockRelease}\n                setLoaded={props.setLoaded}\n            />\n        );\n    } else if (project.LaunchType !== \"local\" && !availableModels) {\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <h2>Initializing...</h2>\n            </div>\n        );\n    } else if (project.LaunchType !== \"local\" && !availableModels?.length) {\n        props.setLoaded(true);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    height: \"100%\",\n                    overflow: \"none\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                }}\n            >\n                <h2>No models are currently available in this environment.</h2>\n            </div>\n        );\n    } else {\n        return null;\n    }\n};\n\nconst StreamViewWrapper = (props) => {\n    return System.IsBrowserSupported() ? (\n        <div\n            style={{\n                backgroundColor: \"black\",\n                height: \"100%\",\n                flex: 1,\n                display: \"flex\",\n                color: \"white\",\n            }}\n        >\n            <StreamView\n                setLoaded={props.setLoaded}\n                setStatus={props.setStatus}\n                project={props.project}\n            />\n        </div>\n    ) : (\n        <div className=\"ui red segment center aligned basic\">\n            <h2 className=\"header\">Your browser is currently unsupported</h2>\n        </div>\n    );\n};\n\nexport default StreamViewWrapper;\n","import React from \"react\";\nimport styles from \"./Contacts.module.css\";\n\nexport const PoweredLogo = (props) => {\n    return (\n        <div\n            className={styles.wrap}\n            style={{\n                visibility: props.invisible ? \"hidden\" : \"visible\",\n            }}\n        >\n            Powered by\n            <img\n                src=\"/images/logo-black.png\"\n                alt=\"logo\"\n                style={{ width: \"150px\" }}\n            />\n        </div>\n    );\n};\n","import { Progress } from \"antd\";\nimport React from \"react\";\n\nimport styles from \"./Loading.module.css\";\n\nconst statusMessage = {\n    unknown: { text: \"Initializing your connection\", value: 10 },\n    accepted: { text: \"Accepted, requesting model\", value: 30 },\n    queued: { text: \"In queue\", value: 50 },\n    requested: { text: \"Model requested\", value: 70 },\n    ready: { text: \"Ready, 3D session launching\", value: 100 },\n    serviced: { text: \"Viewing model\" },\n    cancelled: { text: \"Cancelled\" },\n    modelerror: { text: \"An issue with the model has occurred\" },\n    unavailable: { text: \"The requested model does not exist\" },\n};\n\nexport const Loading = (props) => {\n    const { loaded, status } = props;\n    return loaded ? null : (\n        <div className={styles.wrap}>\n            <img\n                src=\"/images/logo-white.png\"\n                alt=\"logo\"\n                className={styles.logo}\n            />\n            <div className={styles.center}>\n                <div className={styles.video}>\n                    <video autoPlay loop muted style={{ objectFit: \"contain\" }}>\n                        <source\n                            src={\"/videos/Immersiv-logo.mp4\"}\n                            type=\"video/mp4\"\n                        />\n                    </video>\n                </div>\n            </div>\n            {status?.status && statusMessage[status.status]?.value && (\n                <Progress\n                    type=\"circle\"\n                    percent={statusMessage[status.status].value}\n                    style={{ marginBottom: 20 }}\n                    trailColor=\"black\"\n                    strokeColor={{\n                        \"0%\": \"#108ee9\",\n                        \"100%\": \"#87d068\",\n                    }}\n                    format={\n                        statusMessage[status.status]?.value !== 100\n                            ? (percent) => (\n                                  <span style={{ color: \"white\" }}>\n                                      {percent}%\n                                  </span>\n                              )\n                            : undefined\n                    }\n                    strokeWidth={3}\n                />\n            )}\n            <div style={{ paddingBottom: \"100px\" }}>\n                {status?.status\n                    ? statusMessage[status?.status]?.text ||\n                      statusMessage[status?.status]\n                    : \"Initializing...\"}\n            </div>\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport { Button } from \"./Button\";\n\nimport StreamViewWrapper from \"../Components/StreamView/StreamView\";\nimport { PoweredLogo } from \"./PoweredLogo\";\n\nimport styles from \"./ProjectView.module.css\";\nimport { MailFilled, PhoneFilled } from \"@ant-design/icons\";\nimport { isMobile as isMobileAgent } from \"react-device-detect\";\n\nimport { useWindowSize } from \"@react-hook/window-size\";\nimport { Loading } from \"components/ProjectView/Components/Loading/Loading\";\nconst ProjectView = (props) => {\n    const { project, constant } = props;\n    const [width, height] = useWindowSize();\n    const isMobile = isMobileAgent || width < 1200 || height < 700;\n    const [loaded, setLoaded] = useState(false);\n    const [status, setStatus] = useState(false);\n\n    return (\n        <>\n            <div className={isMobile ? styles.flex1 : styles.wrap}>\n                {!isMobile && <div className={styles.top}>{project.name}</div>}\n                <div className={isMobile ? styles.flex1 : styles.center}>\n                    {!isMobile && <PoweredLogo invisible />}\n                    <div className={isMobile ? styles.flex1 : styles.viewWrap}>\n                        <div\n                            className={\n                                isMobile ? styles.flex1 : styles.viewInner\n                            }\n                        >\n                            <StreamViewWrapper\n                                setLoaded={setLoaded}\n                                setStatus={setStatus}\n                                project={project}\n                            />\n                            {isMobile && (\n                                <>\n                                    {loaded && (\n                                        <img\n                                            src=\"/images/logo-white.png\"\n                                            alt=\"logo\"\n                                            className={styles.mLogo}\n                                        />\n                                    )}\n                                    <div className={styles.mCenter}>\n                                        <Button\n                                            link={`tel:${constant.call}`}\n                                            name=\"phone\"\n                                        ></Button>\n                                        <Button\n                                            link={`mailto:${constant.email}`}\n                                            name=\"mail\"\n                                        ></Button>\n                                    </div>\n                                </>\n                            )}\n                        </div>\n                    </div>\n                    {!isMobile && <PoweredLogo />}\n                </div>\n                {!isMobile && (\n                    <div className={styles.bottomWrap}>\n                        <PoweredLogo invisible />\n\n                        <div className={styles.bottomCenter}>\n                            <div className={styles.bottomCenterLeft}>\n                                <img\n                                    src=\"/images/controls.png\"\n                                    alt=\"logo\"\n                                    style={{ width: \"100%\" }}\n                                />\n                            </div>\n                            <div className={styles.bottomCenterCenter}>\n                                {project.logo && (\n                                    <img\n                                        src=\"/images/imperial-logo.png\"\n                                        alt=\"logo\"\n                                        style={{ height: \"120px\" }}\n                                    />\n                                )}\n                            </div>\n                            <div className={styles.bottomCenterRight}>\n                                <a\n                                    href={`tel:${constant.call}`}\n                                    className={styles.contactWrap}\n                                >\n                                    <div className={styles.contactIconWrap}>\n                                        <PhoneFilled\n                                            name=\"phone\"\n                                            className={styles.contactIcon}\n                                        />\n                                    </div>\n                                    <div style={{ width: \"10px\" }}></div>\n                                    <div className={styles.contactText}>\n                                        {constant.phone}\n                                    </div>\n                                </a>\n                                {/* <div style={{ height: \"20px\" }}></div> */}\n                                <a\n                                    href={`mailto:${constant.email}`}\n                                    className={styles.contactWrap}\n                                >\n                                    <div className={styles.contactIconWrap}>\n                                        <MailFilled\n                                            name=\"mail\"\n                                            size=\"small\"\n                                            className={styles.contactIcon}\n                                        />\n                                    </div>\n                                    <div style={{ width: \"10px\" }}></div>\n                                    <div className={styles.contactText}>\n                                        {constant.email}\n                                    </div>\n                                </a>\n                            </div>\n                        </div>\n                        <PoweredLogo invisible />\n                    </div>\n                )}\n            </div>\n            <Loading loaded={loaded} status={status} />\n        </>\n    );\n};\n\nexport default ProjectView;\n","import ProjectView from \"components/ProjectView/Layout/ProjectView\";\nimport Layout from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\nimport projectService from \"services/project.service\";\nimport { useParams } from \"react-router-dom\";\nimport constantService from \"services/constant.service\";\n\nconst Project = (props) => {\n    const [projectData, setProjectData] = useState(null);\n    const [constant, setConstant] = useState({});\n\n    const { featured } = props;\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        setProjectData(null);\n        if (featured)\n            projectService.getFeaturedProject().then((response) => {\n                setProjectData(response.data);\n            });\n        else\n            projectService.getProjectByUrl(id).then((response) => {\n                setProjectData(response.data);\n            });\n\n        constantService.getConstant().then((response) => {\n            if (response.data) setConstant(response.data);\n        });\n    }, [id, featured]);\n    return (\n        <Layout loading={!projectData} isProject>\n            <ProjectView project={projectData} constant={constant} />\n        </Layout>\n    );\n};\n\nexport default Project;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__lgQa7\",\"wrap\":\"Button_wrap__2Fic_\"};"],"sourceRoot":""}