{"version":3,"sources":["services/auth.service.js","components/ProjectView/Components/ProjectUI/Bottom/Gallery/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/AdminButton/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/ButtonUI/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/FloorPlan/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/ApartmentContols/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/FilterControls/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/LocationControls/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/SunControls/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/UIButtons/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/InfoButton/index.jsx","components/ProjectView/Components/ProjectUI/Bottom/RoomsControls/index.jsx","components/ProjectView/Components/ProjectUI/AppUI/index.jsx","services/constant.service.js","pages/ProjectA.jsx","api/axios.config.js","services/project.service.js","layout/Layout.jsx","helpers/history.js","helpers/WithAxios.js","context/UserContext.jsx","services/admin.service.js","hooks/useLoginCheck.js","pages/Admins.jsx","services/ga.service.js","components/DashboardItem/DataItems/ChartItem/ChartItem.js","pages/AnalyticClient.jsx","pages/Constants.jsx","services/utils.service.js","helpers/uploadMedia.js","components/ProjectFormFields.jsx","pages/CreateProject.jsx","components/ForgotPasswordModal.jsx","pages/Login.jsx","pages/ProjectDetails.jsx","pages/Projects.jsx","services/property.service.js","components/ProjectView/Components/PropertiesTable.jsx","pages/Properties.jsx","pages/PropertiesAdmin.jsx","pages/MediaAdmin.jsx","pages/PropertiesClient.jsx","helpers/activateSVGSaver.js","pages/UIAdmin.jsx","pages/GalleryPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["AuthService","email","password","a","API","post","data","token","localStorage","removeItem","password2","username","get","Container","styled","div","isPage","open","Inner","Gallery","project","activeUI","uiData","useState","tab","setTab","slide","setSlide","dimensionsW","setDimensionsW","ref","useRef","useEffect","getContainerSize","current","width","clientWidth","height","clientHeight","window","addEventListener","media","images","filter","i","type","map","index","original","url","thumbnail","description","name","originalClass","thumbnailClass","vimeo","renderItem","k","style","paddingTop","controls","playsinline","position","top","left","renderThumbInner","right","bottom","preload","autoPlay","muted","src","class","href","target","rel","id","handleTabClick","newTab","includes","backgroundColor","background","hex","className","onClick","undefined","items","showBullets","showFullscreenButton","showPlayButton","thumbnailPosition","onSlide","startIndex","MoreButton","Button","props","adminSide","Overlay","AdminButton","setUiData","button","hideControls","isModalOpen","setIsModalOpen","hide","shape","icon","MoreOutlined","title","footer","destroyOnClose","onCancel","labelCol","span","wrapperCol","onFinish","values","prevState","initialValues","Item","label","valuePropName","offset","htmlType","getCustomColorsStyles","ButtonUI","onUnclick","visible","admin","hideHidden","isActive","isVisible","v","length","refinedTitle","FloorPlan","onClose","setActiveUI","display","size","Backdrop","Inner2","Top","Details","NameContainer","Name","Price","Availability","FacadeName","Stats","StatContainer","StatText","Bottom","BottomInner","ButtonContainer","ButtonText","Close","Stat","children","AdminElem","ApartmentControls","emitUIInteraction","chosenApratment","isFloorPlanOpen","setIsFloorPlanOpen","apartment","BedroomsCount","BathroomsCount","Surface","Frontage","Depth","URLPlan","URLVirtualTour","Url","properties","find","parseInt","pointerEvents","HideApartmentInfo","format","prefix","transform","focus","ButtonsContainer","SelectMulti","options","propValue","value","onChange","CheckableTag","checked","color","FilterControls","Form","useForm","form","valuesState","setValuesState","margin","resetFields","ResetFilters","layout","Orientation","onValuesChange","min","max","step","defaultValue","LocationControls","Array","levelsCount","_level","Location","table","TR","tr","TD0","td","TD1","TD2","SunControls","time","Time","tooltip","formatter","SunPosition","UIButtons","HomeOutlined","Home","PictureOutlined","Nearby","SearchOutlined","Filter","Materials","Teleport","InteriorInfo","Discover","Level","Sun","LevelView","onlyInterior","ClockCircleOutlined","CloseButton","InfoButton","isOpen","setIsOpen","forceRender","RoomsControls","rooms","split","room","Room","InfoContainer","AppUI","propsC","zIndex","textColor","buttonColor","buttonHoverColor","hover","ConstantService","put","ProjectA","setVideoInitialized","sizeContainerRef","containerRef","videoRef","webrtcClient","setWebrtcClient","webrtcClientInit","setChosenApartment","debouncedChangeHandler","useCallback","throttle","message","console","log","leading","responseCallback","videoInitialized","args","address","arcwareAddress","packageId","arcwarePackageId","settings","autoplay","video","audio","sizeContainer","container","playOverlay","loader","applicationResponse","videoInitializeCallback","WebRTCClient","flex","newUI","axios","create","baseURL","withCredentials","interceptors","request","use","req","getItem","headers","error","Promise","reject","ProjectService","delete","mediaId","down","params","Layout","loading","isProject","content","createBrowserHistory","WithAxios","useUser","isInitiated","logout","response","originalRequest","config","status","resolve","history","push","_retry","res","setItem","UserContext","createContext","UserProvider","authData","setAuthData","isLoggedIn","setIsLoggedIn","setIsInitiated","getTokenData","decoded","jwt_decode","Provider","setUserState","setUserInfo","authService","context","useContext","Error","useLoginCheck","navigate","useNavigate","super","projectId","Admins","formRef","admins","setAdmins","editModalOpen","setEditModalOpen","adminService","getAdmin","then","createAdmin","toast","success","deleteAdmin","onBack","boxShadow","overflow","padding","maxWidth","rules","required","placeholder","itemLayout","dataSource","sort","b","actions","overlay","onConfirm","okText","cancelText","danger","trigger","fontSize","borderBottom","paddingLeft","Meta","locked","metrics","dimensions","period","start","finish","ChartItem","column","seconds","isDate","dataRefined","humanizeString","columnHeaders","replace","rows","moment","chartType","legend","chartArea","allowHtml","AnalyticClient","useParams","setProject","dateData","setDateData","cityData","setCityData","deviceData","setDeviceData","sourceData","setSourceData","subtract","setPeriod","toString","projectService","getProject","getMetricData","gaService","getGA","catch","err","RangePicker","m","allowClear","textAlign","flexDirection","flexWrap","alignItems","justifyContent","xKey","valKey","Constants","constants","setConstants","constantService","getConstant","setFieldsValue","saveConstant","isVideo","isLogo","uploadMedia","cb","action","file","filename","onError","onProgress","onSuccess","utilsService","signUrl","signedRequest","s3res","Logo","customUploadClientLogo","image","setImage","setTimeout","maxHeight","LoadingOutlined","marginTop","customRequest","showUploadList","maxCount","getValueFromEvent","ProjectFormFields","extra","hidden","CreateProject","createProject","ForgotPasswordModal","forgotPassword","UserOutlined","Login","isLoading","setIsLoading","redirectToReferrer","setRedirectToReferrer","login","Title","marginBottom","Password","LockOutlined","ProjectDetails","saveProject","projectAddress","galleryAddress","propertiesAddress","projectName","useWatch","clientLogo","clientLogoMaxWidth","clientLogoMaxHeight","projectLogo","projectLogoMaxWidth","projectLogoMaxHeight","Paragraph","copy","val","getFieldsValue","alt","Projects","projects","setProjects","openDrawer","setOpenDrawer","deleteProject","setFeatured","featured","backIcon","MenuOutlined","Divider","avatar","StarFilled","published","EyeFilled","EyeInvisibleFilled","placement","mode","item","key","activeKey","selectedKeys","ids","Option","Select","transferOrientationToObject","o","indexOf","N","S","E","W","transferOrientationToString","EditableCell","editing","dataIndex","inputType","property","restProps","inputNode","PropertiesTable","setProperties","selectedProperties","setSelectedProperties","editingKey","setEditingKey","isEditing","cancel","save","validateFields","propertyService","saveProperty","deleteProperty","mergedColumns","sorter","sortDirections","editable","onFilter","render","_","str","charAt","toUpperCase","slice","toLowerCase","Link","marginRight","disabled","edit","col","onCell","onAddProperty","createProperty","newProperties","newProperty","document","querySelector","scrollTop","component","components","body","cell","bordered","d","columns","rowClassName","rowSelection","selectedRows","pagination","tableLayout","scroll","y","Properties","getProperty","PropertiesAdmin","MediaAdmin","addMedia","handleMove","moveMedia","handleDelete","deleteMedia","customUpload","getFieldValue","level","accept","listType","UploadOutlined","PropertiesClient","activateSVGSaver","withStyles","doctype","URL","webkitURL","emptySvg","download","source","createObjectURL","Blob","createElement","appendChild","setAttribute","click","revokeObjectURL","documents","SVGSources","iframes","querySelectorAll","objects","createElementNS","emptySvgDeclarationComputed","getComputedStyle","forEach","call","el","contentDocument","doc","newSources","svgInfo","svgs","svg","removeAttribute","hasAttributeNS","setAttributeNS","explicitlySetStyle","element","len","cSSStyleDeclarationComputed","computedStyleStr","getPropertyValue","traverse","obj","tree","visit","node","hasChildNodes","child","firstChild","nodeType","nodeName","nextSibling","allElements","setInlineStyles","XMLSerializer","serializeToString","rect","getBoundingClientRect","getAttribute","childElementCount","getSources","sources","crowbarElements","parentNode","removeChild","cleanup","s1","s2","Math","abs","buttonsContainer","buttonWrapper","scrollLeft","textContent","onclick","createPopover","alert","initialize","UIAdmin","loaded","setLoaded","isSavingSVG","setIsSavingSVG","setHideHidden","setHideControls","paddingBottom","e","disableAlpha","GalleryPage","projectData","setProjectData","useSearchParams","searchParams","getFeaturedProject","getProjectByUrl","lazy","Project","ResetPassword","App","fallback","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d8ab5873.chunk.js","sourcesContent":["import API from \"api/axios.config\";\r\n\r\nclass AuthService {\r\n    async login(email, password) {\r\n        const { data } = await API.post(\"/auth/login\", {\r\n            email,\r\n            password,\r\n        });\r\n        return data;\r\n    }\r\n\r\n    async googleLogin(token) {\r\n        const { data } = await API.post(\"/auth/google\", {\r\n            token,\r\n        });\r\n        return data;\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"expiresAt\");\r\n    }\r\n\r\n    forgotPassword(email) {\r\n        return API.post(\"/auth/forgot-password\", {\r\n            email,\r\n        });\r\n    }\r\n\r\n    checkToken(token, email) {\r\n        return API.post(\"auth/check-token\", {\r\n            token,\r\n            email,\r\n        });\r\n    }\r\n\r\n    resetPassword(token, email, password, password2) {\r\n        return API.post(\"auth/reset-password\", {\r\n            token,\r\n            email,\r\n            password,\r\n            password2,\r\n        });\r\n    }\r\n\r\n    register(username, email, password) {\r\n        return API.post(\"auth/signup\", {\r\n            username,\r\n            email,\r\n            password,\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return API.get(\"/users/profile\");\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport ImageGallery from \"react-image-gallery\";\nimport styled from \"styled-components\";\nimport ReactPlayer from \"react-player\";\n\nconst Container = styled.div`\n  top: 0px;\n  bottom: ${({ isPage }) => (isPage ? 0 : \"50px\")};\n  left: 0px;\n  right: 0px;\n  padding: 50px 10px 10px;\n  position: absolute;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  height: 100%;\n`;\n\nconst Gallery = ({ project, activeUI, uiData, open }) => {\n  const [tab, setTab] = useState(\"\");\n  const [slide, setSlide] = useState(0);\n  const [dimensionsW, setDimensionsW] = useState({});\n  const ref = useRef();\n\n  useEffect(() => {\n    setSlide(0);\n  }, [tab]);\n\n  const getContainerSize = () => {\n    if (ref.current)\n      setDimensionsW({\n        width: ref.current.clientWidth,\n        height: ref.current.clientHeight,\n      });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", getContainerSize);\n    getContainerSize();\n  }, []);\n  if (!project) return null;\n  const { media } = project;\n  const images =\n    media\n      ?.filter((i) => (tab ? tab === i.type : true))\n      .map((i, index) => {\n        if (i.type !== \"video\") {\n          return {\n            ...i,\n            original: i.url,\n            thumbnail: i.thumbnail,\n            description: i.name,\n            originalClass: \"featured-slide\",\n            thumbnailClass: \"featured-thumb\",\n          };\n        } else {\n          if (i.vimeo) {\n            return {\n              ...i,\n              index,\n              thumbnail: i.url,\n              renderItem: (k) => {\n                return slide === k.index ? (\n                  <div style={{ paddingTop: \"56.25%\" }}>\n                    <ReactPlayer\n                      url={i.url}\n                      controls\n                      width=\"100%\"\n                      height=\"100%\"\n                      playsinline\n                      style={{ position: \"absolute\", top: 0, left: 0 }}\n                    />\n                  </div>\n                ) : null;\n              },\n              renderThumbInner: (k) => (\n                <div style={{ position: \"relative\" }}>\n                  <ReactPlayer url={i.url} width=\"100%\" height=\"100%\" />\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      left: 0,\n                      right: 0,\n                      top: 0,\n                      bottom: 0,\n                    }}\n                  />\n                </div>\n              ),\n            };\n          }\n\n          return {\n            ...i,\n            index,\n            thumbnail: i.url,\n            renderItem: (k) => {\n              return slide === k.index ? (\n                <video\n                  // id=\"my-player\"\n                  // class=\"video-js\"\n                  controls\n                  preload=\"auto\"\n                  autoPlay\n                  muted\n                  // data-setup=\"{}\"\n                  style={{ width: \"100%\", height: \"100%\" }}\n                >\n                  <source src={i.url} type=\"video/mp4\"></source>\n                  <p class=\"vjs-no-js\">\n                    To view this video please enable JavaScript, and consider\n                    upgrading to a web browser that\n                    <a\n                      href=\"https://videojs.com/html5-video-support/\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      supports HTML5 video\n                    </a>\n                  </p>\n                </video>\n              ) : null;\n            },\n            renderThumbInner: (k) => (\n              <div style={{ position: \"relative\" }}>\n                <video\n                  id=\"my-player\"\n                  class=\"video-js\"\n                  controls\n                  data-setup=\"{}\"\n                  style={{ width: \"100%\", height: \"100%\" }}\n                >\n                  <source src={i.url} type=\"video/mp4\"></source>\n                  <p class=\"vjs-no-js\">\n                    To view this video please enable JavaScript, and consider\n                    upgrading to a web browser that\n                    <a\n                      href=\"https://videojs.com/html5-video-support/\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      supports HTML5 video\n                    </a>\n                  </p>\n                </video>\n                <div\n                  style={{\n                    position: \"absolute\",\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                  }}\n                />\n              </div>\n            ),\n          };\n        }\n      })\n      .filter((i) => i) || [];\n\n  const handleTabClick = (newTab) => {\n    setTab(newTab === tab ? \"\" : newTab);\n  };\n\n  return (\n    <Container\n      ref={ref}\n      open={activeUI.includes(\"gallery\") || open}\n      isPage={open}\n      style={{\n        backgroundColor: (uiData?.background?.hex || \"#000000\") + \"CC\",\n      }}\n    >\n      <Inner>\n        <div className=\"buttons\">\n          <div\n            onClick={() => handleTabClick(\"photo\")}\n            className={tab === \"photo\" ? \"active\" : undefined}\n          >\n            <img src=\"/gallery/photo.png\" />\n          </div>\n          <div\n            onClick={() => handleTabClick(\"plan\")}\n            className={tab === \"plan\" ? \"active\" : undefined}\n          >\n            <img src=\"/gallery/plan.png\" />\n          </div>\n          <div\n            onClick={() => handleTabClick(\"video\")}\n            className={tab === \"video\" ? \"active\" : undefined}\n          >\n            <img src=\"/gallery/video.png\" />\n          </div>\n        </div>\n        <ImageGallery\n          items={images}\n          showBullets={false}\n          showFullscreenButton={false}\n          showPlayButton={false}\n          // showNav={false}\n          thumbnailPosition={\n            dimensionsW.height > dimensionsW.width ? \"bottom\" : \"right\"\n          }\n          onSlide={setSlide}\n          startIndex={slide}\n        />\n      </Inner>\n    </Container>\n  );\n};\n\nexport default Gallery;\n","import { MoreOutlined } from \"@ant-design/icons\";\nimport { Button, Checkbox, Form, Input, InputNumber, Modal } from \"antd\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst MoreButton = styled(Button)`\n  position: absolute;\n  top: 0px;\n\n  ${(props) => (props.adminSide === \"left\" ? \"left: -15px;\" : \"right: -15px;\")}\n  z-index: 1;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  inset: 0;\n  background-color: rgba(83, 72, 4, 0.6);\n`;\n\nconst AdminButton = ({\n  uiData,\n  setUiData,\n  name,\n  button,\n  hideControls,\n  adminSide,\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const onFinish = (values) => {\n    setUiData((prevState) => ({\n      ...prevState,\n      [name]: { ...(prevState[name] || {}), ...values },\n    }));\n\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      {uiData[name]?.hide && <Overlay />}\n      {!hideControls && (\n        <MoreButton\n          type=\"primary\"\n          shape=\"circle\"\n          icon={<MoreOutlined />}\n          onClick={showModal}\n          adminSide={adminSide}\n        />\n      )}\n\n      <Modal\n        title={name}\n        open={isModalOpen}\n        footer={null}\n        destroyOnClose\n        onCancel={() => setIsModalOpen(false)}\n      >\n        <Form\n          labelCol={{ span: 8 }}\n          wrapperCol={{ span: 16 }}\n          onFinish={onFinish}\n          initialValues={uiData[name] || {}}\n        >\n          <Form.Item label=\"Hide\" name=\"hide\" valuePropName=\"checked\">\n            <Checkbox />\n          </Form.Item>\n          <Form.Item label=\"Label\" name=\"label\">\n            <Input />\n          </Form.Item>\n          {!button && (\n            <>\n              <Form.Item label=\"Min\" name=\"min\">\n                <InputNumber />\n              </Form.Item>\n              <Form.Item label=\"Max\" name=\"max\">\n                <InputNumber />\n              </Form.Item>\n              <Form.Item label=\"Step\" name=\"step\">\n                <InputNumber />\n              </Form.Item>\n\n              <Form.Item label=\"Default\" name=\"default\">\n                <InputNumber />\n              </Form.Item>\n            </>\n          )}\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport { AdminButton };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { getCustomColorsStyles } from \"../../AppUI\";\nimport { AdminButton } from \"../AdminButton\";\n\nexport const Button = styled.div`\n  cursor: pointer;\n  padding: 5px 5px 0px;\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  user-select: none;\n  ${(props) => getCustomColorsStyles?.(props)}\n  > p {\n    font-size: 11px;\n    margin: 0;\n    margin-top: 5px;\n    text-transform: uppercase;\n    white-space: nowrap;\n  }\n`;\n\nconst ButtonUI = ({\n  activeUI,\n  title,\n  icon,\n  onUnclick,\n  onClick,\n  visible,\n  admin,\n  uiData,\n  setUiData,\n  name,\n  hideControls,\n  hideHidden,\n  adminSide,\n}) => {\n  const isActive = activeUI?.includes(name || title);\n  let isVisible = activeUI?.filter((v) => visible.includes(v)).length || admin;\n\n  if (uiData?.[name]?.hide && (hideHidden || !admin)) isVisible = false;\n\n  const refinedTitle = uiData?.[name]?.label || title;\n  return isVisible ? (\n    <div style={{ position: \"relative\" }}>\n      <Button\n        onClick={isActive ? onUnclick : onClick}\n        isActive={isActive}\n        uiData={uiData}\n      >\n        {icon}\n        {refinedTitle && <p>{refinedTitle}</p>}\n      </Button>\n      {admin && (\n        <AdminButton\n          uiData={uiData}\n          setUiData={setUiData}\n          name={name}\n          button\n          hideControls={hideControls}\n          adminSide={adminSide}\n        />\n      )}\n    </div>\n  ) : null;\n};\n\nexport { ButtonUI };\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport ImageGallery from \"react-image-gallery\";\nimport styled from \"styled-components\";\nimport { IoClose } from \"react-icons/io5\";\nimport { Button } from \"../ButtonUI\";\n\nconst Container = styled.div`\n  top: 00px;\n  bottom: 50px;\n  left: 0px;\n  right: 0px;\n  padding: 50px 10px 10px;\n  position: absolute;\n\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n  z-index: 1;\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst FloorPlan = ({ project, activeUI, uiData, setActiveUI, onClose }) => {\n  const [slide, setSlide] = useState(0);\n  const [dimensionsW, setDimensionsW] = useState({});\n  const ref = useRef();\n\n  const getContainerSize = () => {\n    if (ref.current)\n      setDimensionsW({\n        width: ref.current.clientWidth,\n        height: ref.current.clientHeight,\n      });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", getContainerSize);\n    getContainerSize();\n  }, []);\n  if (!project) return null;\n  const { media } = project;\n\n  const images =\n    media\n      ?.filter((i) => i.type === \"plan\")\n      .map((i, index) => ({\n        ...i,\n        original: i.url,\n        thumbnail: i.thumbnail,\n        description: i.name,\n        originalClass: \"featured-slide\",\n        thumbnailClass: \"featured-thumb\",\n      }))\n      .filter((i) => i) || [];\n\n  return (\n    <Container\n      ref={ref}\n      open\n      style={{\n        backgroundColor: (uiData?.background?.hex || \"#000000\") + \"CC\",\n      }}\n    >\n      <Inner>\n        <div style={{ display: \"flex\" }}>\n          <Button type=\"text\" onClick={onClose}>\n            <IoClose size={30} />\n          </Button>\n        </div>\n        <ImageGallery\n          items={images}\n          showBullets={false}\n          showFullscreenButton={false}\n          showPlayButton={false}\n          // showNav={false}\n          thumbnailPosition={\n            dimensionsW.height > dimensionsW.width ? \"bottom\" : \"right\"\n          }\n          onSlide={setSlide}\n          startIndex={slide}\n        />\n      </Inner>\n    </Container>\n  );\n};\n\nexport default FloorPlan;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AdminButton } from \"../AdminButton\";\nimport { FaBed, FaBath, FaHouseUser } from \"react-icons/fa\";\nimport { IoResize } from \"react-icons/io5\";\nimport { TbViewportWide } from \"react-icons/tb\";\nimport { getCustomColorsStyles } from \"../../AppUI\";\nimport { MdOtherHouses, MdClose } from \"react-icons/md\";\nimport { TfiLayout } from \"react-icons/tfi\";\nimport FloorPlan from \"../FloorPlan\";\nimport format from \"format-number\";\n\nconst Backdrop = styled.div`\n  inset: 0;\n  position: absolute;\n  z-index: ${({ admin }) => (admin ? 0 : 10000)};\n`;\n\nconst Container = styled.div`\n  bottom: 60px;\n  left: 0px;\n  right: 0px;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow-x: auto;\n  white-space: nowrap;\n  justify-content: end;\n  align-items: center;\n`;\n\nconst Inner2 = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow-x: auto;\n  white-space: nowrap;\n  justify-content: end;\n  width: 100%;\n  max-width: 600px;\n`;\n\nconst Top = styled.div`\n  border-radius: 5px;\n  padding: 15px 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Details = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\n\nconst NameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 200px;\n`;\n\nconst Name = styled.div`\n  font-size: 30px;\n  white-space: normal;\n  @media only screen and (max-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nconst Price = styled.div`\n  font-size: 26px;\n  @media only screen and (max-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nconst Availability = styled.div`\n  font-size: 16px;\n  text-transform: capitalize;\n`;\n\nconst FacadeName = styled.div`\n  margin-top: 20px;\n  font-size: 16px;\n  white-space: normal;\n`;\n\n// const InfoContainer = styled.div`\n//   display: flex;\n//   flex-direction: column;\n// `;\n\n// const Frontage = styled.div`\n//   line-height: 40px;\n// `;\n\n// const Depth = styled.div``;\n\nconst Stats = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  margin-top: 20px;\n  overflow-x: auto;\n`;\n\nconst StatContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0 10px;\n`;\n\nconst StatText = styled.div`\n  margin-left: 10px;\n`;\n\nconst Bottom = styled.div`\n  border-radius: 5px;\n  color: white;\n  padding: 15px 20px;\n  margin-top: 5px;\n  overflow: auto;\n`;\n\nconst BottomInner = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 5px;\n  margin: 0 10px;\n  cursor: pointer;\n\n  ${(props) => getCustomColorsStyles?.(props)};\n`;\n\nconst ButtonText = styled.div`\n  margin-top: 5px;\n`;\n\nconst Close = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n`;\n\nconst Stat = ({\n  icon,\n  admin,\n  uiData,\n  setUiData,\n  name,\n  hideHidden,\n  hideControls,\n  children,\n}) =>\n  uiData?.[name]?.hide && (hideHidden || !admin) ? null : (\n    <div style={{ position: \"relative\" }}>\n      <StatContainer>\n        {icon}\n        <StatText>{children}</StatText>\n      </StatContainer>\n      {admin && (\n        <AdminButton\n          uiData={uiData}\n          setUiData={setUiData}\n          name={name}\n          button\n          hideControls={hideControls}\n        />\n      )}\n    </div>\n  );\n\nconst Button = ({\n  onClick,\n  admin,\n  uiData,\n  setUiData,\n  name,\n  label,\n  hideHidden,\n  hideControls,\n  icon,\n}) =>\n  uiData?.[name]?.hide && (hideHidden || !admin) ? null : (\n    <div style={{ position: \"relative\" }}>\n      <ButtonContainer onClick={onClick} uiData={uiData}>\n        {icon}\n        <ButtonText>{uiData?.[name]?.label || label}</ButtonText>\n      </ButtonContainer>\n      {admin && (\n        <AdminButton\n          uiData={uiData}\n          setUiData={setUiData}\n          name={name}\n          button\n          hideControls={hideControls}\n        />\n      )}\n    </div>\n  );\n\nconst AdminElem = ({\n  admin,\n  uiData,\n  setUiData,\n  name,\n  children,\n  hideHidden,\n  hideControls,\n}) =>\n  uiData?.[name]?.hide && (hideHidden || !admin) ? null : (\n    <div style={{ position: \"relative\" }}>\n      {children}\n      {admin && (\n        <AdminButton\n          uiData={uiData}\n          setUiData={setUiData}\n          name={name}\n          button\n          hideControls={hideControls}\n        />\n      )}\n    </div>\n  );\n\nconst ApartmentControls = (props) => {\n  const {\n    emitUIInteraction,\n    setActiveUI,\n    activeUI,\n    chosenApratment,\n    project,\n    admin,\n  } = props;\n  const [isFloorPlanOpen, setIsFloorPlanOpen] = useState(false);\n  const apartment = admin\n    ? {\n        Name: \"Apartment name\",\n        Price: 150000,\n        FacadeName: \"Facade name\",\n        BedroomsCount: 4,\n        BathroomsCount: 5,\n        Surface: 150,\n        Frontage: 30,\n        Depth: 15,\n        URLPlan: \"asdsa\",\n        URLVirtualTour: \"sdads\",\n        Url: \"https://google.com\",\n      }\n    : project?.properties &&\n      project.properties.find((i) => {\n        return parseInt(i.id) === parseInt(chosenApratment);\n      });\n  const isVisible = admin\n    ? activeUI.includes(\"apartment\")\n    : apartment && parseInt(chosenApratment) >= -1;\n\n  useEffect(() => {\n    if (isVisible && activeUI.length && !admin) setActiveUI([activeUI[0]]);\n  }, [isVisible]);\n  return isVisible ? (\n    <Backdrop\n      style={\n        admin\n          ? { pointerEvents: \"none\" }\n          : {\n              backgroundColor:\n                (props.uiData?.background?.hex || \"#000000\") + \"77\",\n            }\n      }\n      admin={admin}\n    >\n      <Container open={isVisible}>\n        <Inner>\n          <Inner2>\n            <Top\n              style={{\n                backgroundColor: props.uiData?.background?.hex || \"black\",\n              }}\n            >\n              <Close>\n                <ButtonContainer\n                  onClick={() =>\n                    admin\n                      ? setActiveUI(activeUI.filter((i) => i !== \"apartment\"))\n                      : emitUIInteraction?.({ HideApartmentInfo: true })\n                  }\n                  uiData={props.uiData}\n                >\n                  <MdClose size={30} />\n                </ButtonContainer>\n              </Close>\n              <Details>\n                <NameContainer>\n                  <AdminElem {...props} name=\"apartmentName\">\n                    <Name>{apartment.Name}</Name>\n                  </AdminElem>\n\n                  <AdminElem {...props} name=\"apartmentPrice\">\n                    <Price>{format({ prefix: \"$\" })(apartment.Price)}</Price>\n                  </AdminElem>\n                  <AdminElem {...props} name=\"apartmentAvailability\">\n                    <Availability>{apartment.Availability}</Availability>\n                  </AdminElem>\n                  <AdminElem {...props} name=\"aprtmentFacadeName\">\n                    <FacadeName>{apartment.FacadeName}</FacadeName>\n                  </AdminElem>\n                </NameContainer>\n                {/* <InfoContainer>\n                <Frontage>Lot frontage: 10m2</Frontage>\n                <Depth>Lot depth: 10m2</Depth>\n              </InfoContainer> */}\n              </Details>\n              <Stats>\n                <AdminElem {...props} name=\"BedStat\">\n                  <Stat {...props} name=\"BedStat\" icon={<FaBed size={30} />}>\n                    {`${apartment.BedroomsCount} beds`}\n                  </Stat>\n                </AdminElem>\n                <AdminElem {...props} name=\"BathStat\">\n                  <Stat {...props} name=\"BathStat\" icon={<FaBath size={30} />}>\n                    {`${apartment.BathroomsCount} baths`}\n                  </Stat>\n                </AdminElem>\n                <AdminElem {...props} name=\"SurfaceStat\">\n                  <Stat\n                    {...props}\n                    name=\"SurfaceStat\"\n                    icon={<IoResize size={30} />}\n                  >\n                    {`${apartment.Surface} m2`}\n                  </Stat>\n                </AdminElem>\n                <AdminElem {...props} name=\"FrontageStat\">\n                  <Stat\n                    {...props}\n                    name=\"FrontageStat\"\n                    icon={<TbViewportWide size={30} />}\n                  >\n                    {`${apartment.Frontage} m`}\n                  </Stat>\n                </AdminElem>\n                <AdminElem {...props} name=\"DepthStat\">\n                  <Stat\n                    {...props}\n                    name=\"DepthStat\"\n                    icon={\n                      <TbViewportWide\n                        size={30}\n                        style={{ transform: \"rotate(90deg)\" }}\n                      />\n                    }\n                  >\n                    {`${apartment.Depth} m`}\n                  </Stat>\n                </AdminElem>\n              </Stats>\n            </Top>\n            <Bottom\n              style={{\n                backgroundColor: props.uiData?.background?.hex || \"black\",\n              }}\n            >\n              <BottomInner>\n                <Button\n                  {...props}\n                  icon={<FaHouseUser size={30} />}\n                  onClick={() =>\n                    window.open(apartment.URLPlan, \"_blank\").focus()\n                  }\n                  label=\"3D Tour\"\n                  name=\"TDTour\"\n                ></Button>\n                <Button\n                  {...props}\n                  icon={<FaHouseUser size={30} />}\n                  onClick={() =>\n                    window.open(apartment.URLVirtualTour, \"_blank\").focus()\n                  }\n                  label=\"Virtual tour\"\n                  name=\"VTour\"\n                ></Button>\n                <Button\n                  {...props}\n                  icon={<TfiLayout size={30} />}\n                  onClick={() => setIsFloorPlanOpen(true)}\n                  label=\"Floor plan\"\n                  name=\"FloorPlan\"\n                ></Button>\n                <Button\n                  {...props}\n                  icon={<MdOtherHouses size={30} />}\n                  onClick={() => window.open(apartment.Url, \"_blank\").focus()}\n                  label=\"Property info\"\n                  name=\"PropertyInfo\"\n                ></Button>\n              </BottomInner>\n            </Bottom>\n          </Inner2>\n        </Inner>\n      </Container>\n      {isFloorPlanOpen && (\n        <FloorPlan {...props} onClose={() => setIsFloorPlanOpen(false)} />\n      )}\n    </Backdrop>\n  ) : null;\n};\n\nexport { ApartmentControls };\n","import { Button, ConfigProvider, Form, Slider, Tag } from \"antd\";\nimport React, { useState } from \"react\";\nimport { BiCloset, BiReset } from \"react-icons/bi\";\nimport { IoClose } from \"react-icons/io5\";\nimport styled from \"styled-components\";\nimport { AdminButton } from \"../AdminButton\";\n\nconst Container = styled.div`\n  top: 20px;\n  bottom: 60px;\n  left: 0;\n  right: 0;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n  pointer-events: none;\n`;\n\nconst Inner = styled.div`\n  width: 100%;\n  padding: 70px 30px 20px;\n  max-height: 100%;\n  max-width: 600px;\n  overflow: auto;\n  overflow-x: hidden;\n  pointer-events: all;\n  position: relative;\n`;\n\nconst ButtonsContainer = styled.div`\n  position: absolute;\n  right: 0px;\n  top: 20px;\n`;\n\nconst SelectMulti = ({\n  options,\n  value: propValue,\n  onChange,\n  emitUIInteraction,\n}) =>\n  options.map(({ value, label }) => (\n    <Tag.CheckableTag\n      key={value}\n      onClick={() => {\n        if (propValue?.includes(value))\n          onChange(propValue.filter((i) => i !== value));\n        else onChange([...(propValue || []), value]);\n        emitUIInteraction(value);\n      }}\n      checked={propValue?.includes(value)}\n      style={{ color: \"white\" }}\n    >\n      {label || value}\n    </Tag.CheckableTag>\n  ));\n\nconst FilterControls = (props) => {\n  const {\n    activeUI,\n    emitUIInteraction,\n    admin,\n    uiData,\n    setUiData,\n    hideHidden,\n    hideControls,\n  } = props;\n  const isVisible = activeUI?.includes(\"filter\");\n  const [form] = Form.useForm();\n\n  const items = [\n    {\n      name: \"Budget\",\n      label: \"Budget\",\n      type: \"range\",\n      min: 0,\n      max: 5000000,\n      step: 10000,\n    },\n    {\n      name: \"Size\",\n      label: \"Size\",\n      type: \"range\",\n      min: 0,\n      max: 100,\n      step: 1,\n    },\n    {\n      name: \"Bedrooms\",\n      label: \"Bedrooms\",\n      type: \"range\",\n      min: 0,\n      max: 5,\n      step: 0.5,\n    },\n    {\n      name: \"Bathrooms\",\n      label: \"Bathrooms\",\n      type: \"range\",\n      min: 0,\n      max: 3,\n      step: 0.5,\n    },\n    {\n      name: \"Availability\",\n      label: \"Availability\",\n      type: \"selectMulti\",\n      options: [\n        { value: \"Available\" },\n        { value: \"Reserved\" },\n        { value: \"Sold\" },\n      ],\n    },\n    {\n      name: \"Orientation\",\n      label: \"Orientation\",\n      type: \"selectMulti\",\n      options: [{ value: \"N\" }, { value: \"E\" }, { value: \"S\" }, { value: \"W\" }],\n    },\n    {\n      name: \"Depth\",\n      label: \"Depth\",\n      type: \"range\",\n      min: 0,\n      max: 100,\n      step: 0.5,\n    },\n    {\n      name: \"Frontage\",\n      label: \"Frontage\",\n      type: \"range\",\n      min: 0,\n      max: 100,\n      step: 0.5,\n    },\n  ];\n\n  const [valuesState, setValuesState] = useState({});\n  return (\n    <Container open={isVisible}>\n      <Inner\n        style={{\n          backgroundColor: (props.uiData?.background?.hex || \"#000000\") + \"CC\",\n        }}\n      >\n        {/* <ConfigProvider\n          getPopupContainer={(triggerNode) => triggerNode.parentNode}\n        > */}\n        {isVisible && (\n          <ButtonsContainer>\n            <Button\n              htmlType=\"button\"\n              style={{ margin: \"0 8px\" }}\n              type=\"link\"\n              onClick={() => {\n                form.resetFields();\n                emitUIInteraction?.({ ResetFilters: true });\n              }}\n            >\n              <BiReset size={30} color=\"white\" />\n            </Button>\n            <Button onClick={() => props.setActiveUI([\"exterior\"])} type=\"link\">\n              <IoClose size={30} color=\"white\" />\n            </Button>\n          </ButtonsContainer>\n        )}\n        <Form\n          layout=\"vertical\"\n          form={form}\n          initialValues={{\n            Orientation: [\"N\", \"E\", \"S\", \"W\"],\n            Availability: [\"Available\", \"Reserved\", \"Sold\"],\n          }}\n          onValuesChange={setValuesState}\n        >\n          {items.map(\n            ({ name, label, type, defaultValue, min, max, step, options }) => {\n              let refinedTitle = uiData?.[name]?.label || label;\n              if (type === \"range\")\n                refinedTitle = `${refinedTitle}: more than ${\n                  valuesState[name] || 0\n                }`;\n              return uiData?.[name]?.hide && (hideHidden || !admin) ? null : (\n                <div style={{ position: \"relative\" }}>\n                  <Form.Item\n                    name={name}\n                    label={\n                      <label style={{ color: \"white\" }}>{refinedTitle}</label>\n                    }\n                  >\n                    {!isVisible ? null : type === \"range\" ? (\n                      <Slider\n                        defaultValue={defaultValue || [min, max]}\n                        min={uiData?.[name]?.min || min}\n                        max={uiData?.[name]?.max || max}\n                        step={uiData?.[name]?.step || step}\n                        onChange={(v) => {\n                          emitUIInteraction?.({ [name]: v });\n                        }}\n                      />\n                    ) : (\n                      <SelectMulti\n                        options={options}\n                        defaultValue={defaultValue}\n                        emitUIInteraction={(v) =>\n                          emitUIInteraction?.({ [v]: true })\n                        }\n                      />\n                    )}\n                  </Form.Item>\n                  {admin && (\n                    <AdminButton\n                      uiData={uiData}\n                      setUiData={setUiData}\n                      name={name}\n                      button={type !== \"range\"}\n                      hideControls={hideControls}\n                    />\n                  )}\n                </div>\n              );\n            }\n          )}\n        </Form>\n        {/* </ConfigProvider> */}\n      </Inner>\n    </Container>\n  );\n};\n\nexport { FilterControls };\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  bottom: 60px;\n  left: 0px;\n  right: 0px;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  flex: 1;\n  overflow-x: auto;\n  justify-content: center;\n`;\n\nconst Item = styled.div`\n  border-radius: 5px;\n  color: white;\n  margin: 0 6px;\n  padding: 5px 10px;\n  white-space: nowrap;\n  cursor: pointer;\n`;\n\nconst LocationControls = (props) => {\n  const { emitUIInteraction, activeUI, project } = props;\n  const isVisible = activeUI?.includes(\"location\");\n  return (\n    <Container open={isVisible}>\n      <Inner>\n        {[...Array(project?.levelsCount || 0)].map((_level, index) => (\n          <Item\n            onClick={() => {\n              emitUIInteraction?.({ Location: index });\n            }}\n            style={{\n              backgroundColor: props.uiData?.background?.hex || \"#000000\",\n            }}\n          >\n            {`Level ${index}`}\n          </Item>\n        ))}\n      </Inner>\n    </Container>\n  );\n};\n\nexport { LocationControls };\n","import { Slider } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { AdminButton } from \"../AdminButton\";\n\nconst Container = styled.div`\n  bottom: 60px;\n  left: 0;\n  right: 0;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.table`\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0 3px;\n  color: white;\n  max-width: 300px;\n`;\n\nconst TR = styled.tr`\n  margin: 5px 0;\n  border-radius: 5px;\n  position: relative;\n  td {\n    padding: 5px;\n  }\n  td:first-child {\n    border-top-left-radius: 5px;\n  }\n  td:last-child {\n    border-top-right-radius: 5px;\n  }\n\n  td:first-child {\n    border-bottom-left-radius: 5px;\n  }\n  td:last-child {\n    border-bottom-right-radius: 5px;\n  }\n`;\n\nconst TD0 = styled.td`\n  text-align: right;\n`;\n\nconst TD1 = styled.td`\n  width: 100%;\n`;\n\nconst TD2 = styled.td`\n  text-align: left;\n`;\n\nconst SunControls = ({\n  emitUIInteraction,\n  activeUI,\n  admin,\n  uiData,\n  setUiData,\n  hideHidden,\n  hideControls,\n}) => {\n  const isVisible = activeUI?.includes(\"sun\");\n  return (\n    <Container open={isVisible}>\n      <Inner>\n        <tbody>\n          {uiData?.time?.hide && (hideHidden || !admin) ? null : (\n            <TR\n              style={{\n                backgroundColor: (uiData?.background?.hex || \"#000000\") + \"CC\",\n              }}\n            >\n              <TD0>{`${uiData?.time?.min || 0}:00`}</TD0>\n              <TD1>\n                <Slider\n                  onChange={(v) => {\n                    emitUIInteraction?.({ Time: v });\n                  }}\n                  min={uiData?.time?.min || 0}\n                  max={uiData?.time?.max || 23}\n                  step={uiData?.time?.step || 1}\n                  tooltip={{ formatter: (v) => `${v}:00` }}\n                />\n              </TD1>\n              <TD2>{`${uiData?.time?.max || 23}:00`}</TD2>\n              {admin && (\n                <AdminButton\n                  uiData={uiData}\n                  setUiData={setUiData}\n                  name=\"time\"\n                  hideControls={hideControls}\n                />\n              )}\n            </TR>\n          )}\n          {uiData?.position?.hide && (hideHidden || !admin) ? null : (\n            <TR\n              style={{\n                backgroundColor: (uiData?.background?.hex || \"#000000\") + \"CC\",\n              }}\n            >\n              <TD0>S</TD0>\n              <TD1>\n                <Slider\n                  tooltip={{ open: false }}\n                  onChange={(v) => {\n                    emitUIInteraction?.({ SunPosition: v });\n                  }}\n                  min={uiData?.position?.min || 0}\n                  max={uiData?.position?.max || 360}\n                  step={uiData?.position?.step || 1}\n                />\n              </TD1>\n              <TD2>N</TD2>\n              {admin && (\n                <AdminButton\n                  uiData={uiData}\n                  setUiData={setUiData}\n                  name=\"position\"\n                  hideControls={hideControls}\n                />\n              )}\n            </TR>\n          )}\n        </tbody>\n      </Inner>\n    </Container>\n  );\n};\n\nexport { SunControls };\n","import React from \"react\";\nimport { ButtonUI } from \"../ButtonUI\";\nimport {\n  ClockCircleOutlined,\n  HomeOutlined,\n  PictureOutlined,\n  SearchOutlined,\n} from \"@ant-design/icons\";\n\nimport {\n  BsChevronExpand,\n  BsFillSunFill,\n  BsPinMap,\n  BsArrowLeftRight,\n  BsEye,\n  BsInfoCircle,\n  BsLayoutWtf,\n} from \"react-icons/bs\";\n\nimport { MdOutlineMeetingRoom } from \"react-icons/md\";\n\nimport { BiCompass } from \"react-icons/bi\";\n\nimport { FaLevelUpAlt } from \"react-icons/fa\";\n\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  height: 100%;\n  position: relative;\n  > * {\n    margin: 0px 10px;\n  }\n`;\n\nconst UIButtons = (props) => {\n  const { activeUI, setActiveUI, emitUIInteraction, admin } = props;\n\n  return (\n    <>\n      <Container>\n        <ButtonUI\n          {...props}\n          title=\"home\"\n          icon={<HomeOutlined />}\n          onClick={() => {\n            setActiveUI([\"exterior\"]);\n            emitUIInteraction?.({ Home: true });\n          }}\n          visible={[\"exterior\"]}\n          name=\"home\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"gallery\"\n          icon={<PictureOutlined />}\n          onClick={() => {\n            emitUIInteraction?.({ Gallery: true });\n            setActiveUI([activeUI[0], \"gallery\"]);\n          }}\n          onUnclick={() => {\n            emitUIInteraction?.({ Gallery: true });\n            setActiveUI([activeUI[0]]);\n          }}\n          visible={[\"exterior\", \"interior\"]}\n          name=\"gallery\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"nearby\"\n          icon={<BsPinMap />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"nearby\"]);\n            emitUIInteraction?.({ Nearby: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Nearby: true });\n          }}\n          visible={[\"exterior\"]}\n          name=\"nearby\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"filter\"\n          icon={<SearchOutlined />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"filter\"]);\n            emitUIInteraction?.({ Filter: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Filter: true });\n          }}\n          visible={[\"exterior\"]}\n          name=\"filter\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"materials\"\n          icon={<BsArrowLeftRight />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"materials\"]);\n            emitUIInteraction?.({ Materials: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Materials: true });\n          }}\n          visible={[\"interior\"]}\n          name=\"materials\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"teleport\"\n          icon={<BsEye />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"teleport\"]);\n            emitUIInteraction?.({ Teleport: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Teleport: true });\n          }}\n          visible={[\"interior\"]}\n          name=\"teleport\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"info\"\n          icon={<BsInfoCircle />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"info\"]);\n            emitUIInteraction?.({ InteriorInfo: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ InteriorInfo: true });\n          }}\n          visible={[\"interior\"]}\n          name=\"info\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"discover\"\n          icon={<BiCompass />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"discover\"]);\n            emitUIInteraction?.({ Discover: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Discover: true });\n          }}\n          visible={[\"exterior\"]}\n          name=\"discover\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"level\"\n          icon={<BsChevronExpand />}\n          onClick={() => {\n            emitUIInteraction?.({ Level: true });\n            setActiveUI([activeUI[0], \"location\"]);\n          }}\n          onUnclick={() => {\n            emitUIInteraction?.({ Level: true });\n            setActiveUI([activeUI[0]]);\n          }}\n          visible={[\"exterior\", \"interior\"]}\n          name=\"location\"\n        />\n\n        <ButtonUI\n          {...props}\n          title=\"rooms\"\n          icon={<MdOutlineMeetingRoom />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"rooms\"]);\n            emitUIInteraction?.({ Teleport: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ Teleport: true });\n          }}\n          visible={[\"exterior\", \"interior\"]}\n          name=\"roomsButton\"\n        />\n\n        <ButtonUI\n          {...props}\n          title=\"sun\"\n          icon={<BsFillSunFill />}\n          onClick={() => {\n            emitUIInteraction?.({ Sun: true });\n            setActiveUI([activeUI[0], \"sun\"]);\n          }}\n          onUnclick={() => {\n            emitUIInteraction?.({ Sun: true });\n            setActiveUI([activeUI[0]]);\n          }}\n          visible={[\"exterior\", \"interior\"]}\n          name=\"sun\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"Floor plan\"\n          icon={<BsLayoutWtf />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"floorPlan\"]);\n            emitUIInteraction?.({ FloorPlan: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ FloorPlan: true });\n          }}\n          visible={[\"interior\"]}\n          name=\"floorPlan\"\n        />\n        <ButtonUI\n          {...props}\n          title=\"Level view\"\n          icon={<FaLevelUpAlt />}\n          onClick={() => {\n            setActiveUI([activeUI[0], \"levelView\"]);\n            emitUIInteraction?.({ LevelView: true });\n          }}\n          onUnclick={() => {\n            setActiveUI([activeUI[0]]);\n            emitUIInteraction?.({ LevelView: true });\n          }}\n          visible={[\"interior\"]}\n          name=\"levelView\"\n        />\n        {admin && (\n          <>\n            {!props.uiData.onlyInterior && (\n              <ButtonUI\n                {...props}\n                title=\"interior\"\n                icon={<ClockCircleOutlined />}\n                onClick={() => setActiveUI([\"interior\"])}\n                onUnclick={() => setActiveUI([\"exterior\"])}\n                visible={[\"exterior\", \"interior\"]}\n                admin={false}\n              />\n            )}\n            <ButtonUI\n              {...props}\n              title=\"apartment\"\n              icon={<ClockCircleOutlined />}\n              onClick={() => setActiveUI([\"exterior\", \"apartment\"])}\n              onUnclick={() => setActiveUI([\"exterior\"])}\n              visible={[\"exterior\"]}\n              admin={false}\n            />\n          </>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport { UIButtons };\n","import { Button, Drawer, Image, Modal } from \"antd\";\nimport React, { useState } from \"react\";\nimport { BsQuestionLg } from \"react-icons/bs\";\nimport { IoClose } from \"react-icons/io5\";\nimport styled from \"styled-components\";\nimport { ButtonUI } from \"../ButtonUI\";\n\nconst Container = styled.div`\n  position: absolute;\n  inset: 0;\n  background-color: black;\n  z-index: 99999999;\n  background-image: url(\"/images/how-to.png\");\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n`;\n\nconst CloseButton = styled(Button)`\n  position: absolute;\n  left: 16px;\n  top: 16px;\n  z-index: 1;\n`;\n\nconst InfoButton = (props) => {\n  const [isOpen, setIsOpen] = useState();\n  return (\n    <>\n      <ButtonUI\n        icon={<BsQuestionLg />}\n        visible={[\"exterior\", \"interior\"]}\n        {...props}\n        adminSide=\"left\"\n        onClick={() => setIsOpen(true)}\n        onUnclick={() => setIsOpen(false)}\n      />\n      {/* <Modal\n        open={isOpen}\n        onCancel={() => setIsOpen(false)}\n        footer={null}\n        getContainer={false}\n      >\n        <Image src=\"/images/logo-black.png\" preview={false}></Image>\n      </Modal> */}\n      <Drawer\n        visible={isOpen}\n        onClose={() => setIsOpen(false)}\n        width=\"100VW\"\n        title=\"How to use IMMERSIV\"\n        forceRender\n      >\n        <Container>\n          <CloseButton onClick={() => setIsOpen(false)} type=\"link\">\n            <IoClose size={30} color=\"white\" />\n          </CloseButton>\n        </Container>\n      </Drawer>\n    </>\n  );\n};\n\nexport { InfoButton };\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  bottom: 60px;\n  left: 0px;\n  right: 0px;\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  visibility: ${({ open }) => (open ? \"visible\" : \"hidden\")};\n`;\n\nconst Inner = styled.div`\n  display: flexbox;\n  overflow-x: auto;\n  justify-content: center;\n`;\n\nconst Item = styled.div`\n  border-radius: 5px;\n  color: white;\n  margin: 0 6px;\n  padding: 5px 10px;\n  white-space: nowrap;\n  cursor: pointer;\n`;\n\nconst RoomsControls = (props) => {\n  const { emitUIInteraction, activeUI, uiData } = props;\n  const isVisible = activeUI?.includes(\"rooms\");\n  return uiData?.rooms ? (\n    <Container open={isVisible}>\n      <Inner>\n        {uiData.rooms.split(\"\\n\").map((room, index) => (\n          <Item\n            onClick={() => {\n              emitUIInteraction?.({ Room: index + 1 });\n            }}\n            style={{\n              backgroundColor: props.uiData?.background?.hex || \"#000000\",\n            }}\n          >\n            {room}\n          </Item>\n        ))}\n      </Inner>\n    </Container>\n  ) : null;\n};\n\nexport { RoomsControls };\n","import { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ApartmentControls } from \"../Bottom/ApartmentContols\";\nimport { ButtonUI } from \"../Bottom/ButtonUI\";\nimport { FilterControls } from \"../Bottom/FilterControls\";\nimport Gallery from \"../Bottom/Gallery\";\nimport { LocationControls } from \"../Bottom/LocationControls\";\nimport { SunControls } from \"../Bottom/SunControls\";\nimport { UIButtons } from \"../Bottom/UIButtons\";\nimport { QuestionOutlined } from \"@ant-design/icons\";\nimport { BsQuestionLg } from \"react-icons/bs\";\nimport { InfoButton } from \"../Bottom/InfoButton\";\nimport { RoomsControls } from \"../Bottom/RoomsControls\";\nimport FloorPlan from \"../Bottom/FloorPlan\";\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 50px;\n  display: flex;\n  overflow-x: auto;\n`;\n\nconst ButtonsContainer = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`;\n\nconst InfoContainer = styled.div`\n  background: black;\n  margin-left: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0px 16px;\n`;\n\nconst AppUI = (props) => {\n  const [activeUI, setActiveUI] = useState([\"exterior\"]);\n  const propsC = {\n    ...props,\n    activeUI,\n    setActiveUI: (v) => {\n      if (props.uiData?.onlyInterior && v.includes(\"exterior\"))\n        setActiveUI([\"interior\"]);\n      else setActiveUI(v);\n    },\n  };\n  useEffect(() => {\n    if (props.uiData?.onlyInterior) setActiveUI([\"interior\"]);\n  }, [props.uiData?.onlyInterior]);\n  return (\n    <div style={{ zIndex: 1, color: props.uiData?.textColor?.hex || \"white\" }}>\n      <Container>\n        <ButtonsContainer\n          style={{ backgroundColor: props.uiData?.background?.hex || \"black\" }}\n        >\n          <UIButtons {...propsC} />\n        </ButtonsContainer>\n        <InfoContainer\n          style={{ backgroundColor: props.uiData?.background?.hex || \"black\" }}\n        >\n          <InfoButton {...propsC} />\n        </InfoContainer>\n      </Container>\n      <FilterControls {...propsC} />\n      <Gallery {...propsC} />\n      <SunControls {...propsC} />\n      <LocationControls {...propsC} />\n      <RoomsControls {...propsC} />\n      <ApartmentControls {...propsC} />\n    </div>\n  );\n};\n\nconst getCustomColorsStyles = (props) => {\n  let color = props.uiData?.buttonColor?.hex || \"white\";\n  if (props.isActive)\n    color = props.uiData?.buttonHoverColor?.hex || \"lightblue\";\n\n  const hover =\n    props.uiData?.buttonHoverColor?.hex ||\n    props.uiData?.buttonColor?.hex ||\n    \"lightblue\";\n  return `color: ${color};\n  &:hover {\n    color: ${hover};\n  }`;\n};\nexport { AppUI, getCustomColorsStyles };\n","import API from \"api/axios.config\";\r\n\r\nclass ConstantService {\r\n    getConstant() {\r\n        return API.get(`/constant`);\r\n    }\r\n    saveConstant(data) {\r\n        return API.put(`/constant`, data);\r\n    }\r\n}\r\n\r\nexport default new ConstantService();\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { WebRTCClient } from \"@arcware/webrtc-plugin\";\nimport { AppUI } from \"components/ProjectView/Components/ProjectUI/AppUI\";\nimport throttle from \"lodash/throttle\";\n\nconst ProjectA = (props) => {\n  const { project, setVideoInitialized } = props;\n\n  const sizeContainerRef = useRef(null);\n  const containerRef = useRef(null);\n  const videoRef = useRef(null);\n  const [webrtcClient, setWebrtcClient] = useState();\n  const webrtcClientInit = useRef();\n  const [chosenApratment, setChosenApartment] = useState(-1);\n\n  const changeHandler = (message) => {\n    setChosenApartment(parseInt(message));\n    console.log(\"UE response set state: \", message);\n  };\n  const debouncedChangeHandler = useCallback(\n    throttle(changeHandler, 500, { leading: false }),\n    []\n  );\n\n  const responseCallback = (message) => {\n    console.log(\"UE response: \", message);\n    debouncedChangeHandler(message);\n  };\n\n  const videoInitialized = () => {\n    setVideoInitialized(true);\n  };\n\n  useEffect(() => {\n    const args = {\n      address:\n        props.project.arcwareAddress ||\n        \"wss://signalling-client.ragnarok.arcware.cloud/\",\n      packageId:\n        props.project.arcwarePackageId ||\n        \"ff41fd0c-cac9-4e4c-abe5-3ada402f57cc\",\n      settings: {},\n      autoplay: { video: true, audio: true },\n      sizeContainer: sizeContainerRef.current,\n      container: containerRef.current,\n      videoRef: videoRef.current,\n      playOverlay: false,\n      loader: () => {},\n      applicationResponse: responseCallback,\n      videoInitializeCallback: videoInitialized,\n    };\n\n    // double load protection\n    if (!webrtcClientInit.current) {\n      webrtcClientInit.current = true;\n      setWebrtcClient(new WebRTCClient(args));\n    }\n  }, []);\n\n  return (\n    <>\n      <div ref={sizeContainerRef} style={{ flex: 1 }}>\n        <div ref={containerRef} style={{ zIndex: 1 }}>\n          <video ref={videoRef} />\n          {/* <Responses responses={responses} /> */}\n        </div>\n      </div>\n      {webrtcClient != null && project?.newUI && (\n        <AppUI\n          emitUIInteraction={(v) => {\n            webrtcClient.emitUIInteraction(v);\n            console.log(\"emitUIInteraction() with: \", v);\n          }}\n          project={project}\n          uiData={project.uiData}\n          chosenApratment={chosenApratment}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ProjectA;\n","import axios from \"axios\";\r\n\r\nconst baseURL =\r\n    process.env.NODE_ENV === \"production\"\r\n        ? \"https://tour.immersiv.com.au/api\"\r\n        : \"http://localhost:5000/api\";\r\n\r\nconst API = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n});\r\n\r\nAPI.interceptors.request.use(\r\n    function (req) {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) req.headers[\"auth-token\"] = token;\r\n        return req;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default API;\r\n","import API from \"api/axios.config\";\r\n\r\nclass ProjectService {\r\n  getProject(id) {\r\n    return API.get(`/projects${id ? \"/\" + id : \"\"}`);\r\n  }\r\n\r\n  getProjectByUrl(id) {\r\n    return API.get(`/projects/url/${id}`);\r\n  }\r\n\r\n  getFeaturedProject() {\r\n    return API.get(`/projects/url/__featured__`);\r\n  }\r\n  saveProject(id, data) {\r\n    return API.put(`/projects/${id}`, data);\r\n  }\r\n  createProject(data) {\r\n    return API.post(`/projects`, data);\r\n  }\r\n  deleteProject(id) {\r\n    return API.delete(`/projects/${id}`);\r\n  }\r\n\r\n  addMedia(id, data) {\r\n    return API.post(`/projects/${id}/media`, data);\r\n  }\r\n  deleteMedia(id, mediaId) {\r\n    return API.delete(`/projects/${id}/media/${mediaId}`);\r\n  }\r\n  moveMedia(id, mediaId, down) {\r\n    return API.put(`/projects/${id}/media/${mediaId}`, null, {\r\n      params: { down: down ? \"true\" : \"false\" },\r\n    });\r\n  }\r\n}\r\n\r\nexport default new ProjectService();\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst Layout = ({ children, title, loading, description, isProject }) => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{title || \"Home\"} | IMMERSIV </title>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={\r\n                        description ||\r\n                        \"IMMERSIV is a digital interactive sales experience for unbuilt environments\"\r\n                    }\r\n                />\r\n            </Helmet>\r\n\r\n            {loading ? null : (\r\n                <div style={{ flex: 1, display: isProject ? \"flex\" : \"block\" }}>\r\n                    {children}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import { useEffect } from \"react\";\nimport API from \"api/axios.config\";\nimport { useUser } from \"context/UserContext\";\nimport history from \"helpers/history\";\n\nconst WithAxios = ({ children }) => {\n    const { isInitiated, logout } = useUser();\n\n    useEffect(() => {\n        API.interceptors.response.use(\n            (response) => response,\n            async (error) => {\n                const originalRequest = error.config;\n                if (\n                    error.response.status === 401 &&\n                    originalRequest.url === \"/auth/refresh-token\"\n                ) {\n                    return new Promise((resolve, reject) => {\n                        logout();\n                        history.push(\"/login\");\n                        reject(error);\n                    });\n                }\n\n                if (error.response.status === 401 && !originalRequest._retry) {\n                    try {\n                        originalRequest._retry = true;\n                        const res = await API.post(\"/auth/refresh-token\");\n                        localStorage.setItem(\"token\", res.data.token);\n                        return API(originalRequest);\n                    } catch (error) {\n                        logout();\n                        history.push(\"/login\");\n                    }\n                }\n                return Promise.reject(error);\n            }\n        );\n    }, []);\n\n    return isInitiated ? children : null;\n};\n\nexport default WithAxios;\n","import WithAxios from \"helpers/WithAxios\";\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport authService from \"services/auth.service\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst UserContext = createContext();\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [authData, setAuthData] = useState({\r\n        token: \"\",\r\n    });\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [isInitiated, setIsInitiated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            setIsLoggedIn(true);\r\n            setAuthData(() => getTokenData(localStorage.getItem(\"token\")));\r\n        }\r\n        setIsInitiated(true);\r\n    }, []);\r\n\r\n    const getTokenData = (token) => {\r\n        if (token) {\r\n            const decoded = jwt_decode(token);\r\n            return {\r\n                ...decoded,\r\n                token,\r\n            };\r\n        } else\r\n            return {\r\n                token: \"\",\r\n            };\r\n    };\r\n\r\n    const setUserInfo = (data) => {\r\n        const { token } = data;\r\n\r\n        setIsLoggedIn(true);\r\n\r\n        setAuthData(() => getTokenData(token));\r\n        localStorage.setItem(\"token\", token);\r\n    };\r\n\r\n    const logout = () => {\r\n        setAuthData(null);\r\n        setIsLoggedIn(false);\r\n\r\n        authService.logout();\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                setUserState: (data) => setUserInfo(data),\r\n                logout,\r\n                isInitiated,\r\n                isLoggedIn,\r\n                setIsLoggedIn,\r\n                authData,\r\n                setAuthData,\r\n            }}\r\n        >\r\n            <WithAxios>{children}</WithAxios>\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nconst useUser = () => {\r\n    const context = useContext(UserContext);\r\n\r\n    if (context === undefined) {\r\n        throw new Error(\"useUser must be used within UserProvider\");\r\n    }\r\n    return context;\r\n};\r\n\r\nexport { UserProvider, useUser };\r\n","import API from \"api/axios.config\";\r\n\r\nclass AdminService {\r\n    getAdmin() {\r\n        return API.get(`/admins`);\r\n    }\r\n\r\n    createAdmin(data) {\r\n        return API.post(`/admins`, data);\r\n    }\r\n\r\n    deleteAdmin(id) {\r\n        return API.delete(`/admins/${id}`);\r\n    }\r\n}\r\n\r\nexport default new AdminService();\r\n","import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUser } from \"context/UserContext\";\n\nconst useLoginCheck = () => {\n    const navigate = useNavigate();\n    const { isLoggedIn, authData, logout, isInitiated } = useUser();\n    useEffect(() => {\n        if (isInitiated) {\n            if (!isLoggedIn) {\n                logout();\n                navigate(\"/login\");\n                return null;\n            }\n\n            if (!authData?.super) {\n                if (authData?.projectId) {\n                    navigate(`/p-admin/${authData.projectId}`);\n                    return null;\n                } else {\n                    logout();\n                    navigate(\"/login\");\n                    return null;\n                }\n            }\n        }\n    }, [isLoggedIn, authData?.super, authData?.projectId, isInitiated]);\n};\n\nexport default useLoginCheck;\n","import LayoutHOC from \"layout/Layout\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport {\r\n    Button,\r\n    Dropdown,\r\n    Form,\r\n    Input,\r\n    Layout,\r\n    List,\r\n    Menu,\r\n    Modal,\r\n    PageHeader,\r\n    Popconfirm,\r\n} from \"antd\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\nimport { MoreOutlined } from \"@ant-design/icons\";\r\nimport { useUser } from \"context/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport toast from \"react-hot-toast\";\r\nimport adminService from \"services/admin.service\";\r\nimport useLoginCheck from \"hooks/useLoginCheck\";\r\n\r\nconst Admins = (props) => {\r\n    const formRef = useRef(null);\r\n    const [admins, setAdmins] = useState(null);\r\n    const [editModalOpen, setEditModalOpen] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        adminService.getAdmin().then((response) => {\r\n            setAdmins(response.data);\r\n        });\r\n    }, []);\r\n\r\n    useLoginCheck();\r\n\r\n    const onFinish = async (values) => {\r\n        const response = await adminService.createAdmin(values);\r\n        if (response.data) {\r\n            toast.success(\"Saved\");\r\n            setAdmins(response.data);\r\n            setEditModalOpen(null);\r\n            if (formRef.current) formRef.current.resetFields();\r\n        }\r\n    };\r\n\r\n    const deleteAdmin = async (id) => {\r\n        const response = await adminService.deleteAdmin(id);\r\n        if (response.data) setAdmins(response.data);\r\n    };\r\n\r\n    return (\r\n        <LayoutHOC loading={!admins}>\r\n            <Layout\r\n                style={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flex: 1,\r\n                    background: \"white\",\r\n                }}\r\n            >\r\n                <PageHeader\r\n                    onBack={() => navigate(`/admin`)}\r\n                    title={`Admins`}\r\n                    style={{\r\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\r\n                        position: \"fixed\",\r\n                        zIndex: 100,\r\n                        width: \"100%\",\r\n                    }}\r\n                />\r\n\r\n                <Content\r\n                    style={{\r\n                        flex: 1,\r\n                        overflow: \"auto\",\r\n                        padding: \"16px\",\r\n                        paddingTop: \"100px\",\r\n                        maxWidth: \"800px\",\r\n                        width: \"100%\",\r\n                        margin: \"auto\",\r\n                    }}\r\n                >\r\n                    <Button\r\n                        onClick={() => setEditModalOpen({})}\r\n                        style={{ margin: \"16px\" }}\r\n                    >\r\n                        Add admin\r\n                    </Button>\r\n                    <Modal\r\n                        visible={!!editModalOpen}\r\n                        onCancel={() => setEditModalOpen(null)}\r\n                        footer={null}\r\n                    >\r\n                        <Form\r\n                            onFinish={onFinish}\r\n                            style={{\r\n                                padding: \" 16px\",\r\n                                maxWidth: \"500px\",\r\n                                margin: \"auto\",\r\n                            }}\r\n                            ref={formRef}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"email\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please add name!\",\r\n                                        type: \"email\",\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input placeholder=\"Email\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    htmlType=\"submit\"\r\n                                    style={{ width: \"100%\" }}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                    {admins && (\r\n                        <List\r\n                            itemLayout=\"horizontal\"\r\n                            dataSource={admins.sort((a, b) =>\r\n                                a.name > b.name ? 1 : -1\r\n                            )}\r\n                            renderItem={(admin) => (\r\n                                <List.Item\r\n                                    actions={[\r\n                                        <Dropdown\r\n                                            overlay={\r\n                                                <Menu>\r\n                                                    <Popconfirm\r\n                                                        title=\"Are you sure to delete this admin?\"\r\n                                                        onConfirm={() =>\r\n                                                            deleteAdmin(\r\n                                                                admin.email\r\n                                                            )\r\n                                                        }\r\n                                                        okText=\"Yes\"\r\n                                                        cancelText=\"No\"\r\n                                                    >\r\n                                                        <Menu.Item\r\n                                                            key=\"3\"\r\n                                                            danger\r\n                                                        >\r\n                                                            Delete\r\n                                                        </Menu.Item>\r\n                                                    </Popconfirm>\r\n                                                </Menu>\r\n                                            }\r\n                                            trigger={[\"click\"]}\r\n                                        >\r\n                                            <MoreOutlined\r\n                                                style={{ fontSize: \"30px\" }}\r\n                                            />\r\n                                        </Dropdown>,\r\n                                    ]}\r\n                                    style={{\r\n                                        borderBottom: \"3px solid #ccc\",\r\n                                        paddingLeft: \"16px\",\r\n                                    }}\r\n                                >\r\n                                    <List.Item.Meta\r\n                                        title={admin.email}\r\n                                        description={\r\n                                            admin.locked\r\n                                                ? \"Locked\"\r\n                                                : \"Not locked\"\r\n                                        }\r\n                                    />\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                    )}\r\n                </Content>\r\n            </Layout>\r\n        </LayoutHOC>\r\n    );\r\n};\r\n\r\nexport default Admins;\r\n","import API from \"api/axios.config\";\r\n\r\nclass GAService {\r\n    getGA(projectId, metrics, dimensions, period) {\r\n        return API.post(`/ga/${projectId}`, {\r\n            metrics,\r\n            dimensions,\r\n            start: period[0],\r\n            finish: period[1],\r\n        });\r\n    }\r\n\r\n    getAccessToken() {\r\n        return API.get(`/ga/access-token`);\r\n    }\r\n}\r\n\r\nexport default new GAService();\r\n","import React from \"react\";\n\nimport { Chart } from \"react-google-charts\";\nimport moment from \"moment\";\nimport humanizeString from \"string-humanize\";\n\nexport const ChartItem = (props) => {\n    const {\n        data,\n        title,\n        column,\n        seconds,\n        type = \"LineChart\",\n        isDate = true,\n    } = props;\n\n    const dataRefined = data\n        ? [\n              [\n                  humanizeString(data.columnHeaders[0].name.replace(\"ga:\", \"\")),\n                  humanizeString(\n                      data.columnHeaders[column].name.replace(\"ga:\", \"\")\n                  ),\n              ],\n              ...data.rows\n                  .map((i) => [\n                      isDate ? moment(i[0], \"YYYYMMDD\").format(\"D MMM\") : i[0],\n                      parseInt(i[column]) / (seconds ? 60 : 1),\n                  ])\n                  .sort((a, b) => (isDate ? 0 : b[1] - a[1])),\n          ]\n        : [];\n    return (\n        <div style={{ maxWidth: \"400px\", margin: \"20px\", width: \"100%\" }}>\n            <Chart\n                chartType={type}\n                width=\"100%\"\n                height=\"400px\"\n                data={dataRefined}\n                options={{\n                    title,\n                    legend: {\n                        position: \"none\",\n                    },\n                    chartArea: { width: \"85%\", height: \"80%\" },\n                    allowHtml: true,\n                    width: \"100%\",\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ChartItem;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { DatePicker, Layout, PageHeader } from \"antd\";\n\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport projectService from \"services/project.service\";\nimport moment from \"moment\";\nimport gaService from \"services/ga.service\";\nimport toast from \"react-hot-toast\";\nimport { ChartItem } from \"components/DashboardItem/DataItems\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\nimport { useUser } from \"context/UserContext\";\n\nconst AnalyticClient = (props) => {\n    const { id } = useParams();\n\n    const [project, setProject] = useState(null);\n    const [dateData, setDateData] = useState(null);\n    const [cityData, setCityData] = useState(null);\n    const [deviceData, setDeviceData] = useState(null);\n    const [sourceData, setSourceData] = useState(null);\n    const [period, setPeriod] = useState([\n        moment().subtract(7, \"day\").format(),\n        moment().format(),\n    ]);\n    const navigate = useNavigate();\n    const { logout, isLoggedIn, authData } = useUser();\n\n    useEffect(() => {\n        if (\n            !isLoggedIn ||\n            (!authData?.super &&\n                id.toString() !== authData?.projectId.toString())\n        ) {\n            logout();\n            navigate(\"/login\");\n            return null;\n        }\n    }, [isLoggedIn, authData?.super, authData?.projectId]);\n\n    useEffect(() => {\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (period.length === 2 && project?.id) {\n            setDateData(null);\n            setCityData(null);\n            setDeviceData(null);\n            setSourceData(null);\n            getMetricData();\n        }\n    }, [period[0], period[1], project?.id]);\n\n    const getMetricData = () => {\n        gaService\n            .getGA(\n                project.id,\n                \"ga:users,ga:newUsers,ga:pageviews,ga:sessions,ga:sessionDuration\",\n                \"ga:date\",\n                period\n            )\n            .then((res) => {\n                setDateData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Users analytics data not loaded\");\n            });\n\n        gaService\n            .getGA(project.id, \"ga:users\", \"ga:city\", period)\n            .then((res) => {\n                setCityData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Location analytics data not loaded\");\n            });\n\n        gaService\n            .getGA(project.id, \"ga:users\", \"ga:deviceCategory\", period)\n            .then((res) => {\n                setDeviceData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Device analytics data not loaded\");\n            });\n\n        gaService\n            .getGA(project.id, \"ga:users\", \"ga:source\", period)\n            .then((res) => {\n                setSourceData(res.data.data);\n            })\n            .catch((err) => {\n                toast.error(\"Source analytics data not loaded\");\n            });\n    };\n\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(`/p-admin/${id}`)}\n                    title={\n                        <>\n                            Analytics\n                            <br />\n                            <DatePicker.RangePicker\n                                size=\"large\"\n                                defaultValue={[\n                                    moment().subtract(7, \"day\"),\n                                    moment(),\n                                ]}\n                                onChange={(m) =>\n                                    setPeriod([m[0].format(), m[1].format()])\n                                }\n                                allowClear={false}\n                            />\n                        </>\n                    }\n                    style={{ borderBottom: \"1px #ccc solid\" }}\n                />\n                {project && (\n                    <Content\n                        style={{\n                            flex: 1,\n                            overflow: \"auto\",\n                            paddingTop: \"100px\",\n                            padding: \"16px\",\n\n                            width: \"100%\",\n                            margin: \"auto\",\n                        }}\n                    >\n                        <div\n                            style={{\n                                textAlign: \"center\",\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                flexWrap: \"wrap\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                            }}\n                        >\n                            <ChartItem\n                                data={dateData}\n                                title=\"Users\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={1}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"New users\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={2}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"Page views\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={3}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"Sessions\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={4}\n                            />\n                            <ChartItem\n                                data={dateData}\n                                title=\"Session duration (minutes)\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                column={5}\n                                seconds\n                            />\n                            <ChartItem\n                                data={deviceData}\n                                title=\"Device type\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                type=\"PieChart\"\n                                column={1}\n                                seconds\n                                isDate={false}\n                            />\n                            <ChartItem\n                                data={sourceData}\n                                title=\"Source\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                type=\"BarChart\"\n                                column={1}\n                                isDate={false}\n                            />\n                            <ChartItem\n                                data={cityData}\n                                title=\"Source\"\n                                xKey=\"start\"\n                                valKey=\"value\"\n                                type=\"Table\"\n                                column={1}\n                                isDate={false}\n                            />\n                        </div>\n                    </Content>\n                )}\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default AnalyticClient;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { Button, Layout, PageHeader, Form, Input } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport constantService from \"services/constant.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst Constants = (props) => {\n    const [constants, setConstants] = useState(null);\n    const formRef = useRef(null);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        constantService\n            .getConstant()\n            .then((response) => {\n                if (response.data) {\n                    setConstants(response.data);\n                    formRef.current &&\n                        formRef.current.setFieldsValue(response.data);\n                } else setConstants({});\n            })\n            .catch(() => {\n                setConstants({});\n            });\n    }, []);\n\n    useLoginCheck();\n    const onFinish = async (values) => {\n        const response = await constantService.saveConstant(values);\n        if (response.data) {\n            setConstants(response.data);\n            toast.success(\"Saved\");\n        }\n    };\n\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(\"/admin\")}\n                    title=\"Constants\"\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"800px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Form\n                        ref={formRef}\n                        name=\"normal_login\"\n                        onFinish={onFinish}\n                        style={{\n                            padding: \" 16px\",\n                            maxWidth: \"500px\",\n                            margin: \"auto\",\n                        }}\n                        initialValues={constants}\n                    >\n                        <Form.Item name=\"email\">\n                            <Input placeholder=\"Email\" />\n                        </Form.Item>\n\n                        <Form.Item name=\"phone\">\n                            <Input placeholder=\"Phone\" />\n                        </Form.Item>\n\n                        <Form.Item name=\"call\">\n                            <Input placeholder=\"Phone in international format\" />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                style={{ width: \"100%\" }}\n                            >\n                                Save\n                            </Button>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button\n                                onClick={() => {\n                                    if (formRef.current)\n                                        formRef.current.resetFields();\n                                }}\n                                style={{ width: \"100%\" }}\n                            >\n                                Reset\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default Constants;\n","import API from \"api/axios.config\";\r\n\r\nclass ProjectService {\r\n    signUrl(isVideo, isLogo) {\r\n        return API.get(\"/utils/sign-s3\", {\r\n            params: { isVideo: !!isVideo, isLogo: !!isLogo },\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ProjectService();\r\n","import axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport utilsService from \"services/utils.service\";\n\nconst uploadMedia =\n    (cb, isVideo, isLogo) =>\n    async ({\n        action,\n        data,\n        file,\n        filename,\n        headers,\n        onError,\n        onProgress,\n        onSuccess,\n        withCredentials,\n    }) => {\n        try {\n            const res = await utilsService.signUrl(isVideo, isLogo);\n\n            axios\n                .put(res.data.signedRequest, file, {})\n                .then((s3res) => {\n                    cb({ url: res.data.url, thumbnail: res.data.thumbnail });\n                    onSuccess(res.data.thumbnail);\n                })\n                .catch((err) => {\n                    console.log(err.message);\n                    onError();\n                });\n        } catch (error) {\n            onError();\n            toast.error(error.message);\n        }\n    };\n\nexport default uploadMedia;\n","import { LoadingOutlined } from \"@ant-design/icons\";\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Image,\n  Input,\n  InputNumber,\n  Switch,\n  Upload,\n} from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport uploadMedia from \"helpers/uploadMedia\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Logo = (props) => {\n  const customUploadClientLogo = uploadMedia(\n    (values) => {\n      props.setFieldsValue({ [props.id]: values.url });\n    },\n    props.isVideo,\n    true\n  );\n  const [image, setImage] = useState(\"\");\n  useEffect(() => {\n    setTimeout(() => setImage(props[props.id]), 5000);\n  }, [props[props.id]]);\n  return (\n    <>\n      {image === props[props.id] ? (\n        props.isVideo ? (\n          <video\n            id=\"my-player\"\n            class=\"video-js\"\n            controls\n            preload=\"auto\"\n            data-setup=\"{}\"\n          >\n            <source src={image} type=\"video/mp4\"></source>\n            <p class=\"vjs-no-js\">\n              To view this video please enable JavaScript, and consider\n              upgrading to a web browser that\n              <a\n                href=\"https://videojs.com/html5-video-support/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                supports HTML5 video\n              </a>\n            </p>\n          </video>\n        ) : (\n          <Image src={image} style={{ maxHeight: \"50px\" }} />\n        )\n      ) : (\n        <LoadingOutlined />\n      )}\n      <div style={{ marginTop: \"10px\" }}>\n        <Upload\n          customRequest={customUploadClientLogo}\n          showUploadList={false}\n          maxCount={1}\n          getValueFromEvent={() => {}}\n        >\n          <Button>Change</Button>\n        </Upload>\n      </div>\n    </>\n  );\n};\n\nconst ProjectFormFields = ({ setFieldsValue }) => {\n  return (\n    <>\n      <Form.Item\n        name=\"name\"\n        label=\"Name\"\n        rules={[\n          {\n            required: true,\n            message: \"Please set name!\",\n          },\n        ]}\n      >\n        <Input placeholder=\"Name\" />\n      </Form.Item>\n      <Form.Item\n        name=\"url\"\n        label=\"Url\"\n        rules={[\n          {\n            required: true,\n            message: \"Please add url!\",\n          },\n        ]}\n        extra=\"This is only what should appear at the end of url, for example 'best-hotel', 'sky_mall'... Do not put https://tour.immersiv.com.au/ here!\"\n      >\n        <Input placeholder=\"Url\" />\n      </Form.Item>\n      <Form.Item label=\"New UI\" name=\"newUI\" valuePropName=\"checked\">\n        <Checkbox />\n      </Form.Item>\n      <Form.Item\n        label=\"Arcware project\"\n        name=\"isArcware\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n      <Form.Item\n        label=\"Monkeyway project\"\n        name=\"isMonkeyway\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n      <Form.Item name=\"monkeywayBaseUrl\" label=\"Monkeyway base url\">\n        <Input placeholder=\"Leave empty for default.\" />\n      </Form.Item>\n      <Form.Item name=\"monkeywayAppEnvId\" label=\"Monkeyway app env id\">\n        <Input placeholder=\"Monkeyway app env id\" />\n      </Form.Item>\n      <Form.Item name=\"monkeywayApiKey\" label=\"Monkeyway api key\">\n        <Input placeholder=\"Monkeyway api key\" />\n      </Form.Item>\n      <Form.Item name=\"arcwareAddress\" label=\"Arcware address\">\n        <Input placeholder=\"Arcware address\" />\n      </Form.Item>\n      <Form.Item name=\"arcwarePackageId\" label=\"Arcware project id\">\n        <Input placeholder=\"Arcware project id\" />\n      </Form.Item>\n      <Form.Item name=\"projectId\" label=\"Project id\" hidden>\n        <Input placeholder=\"Project id\" />\n      </Form.Item>\n      <Form.Item name=\"modelId\" label=\"Model id\" hidden>\n        <Input placeholder=\"Model id\" />\n      </Form.Item>\n      <Form.Item name=\"levelsCount\" label=\"Number of levels\">\n        <InputNumber placeholder=\"Number of levels\" />\n      </Form.Item>\n      <Form.Item\n        label=\"Custom background\"\n        name=\"backgroundOn\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n      <Form.Item\n        label=\"Background video\"\n        name=\"backgroundTypeVideo\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n      <Form.Item\n        label=\"Background video\"\n        valuePropName=\"backgroundVideo\"\n        name=\"backgroundVideo\"\n      >\n        <Logo setFieldsValue={setFieldsValue} isVideo />\n      </Form.Item>\n      <Form.Item\n        label=\"Background video Vimeo\"\n        name=\"backgroundVideoVimeo\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n      <Form.Item\n        name=\"backgroundVideoVimeoUrl\"\n        label=\"Vimeo url\"\n        extra=\"Should look like https://player.vimeo.com/video/76979871?h=8272103f6e\"\n      >\n        <Input placeholder=\"https://player.vimeo.com/video/76979871?h=8272103f6e\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Background image\"\n        valuePropName=\"backgroundImage\"\n        name=\"backgroundImage\"\n      >\n        <Logo setFieldsValue={setFieldsValue} />\n      </Form.Item>\n      <Form.Item name=\"adminEmail\" label=\"Client login\">\n        <Input placeholder=\"Admin email\" />\n      </Form.Item>\n      <Form.Item\n        name=\"adminPassword\"\n        label=\"Client password\"\n        rules={[\n          {\n            min: 6,\n            message: \"Must have length at least 6!\",\n          },\n        ]}\n      >\n        <Input placeholder=\"Admin password\" />\n      </Form.Item>\n      <Form.Item name=\"analytic\" label=\"Analytics property\">\n        <Input placeholder=\"Google analytics property id\" />\n      </Form.Item>\n      <Form.Item\n        name=\"mobileNativeEvents\"\n        label=\"Mobile native events\"\n        valuePropName=\"checked\"\n      >\n        <Switch>Mobile native events</Switch>\n      </Form.Item>\n      <Form.Item\n        name=\"desktopNativeEvents\"\n        label=\"Desktop native events\"\n        valuePropName=\"checked\"\n      >\n        <Switch />\n      </Form.Item>\n      <Form.Item name=\"published\" valuePropName=\"checked\" label=\"Published\">\n        <Checkbox />\n      </Form.Item>\n      <Form.Item\n        label=\"Project details on\"\n        name=\"projectDetailsOn\"\n        valuePropName=\"checked\"\n      >\n        <Checkbox />\n      </Form.Item>\n      <Form.Item label=\"Project details duration\" name=\"projectDetailsDuraton\">\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item\n        label=\"Client logo\"\n        valuePropName=\"clientLogo\"\n        name=\"clientLogo\"\n      >\n        <Logo setFieldsValue={setFieldsValue} />\n      </Form.Item>\n      <Form.Item label=\"Client logo max width\" name=\"clientLogoMaxWidth\">\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item label=\"Client logo max height\" name=\"clientLogoMaxHeight\">\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item\n        label=\"Project logo\"\n        valuePropName=\"projectLogo\"\n        name=\"projectLogo\"\n      >\n        <Logo setFieldsValue={setFieldsValue} />\n      </Form.Item>\n      <Form.Item label=\"Project logo max width\" name=\"projectLogoMaxWidth\">\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item label=\"Project logo max height\" name=\"projectLogoMaxHeight\">\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item\n        name=\"projectName\"\n        label=\"Project name\"\n        extra=\"This text will appear on the screen where the project is being loaded if there is no logo\"\n      >\n        <Input placeholder=\"projectName\" />\n      </Form.Item>\n      <Form.Item\n        name=\"description\"\n        label=\"Description\"\n        extra=\"This text will appear on the screen where the project is being loaded\"\n      >\n        <TextArea placeholder=\"Description\" rows={4} />\n      </Form.Item>\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\n          Save\n        </Button>\n      </Form.Item>\n    </>\n  );\n};\n\nexport default ProjectFormFields;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useRef } from \"react\";\nimport projectService from \"services/project.service\";\n\nimport { Button, Layout, PageHeader, Form } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport ProjectFormFields from \"components/ProjectFormFields\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst CreateProject = (props) => {\n    const formRef = useRef(null);\n\n    const navigate = useNavigate();\n\n    useLoginCheck();\n\n    const onFinish = async (values) => {\n        const response = await projectService.createProject(values);\n        if (response.data) {\n            toast.success(\"Saved\");\n            navigate(\"/admin\");\n        }\n    };\n\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(\"/admin\")}\n                    title=\"Create project\"\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"800px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Form\n                        ref={formRef}\n                        name=\"normal_login\"\n                        onFinish={onFinish}\n                        style={{\n                            padding: \" 16px\",\n                            maxWidth: \"500px\",\n                            margin: \"auto\",\n                        }}\n                        labelCol={{ span: 8 }}\n                        wrapperCol={{ span: 16 }}\n                    >\n                        <ProjectFormFields />\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                            <Button\n                                onClick={() => {\n                                    if (formRef.current)\n                                        formRef.current.resetFields();\n                                }}\n                                style={{ width: \"100%\" }}\n                            >\n                                Reset\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default CreateProject;\n","import React, { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport authService from \"services/auth.service\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\n\r\nconst ForgotPasswordModal = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const onFinish = (data) => {\r\n        authService\r\n            .forgotPassword(data.email)\r\n            .then((data) => {\r\n                if (data.data.status === \"OK\") {\r\n                    toast.success(\"Email has been sent successfully.\");\r\n                    setIsOpen(false);\r\n                }\r\n            })\r\n            .catch((error) => {});\r\n    };\r\n    return (\r\n        <div>\r\n            <>\r\n                <span onClick={() => setIsOpen(!isOpen)}>Forgot password?</span>\r\n                <Modal\r\n                    title=\"Forgot Password\"\r\n                    visible={isOpen}\r\n                    footer={[]}\r\n                    onCancel={() => setIsOpen(false)}\r\n                >\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        onFinish={onFinish}\r\n                        style={{\r\n                            padding: \"100px 16px\",\r\n                            maxWidth: \"500px\",\r\n                            margin: \"auto\",\r\n                        }}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[\r\n                                {\r\n                                    type: \"email\",\r\n                                    message: \"The input is not valid E-mail!\",\r\n                                },\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your E-mail!\",\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                prefix={\r\n                                    <UserOutlined className=\"site-form-item-icon\" />\r\n                                }\r\n                                placeholder=\"Email\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                Reset password\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPasswordModal;\r\n","// import { Button, HelperText, Input, Label } from \"@windmill/react-ui\";\r\nimport ForgotPasswordModal from \"components/ForgotPasswordModal\";\r\nimport { useUser } from \"context/UserContext\";\r\nimport Layout from \"layout/Layout\";\r\nimport React, { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport authService from \"services/auth.service\";\r\nimport { Form, Input, Button, Typography } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nconst Login = () => {\r\n    const { isLoggedIn, setUserState, authData } = useUser();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const onFinish = async (data) => {\r\n        const { email, password } = data;\r\n\r\n        try {\r\n            setIsLoading(true);\r\n            const data = await authService.login(email, password);\r\n            toast.success(\"Login successful 🔓\");\r\n\r\n            setTimeout(() => {\r\n                setUserState(data);\r\n                setRedirectToReferrer(true);\r\n                setIsLoading(false);\r\n            }, 1500);\r\n        } catch (error) {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    if (\r\n        (isLoggedIn || redirectToReferrer) &&\r\n        (authData?.super || authData?.projectId)\r\n    ) {\r\n        navigate(\"/admin\");\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Login\" loading={isLoading}>\r\n            <Form\r\n                name=\"normal_login\"\r\n                onFinish={onFinish}\r\n                style={{\r\n                    padding: \"100px 16px\",\r\n                    maxWidth: \"500px\",\r\n                    margin: \"auto\",\r\n                }}\r\n            >\r\n                <Typography.Title\r\n                    style={{ textAlign: \"center\", marginBottom: \"50px\" }}\r\n                >\r\n                    Manage IMMERSIVE\r\n                </Typography.Title>\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            type: \"email\",\r\n                            message: \"The input is not valid E-mail!\",\r\n                        },\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your E-mail!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input\r\n                        prefix={\r\n                            <UserOutlined className=\"site-form-item-icon\" />\r\n                        }\r\n                        placeholder=\"Email\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your Password!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password\r\n                        prefix={\r\n                            <LockOutlined className=\"site-form-item-icon\" />\r\n                        }\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <a>\r\n                        <ForgotPasswordModal />\r\n                    </a>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{ width: \"100%\" }}\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport projectService from \"services/project.service\";\n\nimport { Button, Layout, PageHeader, Form, Typography } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport ProjectFormFields from \"components/ProjectFormFields\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\nimport copy from \"copy-to-clipboard\";\n\nconst ProjectDetails = (props) => {\n  const [project, setProject] = useState(null);\n\n  const [form] = Form.useForm();\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    projectService.getProject(id).then((response) => {\n      setProject(response.data);\n    });\n  }, [id]);\n\n  const navigate = useNavigate();\n  useLoginCheck();\n\n  const onFinish = async (values) => {\n    const response = await projectService.saveProject(project.id, values);\n    if (response.data) toast.success(\"Saved\");\n  };\n\n  const projectAddress = project?.url\n    ? `https://tour.immersiv.com.au/p/${project.url}`\n    : \"not set yet\";\n  const galleryAddress = project?.url\n    ? `https://tour.immersiv.com.au/g/${project.url}`\n    : \"not set yet\";\n  const propertiesAddress = project?.url\n    ? `https://tour.immersiv.com.au/api/properties/properties-ue/${project.url}`\n    : \"not set yet\";\n\n  const setFieldsValue = (val) => {\n    if (form) {\n      form.setFieldsValue({\n        ...form.getFieldsValue(),\n        ...val,\n      });\n    }\n  };\n\n  const projectName = Form.useWatch(\"projectName\", form);\n  const clientLogo = Form.useWatch(\"clientLogo\", form);\n  const clientLogoMaxWidth = Form.useWatch(\"clientLogoMaxWidth\", form);\n  const clientLogoMaxHeight = Form.useWatch(\"clientLogoMaxHeight\", form);\n  const projectLogo = Form.useWatch(\"projectLogo\", form);\n  const projectLogoMaxWidth = Form.useWatch(\"projectLogoMaxWidth\", form);\n  const projectLogoMaxHeight = Form.useWatch(\"projectLogoMaxHeight\", form);\n  return (\n    <LayoutHOC loading={!project}>\n      <Layout\n        style={{\n          height: \"100%\",\n          display: \"flex\",\n          flex: 1,\n          background: \"white\",\n        }}\n      >\n        <PageHeader\n          onBack={() => navigate(\"/admin\")}\n          title={`Project - ${project?.name}`}\n          style={{\n            boxShadow: \"1px 1px 10px 1px #ccc\",\n            position: \"fixed\",\n            zIndex: 100,\n            width: \"100%\",\n          }}\n        />\n\n        <Content\n          style={{\n            flex: 1,\n            overflow: \"auto\",\n            padding: \"16px\",\n            paddingTop: \"100px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            margin: \"auto\",\n          }}\n        >\n          {project && (\n            <>\n              <Button\n                onClick={() => navigate(`/p-admin/${id}`)}\n                style={{ margin: \"16px\" }}\n              >\n                See client admin panel\n              </Button>\n              <Button\n                onClick={() =>\n                  navigate(`/admin/projects/${project.id}/properties`)\n                }\n                style={{ margin: \"16px\" }}\n              >\n                Manage properties\n              </Button>\n              <Button\n                onClick={() => navigate(`/admin/projects/${project.id}/media`)}\n                style={{ margin: \"16px\" }}\n              >\n                Manage media\n              </Button>\n              <Button\n                onClick={() => navigate(`/admin/projects/${project.id}/ui`)}\n                style={{ margin: \"16px\" }}\n              >\n                Manage UI\n              </Button>\n              <Typography.Paragraph>\n                {`The project full url is ${projectAddress}`}\n                <Button onClick={() => copy(projectAddress)} type=\"link\">\n                  Copy\n                </Button>\n              </Typography.Paragraph>\n\n              <Typography.Paragraph>\n                {`The project gallery url is ${galleryAddress} `}\n                <Button onClick={() => copy(galleryAddress)} type=\"link\">\n                  Copy\n                </Button>\n              </Typography.Paragraph>\n\n              <Typography.Paragraph>\n                {`The project properties api link ${propertiesAddress} `}\n                <Button onClick={() => copy(propertiesAddress)} type=\"link\">\n                  Copy\n                </Button>\n              </Typography.Paragraph>\n\n              <Form\n                form={form}\n                onFinish={onFinish}\n                style={{\n                  padding: \" 16px\",\n                  maxWidth: \"500px\",\n                  margin: \"auto\",\n                }}\n                initialValues={project}\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n              >\n                <ProjectFormFields setFieldsValue={setFieldsValue} />\n\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                  <Button\n                    onClick={() => {\n                      if (form.current) form.current.resetFields();\n                    }}\n                    style={{ width: \"100%\" }}\n                  >\n                    Reset\n                  </Button>\n                </Form.Item>\n              </Form>\n              <div>\n                <div>Project details preview</div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flex: 1,\n                    alignItems: \"center\",\n                  }}\n                >\n                  <img\n                    src={clientLogo}\n                    alt=\"logo\"\n                    style={{\n                      maxHeight: clientLogoMaxHeight + \"px\",\n                      maxWidth: clientLogoMaxWidth + \"px\",\n                      marginBottom: \"36px\",\n                    }}\n                  />\n                  {projectLogo ? (\n                    <img\n                      src={projectLogo}\n                      alt=\"logo\"\n                      style={{\n                        maxHeight: projectLogoMaxHeight + \"px\",\n                        maxWidth: projectLogoMaxWidth + \"px\",\n                        marginBottom: \"36px\",\n                      }}\n                    />\n                  ) : (\n                    <h6 style={{ textAlign: \"center\" }}>{projectName}</h6>\n                  )}\n                  {/* <p style={{ textAlign: \"center\" }}>\n                                        {description}\n                                    </p> */}\n                </div>\n              </div>\n            </>\n          )}\n        </Content>\n      </Layout>\n    </LayoutHOC>\n  );\n};\n\nexport default ProjectDetails;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\nimport projectService from \"services/project.service\";\n\nimport {\n    Button,\n    Drawer,\n    Dropdown,\n    Layout,\n    List,\n    Menu,\n    PageHeader,\n    Popconfirm,\n} from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport {\n    EyeFilled,\n    EyeInvisibleFilled,\n    MenuOutlined,\n    MoreOutlined,\n    StarFilled,\n} from \"@ant-design/icons\";\nimport { useUser } from \"context/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst Projects = (props) => {\n    const [projects, setProjects] = useState(null);\n    const { logout } = useUser();\n    const navigate = useNavigate();\n\n    const [openDrawer, setOpenDrawer] = useState(false);\n    useEffect(() => {\n        projectService.getProject().then((response) => {\n            setProjects(response.data);\n        });\n    }, []);\n\n    useLoginCheck();\n\n    const deleteProject = async (id) => {\n        const response = await projectService.deleteProject(id);\n        if (response.data) setProjects(response.data);\n    };\n\n    const setFeatured = async (id) => {\n        const response = await projectService.saveProject(id, {\n            featured: true,\n        });\n\n        if (response.data) setProjects(response.data);\n    };\n\n    return (\n        <LayoutHOC loading={!projects}>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => setOpenDrawer(true)}\n                    backIcon={<MenuOutlined />}\n                    title={\"Projects\"}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"800px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Button\n                        onClick={() => navigate(\"/admin/projects/create\")}\n                        style={{ margin: \"16px\" }}\n                    >\n                        Add project\n                    </Button>\n                    {projects && (\n                        <List\n                            itemLayout=\"horizontal\"\n                            dataSource={projects.sort((a, b) =>\n                                a.url > b.url ? 1 : -1\n                            )}\n                            renderItem={(project) => (\n                                <List.Item\n                                    actions={[\n                                        <Dropdown\n                                            overlay={\n                                                <Menu>\n                                                    <Menu.Item\n                                                        key=\"1\"\n                                                        onClick={() =>\n                                                            setFeatured(\n                                                                project.id\n                                                            )\n                                                        }\n                                                    >\n                                                        Set as featured\n                                                    </Menu.Item>\n                                                    <Menu.Divider />\n                                                    <Popconfirm\n                                                        title=\"Are you sure to delete this project?\"\n                                                        onConfirm={() =>\n                                                            deleteProject(\n                                                                project.id\n                                                            )\n                                                        }\n                                                        okText=\"Yes\"\n                                                        cancelText=\"No\"\n                                                    >\n                                                        <Menu.Item\n                                                            key=\"3\"\n                                                            danger\n                                                        >\n                                                            Delete\n                                                        </Menu.Item>\n                                                    </Popconfirm>\n                                                </Menu>\n                                            }\n                                            trigger={[\"click\"]}\n                                        >\n                                            <MoreOutlined\n                                                style={{ fontSize: \"30px\" }}\n                                            />\n                                        </Dropdown>,\n                                    ]}\n                                >\n                                    <List.Item.Meta\n                                        avatar={\n                                            project.featured ? (\n                                                <StarFilled\n                                                    style={{ fontSize: \"24px\" }}\n                                                />\n                                            ) : project.published ? (\n                                                <EyeFilled\n                                                    style={{ fontSize: \"24px\" }}\n                                                />\n                                            ) : (\n                                                <EyeInvisibleFilled\n                                                    style={{ fontSize: \"24px\" }}\n                                                />\n                                            )\n                                        }\n                                        title={project.name}\n                                        description={project.url}\n                                        onClick={() => {\n                                            navigate(\n                                                `/admin/projects/${project.id}`\n                                            );\n                                        }}\n                                    />\n                                </List.Item>\n                            )}\n                        />\n                    )}\n                </Content>\n            </Layout>\n            <Drawer\n                title=\"Menu\"\n                placement=\"left\"\n                onClose={() => setOpenDrawer(false)}\n                visible={openDrawer}\n            >\n                <Menu\n                    mode=\"inline\"\n                    style={{ width: \"100%\" }}\n                    onClick={({ item, key }) => {\n                        setOpenDrawer(false);\n                        switch (key) {\n                            case \"logout\":\n                                logout();\n                                break;\n                            case \"info\":\n                                navigate(\"/admin/contant\");\n                                break;\n                            case \"admins\":\n                                navigate(\"/admin/admins\");\n                                break;\n                            default:\n                                return;\n                        }\n                    }}\n                    activeKey=\"projects\"\n                    selectedKeys={[\"projects\"]}\n                >\n                    <Menu.Item key=\"projects\">Projects</Menu.Item>\n                    <Menu.Item key=\"info\">Constant</Menu.Item>\n                    <Menu.Item key=\"admins\">Admins</Menu.Item>\n                    <Menu.Item key=\"logout\">Logout</Menu.Item>\n                </Menu>\n            </Drawer>\n        </LayoutHOC>\n    );\n};\n\nexport default Projects;\n","import API from \"api/axios.config\";\r\n\r\nclass PropertyService {\r\n    getProperty(projectId, id) {\r\n        return API.get(`/properties/${projectId}/${id ? \"/\" + id : \"\"}`);\r\n    }\r\n    saveProperty(projectId, id, data) {\r\n        return API.put(`/properties/${projectId}/${id}`, data);\r\n    }\r\n    createProperty(projectId, id) {\r\n        return API.post(`/properties/${projectId}`, { id });\r\n    }\r\n    deleteProperty(projectId, ids) {\r\n        return API.post(`/properties/${projectId}/delete`, { ids });\r\n    }\r\n    saveStatus(projectId, id, data) {\r\n        return API.put(`/properties/${projectId}/status/${id}`, data);\r\n    }\r\n}\r\n\r\nexport default new PropertyService();\r\n","import {\n  Button,\n  Form,\n  Input,\n  InputNumber,\n  Select,\n  Table,\n  Typography,\n} from \"antd\";\nimport React, { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport propertyService from \"services/property.service\";\n\nconst { Option } = Select;\n\nconst transferOrientationToObject = (data) => {\n  if (!data.Orientation) return data;\n  const o = {};\n  if (data.Orientation.indexOf(\"N\") !== -1) o.N = true;\n  else if (data.Orientation.indexOf(\"S\") !== -1) o.S = true;\n  if (data.Orientation.indexOf(\"E\") !== -1) o.E = true;\n  else if (data.Orientation.indexOf(\"W\") !== -1) o.W = true;\n  return { ...data, Orientation: o };\n};\n\nconst transferOrientationToString = (data) => {\n  let o = \"\";\n  if (data.Orientation.N) o = o + \"N\";\n  else if (data.Orientation.S) o = o + \"S\";\n  if (data.Orientation.E) o = o + \"E\";\n  else if (data.Orientation.W) o = o + \"W\";\n  return { ...data, Orientation: o };\n};\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  property,\n  index,\n  children,\n  ...restProps\n}) => {\n  let inputNode = <InputNumber />;\n\n  switch (inputType) {\n    case \"number\":\n      inputNode = <InputNumber />;\n      break;\n    case \"orientation\":\n      inputNode = (\n        <Select>\n          <Option value=\"N\">North</Option>\n          <Option value=\"NE\">North-East</Option>\n          <Option value=\"E\">East</Option>\n          <Option value=\"SE\">South-East</Option>\n          <Option value=\"S\">South</Option>\n          <Option value=\"SW\">South-West</Option>\n          <Option value=\"W\">West</Option>\n          <Option value=\"NW\">North-West</Option>\n        </Select>\n      );\n      break;\n    case \"availability\":\n      inputNode = (\n        <Select>\n          <Option value=\"available\">Available</Option>\n          <Option value=\"reserved\">Reserved</Option>\n          <Option value=\"sold\">Sold</Option>\n        </Select>\n      );\n      break;\n    default:\n      inputNode = <Input />;\n  }\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0,\n            width: \"100%\",\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n\nconst capitalize = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\nconst PropertiesTable = (props) => {\n  const { properties, project, setProperties, admin, setEditModalOpen } = props;\n  const [selectedProperties, setSelectedProperties] = useState([]);\n  const [editingKey, setEditingKey] = useState(\"\");\n\n  const [form] = Form.useForm();\n  const isEditing = (property) => property.id === editingKey;\n\n  const edit = (property) => {\n    form.setFieldsValue(property);\n    setEditingKey(property.id);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n  };\n\n  const save = async (key) => {\n    try {\n      const values = await form.validateFields();\n      const response = await propertyService.saveProperty(\n        project.id,\n        key,\n        transferOrientationToObject(values)\n      );\n\n      if (response.data) {\n        toast.success(\"Saved\");\n        setProperties(response.data);\n        setEditingKey(\"\");\n      }\n    } catch (errInfo) {\n      console.log(\"Validate Failed:\", errInfo);\n    }\n  };\n\n  const deleteProperty = async () => {\n    const response = await propertyService.deleteProperty(\n      project.id,\n      selectedProperties\n    );\n    if (response.data) setProperties(response.data);\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"Name\",\n      sorter: (a, b) => (a.Name > b.Name ? 1 : -1),\n      sortDirections: [\"descend\", \"ascend\"],\n      editable: admin,\n      inputType: \"text\",\n      width: 100,\n    },\n    {\n      title: \"Availability\",\n      dataIndex: \"Availability\",\n      sorter: (a, b) => (a.Availability > b.Availability ? 1 : -1),\n      sortDirections: [\"descend\", \"ascend\"],\n      onFilter: (value, property) => property.Availability.indexOf(value) === 0,\n      editable: true,\n      inputType: \"availability\",\n      width: 100,\n      render: (_, property) => capitalize(property.Availability),\n    },\n    {\n      title: \"Surface\",\n      dataIndex: \"Surface\",\n      sorter: (a, b) => a.Surface - b.Surface,\n      sortDirections: [\"descend\", \"ascend\"],\n      editable: admin,\n      inputType: \"number\",\n      width: 100,\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"Price\",\n      sorter: (a, b) => a.Price - b.Price,\n      sortDirections: [\"descend\", \"ascend\"],\n      editable: true,\n      inputType: \"number\",\n      width: 100,\n    },\n    {\n      title: \"Bedrooms\",\n      dataIndex: \"BedroomsCount\",\n      key: \"bedrooms\",\n      sortDirections: [\"descend\", \"ascend\"],\n      editable: admin,\n      inputType: \"number\",\n      width: 100,\n    },\n    {\n      title: \"Bathrooms\",\n      dataIndex: \"BathroomsCount\",\n      sorter: (a, b) => a.BathroomsCount - b.BathroomsCount,\n      sortDirections: [\"descend\", \"ascend\"],\n      editable: admin,\n      inputType: \"number\",\n      width: 100,\n    },\n    {\n      title: \"id\",\n      dataIndex: \"id\",\n      sorter: (a, b) => a.id - b.id,\n      sortDirections: [\"descend\", \"ascend\"],\n      editable: false,\n      inputType: \"text\",\n      width: 100,\n    },\n    ...(project.url.toLowerCase() === \"Imperial_Square\".toLowerCase() ||\n    project.url.toLowerCase() === \"Forest_Reach\".toLowerCase()\n      ? []\n      : [\n          {\n            title: \"Frontage\",\n            dataIndex: \"Frontage\",\n            sorter: (a, b) => a.Frontage - b.Frontage,\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: admin,\n            inputType: \"number\",\n            width: 100,\n          },\n          {\n            title: \"Depth\",\n            dataIndex: \"Depth\",\n            sorter: (a, b) => a.Depth - b.Depth,\n            sortDirections: [\"descend\", \"ascend\"],\n            editable: admin,\n            inputType: \"number\",\n            width: 100,\n          },\n          {\n            title: \"Virtual tour\",\n            dataIndex: \"URLVirtualTour\",\n            editable: admin,\n            inputType: \"text\",\n            width: 100,\n          },\n          {\n            title: \"3D Tour\",\n            dataIndex: \"URLPlan\",\n            editable: admin,\n            inputType: \"text\",\n            width: 100,\n          },\n          {\n            title: \"Url\",\n            dataIndex: \"Url\",\n            editable: admin,\n            inputType: \"text\",\n            width: 200,\n          },\n          {\n            title: \"FacadeName\",\n            dataIndex: \"FacadeName\",\n            editable: admin,\n            inputType: \"text\",\n            width: 100,\n          },\n        ]),\n    {\n      title: \"Orientation\",\n      dataIndex: \"Orientation\",\n\n      sorter: (a, b) =>\n        transferOrientationToString(a).Orientation >\n        transferOrientationToString(b).Orientation\n          ? 1\n          : -1,\n      sortDirections: [\"descend\", \"ascend\"],\n      editable: admin,\n      inputType: \"orientation\",\n      width: 100,\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"actions\",\n      width: 80,\n      render: (_, property) => {\n        const editable = isEditing(property);\n        return editable ? (\n          <span>\n            <Typography.Link\n              onClick={() => save(property.id)}\n              style={{\n                marginRight: 8,\n              }}\n            >\n              Save\n            </Typography.Link>\n\n            <Typography.Link onClick={cancel}>Cancel</Typography.Link>\n          </span>\n        ) : (\n          <span>\n            <Typography.Link\n              disabled={editingKey !== \"\"}\n              onClick={() => edit(property)}\n            >\n              Edit\n            </Typography.Link>\n          </span>\n        );\n      },\n    },\n  ];\n\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return {\n      ...col,\n      onCell: (property) => ({\n        property,\n        inputType: col.inputType,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(property),\n      }),\n    };\n  });\n\n  const onAddProperty = async () => {\n    const response = await propertyService.createProperty(\n      project.id,\n      properties.length ? properties[properties.length - 1].id : \"\"\n    );\n    if (response.data) {\n      toast.success(\"Added\");\n      setProperties(response.data.newProperties);\n      setEditingKey(response.data.newProperty.id);\n      form.setFieldsValue(\n        transferOrientationToString(response.data.newProperty)\n      );\n      document.querySelector(\"div.ant-table-body\").scrollTop = 1000000;\n    }\n  };\n  return (\n    <>\n      <Form form={form} component={false}>\n        <Table\n          components={{\n            body: {\n              cell: EditableCell,\n            },\n          }}\n          size=\"small\"\n          bordered\n          dataSource={properties.map((i) => {\n            const d = transferOrientationToString(i);\n            return { ...d, key: d.id };\n          })}\n          columns={mergedColumns}\n          rowClassName=\"editable-row\"\n          rowSelection={\n            admin\n              ? {\n                  type: \"checkbox\",\n                  onChange: (_, selectedRows) => {\n                    setSelectedProperties(selectedRows.map((i) => i.id));\n                  },\n                }\n              : null\n          }\n          pagination={false}\n          tableLayout=\"fixed\"\n          scroll={{\n            y: \"calc(100vh - 230px)\",\n          }}\n        />\n      </Form>\n      {admin && (\n        <Button\n          onClick={onAddProperty}\n          style={{ margin: \"16px\" }}\n          type=\"primary\"\n        >\n          Add property\n        </Button>\n      )}\n      {!!selectedProperties.length && admin && (\n        <Typography.Link\n          onClick={() => deleteProperty()}\n          type=\"danger\"\n          disabled={editingKey}\n        >\n          Delete\n        </Typography.Link>\n      )}\n    </>\n  );\n};\n\nexport default PropertiesTable;\n","import React, { useEffect } from \"react\";\n\nimport propertyService from \"services/property.service\";\nimport PropertiesTable from \"components/ProjectView/Components/PropertiesTable\";\nimport projectService from \"services/project.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst Properties = (props) => {\n    const { admin, id, project, properties, setProject, setProperties } = props;\n\n    useEffect(() => {\n        propertyService.getProperty(id).then((response) => {\n            setProperties(response.data);\n        });\n\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n\n    useLoginCheck();\n\n    return (\n        properties &&\n        project && (\n            <PropertiesTable\n                properties={properties}\n                setProperties={setProperties}\n                project={project}\n                admin={admin}\n            />\n        )\n    );\n};\n\nexport default Properties;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Properties from \"./Properties\";\nimport LayoutHOC from \"layout/Layout\";\nimport { Layout, PageHeader } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport propertyService from \"services/property.service\";\nimport projectService from \"services/project.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\n\nconst PropertiesAdmin = (props) => {\n    const { id } = useParams();\n\n    const navigate = useNavigate();\n    const [project, setProject] = useState(null);\n    const [properties, setProperties] = useState(null);\n    useLoginCheck();\n\n    useEffect(() => {\n        propertyService.getProperty(id).then((response) => {\n            setProperties(response.data);\n        });\n\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n    return (\n        <LayoutHOC>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => navigate(`/admin/projects/${id}`)}\n                    title={`Properties of project id: ${id}`}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"1200px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Properties\n                        admin\n                        id={id}\n                        setProject={setProject}\n                        setProperties={setProperties}\n                        project={project}\n                        properties={properties}\n                    />\n                </Content>\n            </Layout>\n        </LayoutHOC>\n    );\n};\n\nexport default PropertiesAdmin;\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport LayoutHOC from \"layout/Layout\";\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Input,\n  Layout,\n  List,\n  PageHeader,\n  Popconfirm,\n  Select,\n  Space,\n  Typography,\n  Upload,\n} from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport projectService from \"services/project.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\nimport toast from \"react-hot-toast\";\nimport YouTube from \"react-youtube\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport utilsService from \"services/utils.service\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\nimport uploadMedia from \"helpers/uploadMedia\";\nimport ReactPlayer from \"react-player\";\n\nconst MediaAdmin = (props) => {\n  const { id } = useParams();\n  const formRef = useRef(null);\n\n  const navigate = useNavigate();\n  const [project, setProject] = useState(null);\n  useLoginCheck();\n\n  useEffect(() => {\n    projectService.getProject(id).then((response) => {\n      setProject(response.data);\n    });\n  }, []);\n\n  const onFinish = async (values) => {\n    const response = await projectService.addMedia(id, values);\n    if (response.data) {\n      toast.success(\"Saved\");\n      setProject(response.data);\n      if (formRef.current) formRef.current.resetFields();\n    }\n  };\n  const handleMove = async (mediaId, down) => {\n    const response = await projectService.moveMedia(id, mediaId, down);\n    if (response.data) {\n      toast.success(\"Moved\");\n      setProject(response.data);\n    }\n  };\n  const handleDelete = async (mediaId) => {\n    const response = await projectService.deleteMedia(id, mediaId);\n    if (response.data) {\n      toast.success(\"Deleted\");\n      setProject(response.data);\n    }\n  };\n\n  const customUpload = uploadMedia((values) => {\n    if (formRef.current) {\n      formRef.current.setFieldsValue({\n        ...formRef.current.values,\n        ...values,\n      });\n    }\n  }, formRef?.current?.getFieldValue(\"type\") === \"video\");\n\n  return (\n    <LayoutHOC>\n      <Layout\n        style={{\n          height: \"100%\",\n          display: \"flex\",\n          flex: 1,\n          background: \"white\",\n        }}\n      >\n        <PageHeader\n          onBack={() => navigate(`/admin/projects/${id}`)}\n          title={`Media of project id: ${id}`}\n          style={{\n            boxShadow: \"1px 1px 10px 1px #ccc\",\n            position: \"fixed\",\n            zIndex: 100,\n            width: \"100%\",\n          }}\n        />\n\n        <Content\n          style={{\n            flex: 1,\n            overflow: \"auto\",\n            padding: \"16px\",\n            paddingTop: \"100px\",\n            maxWidth: \"1200px\",\n            width: \"100%\",\n            margin: \"auto\",\n          }}\n        >\n          {project && project.media && (\n            <div>\n              <List\n                itemLayout=\"vertical\"\n                size=\"large\"\n                dataSource={project.media}\n                renderItem={(item, index) => (\n                  <List.Item\n                    key={item.id}\n                    actions={[\n                      <Button\n                        size=\"small\"\n                        key=\"up\"\n                        onClick={() => handleMove(item.id, false)}\n                      >\n                        Move up\n                      </Button>,\n                      <Button\n                        size=\"small\"\n                        key=\"down\"\n                        onClick={() => handleMove(item.id, true)}\n                      >\n                        Move down\n                      </Button>,\n                      <Popconfirm\n                        title=\"Are you sure to delete this media?\"\n                        onConfirm={() => handleDelete(item.id)}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                        key=\"delete\"\n                      >\n                        <Button size=\"small\" danger>\n                          Delete\n                        </Button>\n                      </Popconfirm>,\n                    ]}\n                    extra={\n                      item.type === \"video\" ? (\n                        !item.vimeo ? (\n                          <video\n                            id=\"my-player\"\n                            className=\"video-js\"\n                            controls\n                            preload=\"auto\"\n                            data-setup=\"{}\"\n                          >\n                            <source src={item.url} type=\"video/mp4\"></source>\n                            <p className=\"vjs-no-js\">\n                              To view this video please enable JavaScript, and\n                              consider upgrading to a web browser that\n                              <a\n                                href=\"https://videojs.com/html5-video-support/\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                              >\n                                supports HTML5 video\n                              </a>\n                            </p>\n                          </video>\n                        ) : (\n                          <ReactPlayer url={item.url} controls />\n                        )\n                      ) : (\n                        <img\n                          width=\"100%\"\n                          style={{\n                            maxWidth: \"300px\",\n                          }}\n                          alt=\"logo\"\n                          src={item.url}\n                        />\n                      )\n                    }\n                  >\n                    <List.Item.Meta\n                      description={item.type}\n                      title={`${index + 1}. ${item.name || \"no name\"}`}\n                    />\n                    {item.url}\n                  </List.Item>\n                )}\n              />\n              <Form\n                onFinish={onFinish}\n                style={{\n                  padding: \" 16px\",\n                  maxWidth: \"500px\",\n                  margin: \"auto\",\n                  backgroundColor: \"#eee\",\n                }}\n                ref={formRef}\n              >\n                <Typography.Title level={4}>Add new media</Typography.Title>\n                <Form.Item name=\"type\" rules={[{ required: true }]}>\n                  <Select placeholder=\"Choose type\">\n                    <Select.Option value=\"photo\">Photo</Select.Option>\n                    <Select.Option value=\"plan\">Plan</Select.Option>\n                    <Select.Option value=\"video\">Video</Select.Option>\n                  </Select>\n                </Form.Item>\n                <Form.Item name=\"name\" rules={[{ required: true }]}>\n                  <Input placeholder=\"Name\" />\n                </Form.Item>\n                <Form.Item name=\"url\" rules={[{ required: true }]}>\n                  <Input placeholder=\"Url\" />\n                </Form.Item>\n                <Form.Item name=\"thumbnail\" hidden>\n                  <Input placeholder=\"Thumbnail\" />\n                </Form.Item>\n                <Form.Item name=\"vimeo\" label=\"Vimeo\" valuePropName=\"checked\">\n                  <Checkbox />\n                </Form.Item>\n\n                <Form.Item>\n                  <Upload\n                    accept=\"image/*,video/*\"\n                    listType=\"picture\"\n                    maxCount={1}\n                    customRequest={customUpload}\n                  >\n                    <Button icon={<UploadOutlined />}>Upload (Max: 1)</Button>\n                  </Upload>\n                </Form.Item>\n\n                <Form.Item>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    style={{ width: \"100%\" }}\n                  >\n                    Add media\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          )}\n        </Content>\n      </Layout>\n    </LayoutHOC>\n  );\n};\n\nexport default MediaAdmin;\n","import LayoutHOC from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { Drawer, Layout, Menu, PageHeader } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport { useUser } from \"context/UserContext\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Properties from \"./Properties\";\nimport projectService from \"services/project.service\";\nimport propertyService from \"services/property.service\";\n\nconst PropertiesClient = (props) => {\n    const { id } = useParams();\n    const { logout, isLoggedIn, authData } = useUser();\n    const navigate = useNavigate();\n    const [project, setProject] = useState(null);\n    const [properties, setProperties] = useState(null);\n\n    const [openDrawer, setOpenDrawer] = useState(false);\n\n    useEffect(() => {\n        propertyService.getProperty(id).then((response) => {\n            setProperties(response.data);\n        });\n\n        projectService.getProject(id).then((response) => {\n            setProject(response.data);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (\n            !isLoggedIn ||\n            (!authData?.super &&\n                id.toString() !== authData?.projectId.toString())\n        ) {\n            logout();\n            navigate(\"/login\");\n            return null;\n        }\n    }, [isLoggedIn, authData?.super, authData?.projectId]);\n\n    return (\n        <LayoutHOC loading={!properties || !project}>\n            <Layout\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flex: 1,\n                    background: \"white\",\n                }}\n            >\n                <PageHeader\n                    onBack={() => setOpenDrawer(true)}\n                    backIcon={<MenuOutlined />}\n                    title={\"Appartments\"}\n                    style={{\n                        boxShadow: \"1px 1px 10px 1px #ccc\",\n                        position: \"fixed\",\n                        zIndex: 100,\n                        width: \"100%\",\n                    }}\n                />\n\n                <Content\n                    style={{\n                        flex: 1,\n                        overflow: \"auto\",\n                        padding: \"16px\",\n                        paddingTop: \"100px\",\n                        maxWidth: \"1200px\",\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Properties\n                        id={id}\n                        setProject={setProject}\n                        setProperties={setProperties}\n                        project={project}\n                        properties={properties}\n                    />\n                </Content>\n            </Layout>\n            <Drawer\n                title=\"Menu\"\n                placement=\"left\"\n                onClose={() => setOpenDrawer(false)}\n                visible={openDrawer}\n            >\n                <Menu\n                    mode=\"inline\"\n                    style={{ width: \"100%\" }}\n                    onClick={({ item, key }) => {\n                        setOpenDrawer(false);\n                        switch (key) {\n                            case \"logout\":\n                                logout();\n                                break;\n                            case \"visit\":\n                                navigate(`/p/${project.url}`);\n                                break;\n                            case \"analytics\":\n                                navigate(`/p-admin/${project.id}/analytics`);\n                                break;\n                            default:\n                                return;\n                        }\n                    }}\n                    activeKey=\"properties\"\n                    selectedKeys={[\"properties\"]}\n                >\n                    <Menu.Item key=\"properties\">Properties</Menu.Item>\n                    <Menu.Item key=\"analytics\">Analytics</Menu.Item>\n                    <Menu.Item key=\"visit\">Visit project</Menu.Item>\n                    <Menu.Item key=\"logout\">Logout</Menu.Item>\n                </Menu>\n            </Drawer>\n        </LayoutHOC>\n    );\n};\n\nexport default PropertiesClient;\n","const activateSVGSaver = (withStyles) => {\n  var doctype =\n    '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">';\n\n  window.URL = window.URL || window.webkitURL;\n\n  var body = document.body;\n  let emptySvg;\n\n  var prefix = {\n    xmlns: \"http://www.w3.org/2000/xmlns/\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    svg: \"http://www.w3.org/2000/svg\",\n  };\n\n  initialize();\n\n  function initialize() {\n    var documents = [window.document];\n    let SVGSources = [];\n    let iframes = document.querySelectorAll(\"iframe\");\n    let objects = document.querySelectorAll(\"object\");\n\n    // add empty svg element\n    emptySvg = window.document.createElementNS(prefix.svg, \"svg\");\n    window.document.body.appendChild(emptySvg);\n    var emptySvgDeclarationComputed = getComputedStyle(emptySvg);\n\n    [].forEach.call(iframes, function (el) {\n      try {\n        if (el.contentDocument) {\n          documents.push(el.contentDocument);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    });\n\n    [].forEach.call(objects, function (el) {\n      try {\n        if (el.contentDocument) {\n          documents.push(el.contentDocument);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    });\n\n    documents.forEach(function (doc) {\n      var newSources = getSources(doc, emptySvgDeclarationComputed);\n      // because of prototype on NYT pages\n      for (var i = 0; i < newSources.length; i++) {\n        SVGSources.push(newSources[i]);\n      }\n    });\n    if (SVGSources.length > 1) {\n      createPopover(SVGSources);\n    } else if (SVGSources.length > 0) {\n      download(SVGSources[0]);\n    } else {\n      alert(\"The Crowbar couldn’t find any SVG nodes.\");\n    }\n  }\n\n  function createPopover(sources) {\n    cleanup();\n\n    sources.forEach(function (s1) {\n      sources.forEach(function (s2) {\n        if (s1 !== s2) {\n          if (\n            Math.abs(s1.top - s2.top) < 38 &&\n            Math.abs(s1.left - s2.left) < 38\n          ) {\n            s2.top += 38;\n            s2.left += 38;\n          }\n        }\n      });\n    });\n\n    var buttonsContainer = document.createElement(\"div\");\n    body.appendChild(buttonsContainer);\n\n    buttonsContainer.setAttribute(\"class\", \"svg-crowbar\");\n    buttonsContainer.style[\"z-index\"] = 1e7;\n    buttonsContainer.style[\"position\"] = \"absolute\";\n    buttonsContainer.style[\"top\"] = 0;\n    buttonsContainer.style[\"left\"] = 0;\n\n    var background = document.createElement(\"div\");\n    body.appendChild(background);\n\n    background.setAttribute(\"class\", \"svg-crowbar\");\n    background.style[\"background\"] = \"rgba(255, 255, 255, 0.7)\";\n    background.style[\"position\"] = \"fixed\";\n    background.style[\"left\"] = 0;\n    background.style[\"top\"] = 0;\n    background.style[\"width\"] = \"100%\";\n    background.style[\"height\"] = \"100%\";\n\n    sources.forEach(function (d, i) {\n      var buttonWrapper = document.createElement(\"div\");\n      buttonsContainer.appendChild(buttonWrapper);\n      buttonWrapper.setAttribute(\"class\", \"svg-crowbar\");\n      buttonWrapper.style[\"position\"] = \"absolute\";\n      buttonWrapper.style[\"top\"] = d.top + document.body.scrollTop + \"px\";\n      buttonWrapper.style[\"left\"] = document.body.scrollLeft + d.left + \"px\";\n      buttonWrapper.style[\"padding\"] = \"4px\";\n      buttonWrapper.style[\"border-radius\"] = \"3px\";\n      buttonWrapper.style[\"color\"] = \"white\";\n      buttonWrapper.style[\"text-align\"] = \"center\";\n      buttonWrapper.style[\"font-family\"] = \"'Helvetica Neue'\";\n      buttonWrapper.style[\"background\"] = \"rgba(0, 0, 0, 0.8)\";\n      buttonWrapper.style[\"box-shadow\"] = \"0px 4px 18px rgba(0, 0, 0, 0.4)\";\n      buttonWrapper.style[\"cursor\"] = \"move\";\n      buttonWrapper.textContent =\n        \"SVG #\" +\n        i +\n        \": \" +\n        (d.id ? \"#\" + d.id : \"\") +\n        (d.class ? \".\" + d.class : \"\");\n\n      var button = document.createElement(\"button\");\n      buttonWrapper.appendChild(button);\n      button.setAttribute(\"data-source-id\", i);\n      button.style[\"width\"] = \"150px\";\n      button.style[\"font-size\"] = \"12px\";\n      button.style[\"line-height\"] = \"1.4em\";\n      button.style[\"margin\"] = \"5px 0 0 0\";\n      button.textContent = \"Download\";\n\n      button.onclick = function (el) {\n        // console.log(el, d, i, sources)\n        download(d);\n      };\n    });\n  }\n\n  function cleanup() {\n    var crowbarElements = document.querySelectorAll(\".svg-crowbar\");\n\n    [].forEach.call(crowbarElements, function (el) {\n      el.parentNode.removeChild(el);\n    });\n  }\n\n  function getSources(doc, emptySvgDeclarationComputed) {\n    var svgInfo = [],\n      svgs = doc.querySelectorAll(\"svg\");\n\n    [].forEach.call(svgs, function (svg) {\n      svg.setAttribute(\"version\", \"1.1\");\n\n      // removing attributes so they aren't doubled up\n      svg.removeAttribute(\"xmlns\");\n      svg.removeAttribute(\"xlink\");\n\n      // These are needed for the svg\n      if (!svg.hasAttributeNS(prefix.xmlns, \"xmlns\")) {\n        svg.setAttributeNS(prefix.xmlns, \"xmlns\", prefix.svg);\n      }\n\n      if (!svg.hasAttributeNS(prefix.xmlns, \"xmlns:xlink\")) {\n        svg.setAttributeNS(prefix.xmlns, \"xmlns:xlink\", prefix.xlink);\n      }\n      if (withStyles) setInlineStyles(svg, emptySvgDeclarationComputed);\n\n      var source = new XMLSerializer().serializeToString(svg);\n      var rect = svg.getBoundingClientRect();\n      svgInfo.push({\n        top: rect.top,\n        left: rect.left,\n        width: rect.width,\n        height: rect.height,\n        class: svg.getAttribute(\"class\"),\n        id: svg.getAttribute(\"id\"),\n        name: svg.getAttribute(\"name\"),\n        childElementCount: svg.childElementCount,\n        source: [doctype + source],\n      });\n    });\n    return svgInfo;\n  }\n\n  function download(source) {\n    var filename = \"untitled\";\n\n    if (source.name) {\n      filename = source.name;\n    } else if (source.id) {\n      filename = source.id;\n    } else if (source.class) {\n      filename = source.class;\n    } else if (window.document.title) {\n      filename = window.document.title\n        .replace(/[^a-z0-9]/gi, \"-\")\n        .toLowerCase();\n    }\n\n    var url = window.URL.createObjectURL(\n      new Blob(source.source, { type: \"text/xml\" })\n    );\n\n    var a = document.createElement(\"a\");\n    body.appendChild(a);\n    a.setAttribute(\"class\", \"svg-crowbar\");\n    a.setAttribute(\"download\", filename + \".svg\");\n    a.setAttribute(\"href\", url);\n    a.style[\"display\"] = \"none\";\n    a.click();\n\n    setTimeout(function () {\n      window.URL.revokeObjectURL(url);\n    }, 10);\n  }\n\n  function setInlineStyles(svg, emptySvgDeclarationComputed) {\n    function explicitlySetStyle(element) {\n      var cSSStyleDeclarationComputed = getComputedStyle(element);\n      var i, len, key, value;\n      var computedStyleStr = \"\";\n      for (i = 0, len = cSSStyleDeclarationComputed.length; i < len; i++) {\n        key = cSSStyleDeclarationComputed[i];\n        value = cSSStyleDeclarationComputed.getPropertyValue(key);\n        if (value !== emptySvgDeclarationComputed.getPropertyValue(key)) {\n          computedStyleStr += key + \":\" + value + \";\";\n        }\n      }\n      element.setAttribute(\"style\", computedStyleStr);\n    }\n    function traverse(obj) {\n      var tree = [];\n      tree.push(obj);\n      visit(obj);\n      function visit(node) {\n        if (node && node.hasChildNodes()) {\n          var child = node.firstChild;\n          while (child) {\n            if (child.nodeType === 1 && child.nodeName != \"SCRIPT\") {\n              tree.push(child);\n              visit(child);\n            }\n            child = child.nextSibling;\n          }\n        }\n      }\n      return tree;\n    }\n    // hardcode computed css styles inside svg\n    var allElements = traverse(svg);\n    var i = allElements.length;\n    while (i--) {\n      explicitlySetStyle(allElements[i]);\n    }\n  }\n};\n\nexport { activateSVGSaver };\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport LayoutHOC from \"layout/Layout\";\nimport { Button, Checkbox, Form, Input, Layout, PageHeader } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport projectService from \"services/project.service\";\nimport useLoginCheck from \"hooks/useLoginCheck\";\nimport toast from \"react-hot-toast\";\nimport \"video.js/dist/video-js.css\";\nimport { AppUI } from \"components/ProjectView/Components/ProjectUI/AppUI\";\nimport { ChromePicker } from \"react-color\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { activateSVGSaver } from \"helpers/activateSVGSaver\";\n\nconst UIAdmin = (props) => {\n  const { id } = useParams();\n  const [uiData, setUiData] = useState({});\n  const [loaded, setLoaded] = useState(false);\n  const [isSavingSVG, setIsSavingSVG] = useState(null);\n\n  const navigate = useNavigate();\n  const [project, setProject] = useState(null);\n  useLoginCheck();\n\n  useEffect(() => {\n    projectService.getProject(id).then((response) => {\n      setProject(response.data);\n      setLoaded(true);\n    });\n  }, []);\n\n  const onFinish = async () => {\n    const response = await projectService.saveProject(id, { uiData });\n    if (response.data) {\n      toast.success(\"Saved\");\n      setProject(response.data);\n    }\n  };\n\n  useEffect(() => {\n    setUiData({ ...(project?.uiData || {}), ...uiData });\n  }, [project?.uiData]);\n\n  const [hideHidden, setHideHidden] = useState(false);\n  const [hideControls, setHideControls] = useState(false);\n\n  useEffect(() => {\n    if (isSavingSVG) {\n      if (hideControls) {\n        activateSVGSaver(isSavingSVG.withStyles);\n      } else {\n        setHideControls(true);\n      }\n    }\n  }, [isSavingSVG, hideControls]);\n\n  return (\n    <LayoutHOC>\n      <Layout\n        style={{\n          height: \"100%\",\n          display: \"flex\",\n          flex: 1,\n          background: \"white\",\n        }}\n      >\n        <PageHeader\n          onBack={() => navigate(`/admin/projects/${id}`)}\n          title={`UI of project id: ${id}`}\n          style={{\n            boxShadow: \"1px 1px 10px 1px #ccc\",\n            position: \"fixed\",\n            zIndex: 100,\n            width: \"100%\",\n          }}\n        />\n\n        <Content\n          style={{\n            flex: 1,\n            overflow: \"auto\",\n            padding: \"16px\",\n            paddingTop: \"100px\",\n            paddingBottom: \"100px\",\n            maxWidth: \"1200px\",\n            width: \"100%\",\n            margin: \"auto\",\n          }}\n        >\n          {loaded && (\n            <Form\n              labelCol={{ span: 8 }}\n              wrapperCol={{ span: 16 }}\n              onFinish={onFinish}\n              onValuesChange={(values) => {\n                setUiData((prevState) => ({ ...prevState, ...values }));\n              }}\n              initialValues={{\n                background: uiData?.background?.hex,\n                onlyInterior: uiData?.onlyInterior,\n                rooms: uiData?.rooms || \"\",\n              }}\n            >\n              <Form.Item\n                label=\"Only interior\"\n                name=\"onlyInterior\"\n                valuePropName=\"checked\"\n              >\n                <Checkbox />\n              </Form.Item>\n              <Form.Item label=\"Hide hidden elements\">\n                <Checkbox onChange={(e) => setHideHidden(e.target.checked)} />\n              </Form.Item>\n              <Form.Item label=\"Hide controls\">\n                <Checkbox onChange={(e) => setHideControls(e.target.checked)} />\n              </Form.Item>\n              <Button\n                onClick={() => {\n                  setIsSavingSVG({});\n                }}\n              >\n                Save svg icons\n              </Button>\n              <Button\n                onClick={() => {\n                  setIsSavingSVG({ withStyles: true });\n                }}\n              >\n                Save svg icons with styles\n              </Button>\n              <Form.Item\n                label=\"Background\"\n                name=\"background\"\n                valuePropName=\"color\"\n              >\n                <ChromePicker disableAlpha />\n              </Form.Item>\n              <Form.Item label=\"Text\" name=\"textColor\" valuePropName=\"color\">\n                <ChromePicker disableAlpha />\n              </Form.Item>\n              <Form.Item\n                label=\"Buttons text\"\n                name=\"buttonColor\"\n                valuePropName=\"color\"\n              >\n                <ChromePicker disableAlpha />\n              </Form.Item>\n              <Form.Item\n                label=\"Buttons hover text\"\n                name=\"buttonHoverColor\"\n                valuePropName=\"color\"\n              >\n                <ChromePicker disableAlpha />\n              </Form.Item>\n              <Form.Item label=\"Rooms\" name=\"rooms\">\n                <CodeMirror height=\"200px\" />\n              </Form.Item>\n\n              <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Save\n                </Button>\n              </Form.Item>\n            </Form>\n          )}\n          <AppUI\n            project={project}\n            admin\n            uiData={uiData}\n            setUiData={setUiData}\n            hideHidden={hideHidden}\n            hideControls={hideControls}\n          />\n        </Content>\n      </Layout>\n    </LayoutHOC>\n  );\n};\n\nexport default UIAdmin;\n","import Layout from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\nimport projectService from \"services/project.service\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport Gallery from \"components/ProjectView/Components/ProjectUI/Bottom/Gallery\";\n\nconst GalleryPage = (props) => {\n  const [projectData, setProjectData] = useState(null);\n\n  const { featured } = props;\n\n  let { id } = useParams();\n\n  const [searchParams] = useSearchParams();\n  if (!id) {\n    id = searchParams.get(\"project\");\n  }\n\n  useEffect(() => {\n    setProjectData(null);\n    if (featured)\n      projectService.getFeaturedProject().then((response) => {\n        setProjectData({\n          ...response.data.project,\n          properties: response.data.properties,\n        });\n      });\n    else\n      projectService.getProjectByUrl(id).then((response) => {\n        setProjectData({\n          ...response.data.project,\n          properties: response.data.properties,\n        });\n      });\n  }, [id, featured]);\n  return (\n    <Layout loading={!projectData} isProject>\n      <Gallery\n        project={projectData}\n        activeUI={[]}\n        open\n        uiData={projectData?.uiData || {}}\n      />\n    </Layout>\n  );\n};\n\nexport default GalleryPage;\n","import history from \"helpers/history\";\nimport Layout from \"layout/Layout\";\nimport Admins from \"pages/Admins\";\nimport AnalyticClient from \"pages/AnalyticClient\";\nimport Constants from \"pages/Constants\";\nimport CreateProject from \"pages/CreateProject\";\nimport Login from \"pages/Login\";\nimport ProjectDetails from \"pages/ProjectDetails\";\nimport Projects from \"pages/Projects\";\nimport PropertiesAdmin from \"pages/PropertiesAdmin\";\nimport MediaAdmin from \"pages/MediaAdmin\";\nimport PropertiesClient from \"pages/PropertiesClient\";\nimport { lazy, Suspense } from \"react\";\nimport { Toaster } from \"react-hot-toast\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport ProjectA from \"pages/ProjectA\";\nimport UIAdmin from \"pages/UIAdmin\";\nimport GalleryPage from \"pages/GalleryPage\";\n\nconst Home = lazy(() => import(\"pages/Home\"));\nconst Project = lazy(() => import(\"pages/Project\"));\n\nconst ResetPassword = lazy(() => import(\"pages/ResetPassword\"));\n\nfunction App() {\n  return (\n    <BrowserRouter history={history}>\n      <Suspense fallback={<Layout>{/* <Spinner size={100} /> */}</Layout>}>\n        <>\n          <Toaster position=\"top-right\" />\n          <Routes>\n            <Route exact path={\"/\"} element={<Home />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route exact path=\"/admin\" element={<Projects />}></Route>\n            <Route\n              exact\n              path=\"/admin/projects/:id\"\n              element={<ProjectDetails />}\n            ></Route>\n            <Route\n              exact\n              path=\"/admin/projects/create\"\n              element={<CreateProject />}\n            ></Route>\n            <Route\n              exact\n              path=\"/admin/projects/:id/properties\"\n              element={<PropertiesAdmin />}\n            ></Route>\n            <Route\n              exact\n              path=\"/admin/projects/:id/media\"\n              element={<MediaAdmin />}\n            ></Route>\n            <Route\n              exact\n              path=\"/admin/projects/:id/ui\"\n              element={<UIAdmin />}\n            ></Route>\n            <Route exact path=\"/admin/contant\" element={<Constants />}></Route>\n            <Route exact path=\"/admin/admins\" element={<Admins />}></Route>\n\n            <Route path=\"/reset-password\" element={<ResetPassword />}></Route>\n            <Route exact path=\"/p/:id\" element={<Project />}></Route>\n            <Route exact path=\"/g/:id\" element={<GalleryPage />}></Route>\n            <Route exact path=\"/gallery\" element={<GalleryPage />}></Route>\n            <Route exact path=\"/pa\" element={<ProjectA />}></Route>\n            <Route\n              exact\n              path=\"/p-admin/:id\"\n              element={<PropertiesClient />}\n            ></Route>\n\n            <Route\n              exact\n              path=\"/p-admin/:id/analytics\"\n              element={<AnalyticClient />}\n            ></Route>\n\n            <Route path=\"*\" element={<h1>404 Error Found</h1>}></Route>\n          </Routes>\n        </>\n      </Suspense>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { UserProvider } from \"context/UserContext\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <HelmetProvider>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </HelmetProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}